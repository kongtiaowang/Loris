{"version":3,"sources":["webpack:///modules/candidate_parameters/js/probandInfo.js","webpack:///webpack/bootstrap 036ba4bef008cda13c0b?cb59****************","webpack:///./modules/candidate_parameters/jsx/probandInfo.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","Object","defineProperty","value","ProbandInfo","React","createClass","displayName","getInitialState","genderOptions","Male","Female","Data","formData","updateResult","errorMessage","isLoaded","loadedData","componentDidMount","that","this","$","ajax","props","dataURL","dataType","xhr","window","XMLHttpRequest","addEventListener","evt","setState","success","data","ProbandGender","ProbandDoB","ProbandDoB2","error","errorCode","errorMsg","setFormData","formElement","state","onSubmit","e","preventDefault","render","undefined","createElement","className","disabled","updateButton","loris","userHasPermission","ButtonElement","label","dobRequired","dob2Required","alertMessage","alertClass","class","role","ref","FormElement","name","handleSubmit","StaticElement","text","pscid","candID","SelectElement","options","onUserInput","required","DateElement","ageDifference","myFormData","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","dob1","dob2","alert","self","FormData","key","append","tabName","type","url","action","cache","contentType","processData","showAlertMessage","err","responseText","JSON","parse","message","refs","alertMsg","fadeTo","delay","slideUp","RProbandInfo","createFactory","default"],"mappings":"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","file":"./modules/candidate_parameters/js/probandInfo.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/* exported RProbandInfo */\n\t\n\tvar ProbandInfo = React.createClass({\n\t  displayName: \"ProbandInfo\",\n\t\n\t  getInitialState: function getInitialState() {\n\t    return {\n\t      genderOptions: {\n\t        Male: \"Male\",\n\t        Female: \"Female\"\n\t      },\n\t      Data: [],\n\t      formData: {},\n\t      updateResult: null,\n\t      errorMessage: null,\n\t      isLoaded: false,\n\t      loadedData: 0\n\t    };\n\t  },\n\t  componentDidMount: function componentDidMount() {\n\t    var that = this;\n\t    $.ajax(this.props.dataURL, {\n\t      dataType: 'json',\n\t      xhr: function xhr() {\n\t        var xhr = new window.XMLHttpRequest();\n\t        xhr.addEventListener(\"progress\", function (evt) {\n\t          that.setState({\n\t            loadedData: evt.loaded\n\t          });\n\t        });\n\t        return xhr;\n\t      },\n\t      success: function success(data) {\n\t        var formData = {\n\t          ProbandGender: data.ProbandGender,\n\t          ProbandDoB: data.ProbandDoB,\n\t          ProbandDoB2: data.ProbandDoB\n\t        };\n\t\n\t        that.setState({\n\t          formData: formData,\n\t          Data: data,\n\t          isLoaded: true\n\t        });\n\t      },\n\t      error: function error(data, errorCode, errorMsg) {\n\t        that.setState({\n\t          error: 'An error occurred when loading the form!'\n\t        });\n\t      }\n\t    });\n\t  },\n\t  setFormData: function setFormData(formElement, value) {\n\t    var formData = this.state.formData;\n\t    formData[formElement] = value;\n\t    this.setState({\n\t      formData: formData\n\t    });\n\t  },\n\t  onSubmit: function onSubmit(e) {\n\t    e.preventDefault();\n\t  },\n\t  render: function render() {\n\t    if (!this.state.isLoaded) {\n\t      if (this.state.error !== undefined) {\n\t        return React.createElement(\n\t          \"div\",\n\t          { className: \"alert alert-danger text-center\" },\n\t          React.createElement(\n\t            \"strong\",\n\t            null,\n\t            this.state.error\n\t          )\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        \"button\",\n\t        { className: \"btn-info has-spinner\" },\n\t        \"Loading\",\n\t        React.createElement(\"span\", {\n\t          className: \"glyphicon glyphicon-refresh glyphicon-refresh-animate\"\n\t        })\n\t      );\n\t    }\n\t\n\t    var disabled = true;\n\t    var updateButton = null;\n\t    if (loris.userHasPermission('candidate_parameter_edit')) {\n\t      disabled = false;\n\t      updateButton = React.createElement(ButtonElement, { label: \"Update\" });\n\t    }\n\t\n\t    var dobRequired = false;\n\t    var dob2Required = false;\n\t    if (this.state.formData.ProbandGender !== null) {\n\t      dobRequired = true;\n\t    }\n\t    if (this.state.formData.ProbandDoB !== null) {\n\t      dob2Required = true;\n\t    }\n\t\n\t    var alertMessage = \"\";\n\t    var alertClass = \"alert text-center hide\";\n\t    if (this.state.updateResult) {\n\t      if (this.state.updateResult === \"success\") {\n\t        alertClass = \"alert alert-success text-center\";\n\t        alertMessage = \"Update Successful!\";\n\t      } else if (this.state.updateResult === \"error\") {\n\t        var errorMessage = this.state.errorMessage;\n\t        alertClass = \"alert alert-danger text-center\";\n\t        alertMessage = errorMessage ? errorMessage : \"Failed to update!\";\n\t      }\n\t    }\n\t\n\t    return React.createElement(\n\t      \"div\",\n\t      { \"class\": \"row\" },\n\t      React.createElement(\n\t        \"div\",\n\t        { className: alertClass, role: \"alert\", ref: \"alert-message\" },\n\t        alertMessage\n\t      ),\n\t      React.createElement(\n\t        FormElement,\n\t        {\n\t          name: \"probandInfo\",\n\t          onSubmit: this.handleSubmit,\n\t          ref: \"form\",\n\t          \"class\": \"col-md-6\"\n\t        },\n\t        React.createElement(StaticElement, {\n\t          label: \"PSCID\",\n\t          text: this.state.Data.pscid\n\t        }),\n\t        React.createElement(StaticElement, {\n\t          label: \"DCCID\",\n\t          text: this.state.Data.candID\n\t        }),\n\t        React.createElement(SelectElement, {\n\t          label: \"Proband Gender\",\n\t          name: \"ProbandGender\",\n\t          options: this.state.genderOptions,\n\t          value: this.state.Data.ProbandGender,\n\t          onUserInput: this.setFormData,\n\t          ref: \"ProbandGender\",\n\t          disabled: disabled,\n\t          required: true\n\t        }),\n\t        React.createElement(DateElement, {\n\t          label: \"DoB Proband\",\n\t          name: \"ProbandDoB\",\n\t          value: this.state.Data.ProbandDoB,\n\t          onUserInput: this.setFormData,\n\t          ref: \"ProbandDoB\",\n\t          disabled: disabled,\n\t          required: dobRequired\n\t        }),\n\t        React.createElement(DateElement, {\n\t          label: \"Confirm DoB Proband\",\n\t          name: \"ProbandDoB2\",\n\t          value: this.state.Data.ProbandDoB,\n\t          onUserInput: this.setFormData,\n\t          ref: \"ProbandDoB2\",\n\t          disabled: disabled,\n\t          required: dob2Required\n\t        }),\n\t        React.createElement(StaticElement, {\n\t          label: \"Age Difference (months)\",\n\t          text: this.state.Data.ageDifference\n\t        }),\n\t        updateButton\n\t      )\n\t    );\n\t  },\n\t  /**\n\t  * Handles form submission\n\t  *\n\t  * @param {event} e - Form submission event\n\t  */\n\t  handleSubmit: function handleSubmit(e) {\n\t    e.preventDefault();\n\t    var myFormData = this.state.formData;\n\t    var today = new Date();\n\t    var dd = today.getDate();\n\t    var mm = today.getMonth() + 1; // January is 0!\n\t    var yyyy = today.getFullYear();\n\t    if (dd < 10) {\n\t      dd = '0' + dd;\n\t    }\n\t    if (mm < 10) {\n\t      mm = '0' + mm;\n\t    }\n\t    today = yyyy + '-' + mm + '-' + dd;\n\t    var dob1 = myFormData.ProbandDoB ? myFormData.ProbandDoB : null;\n\t    var dob2 = myFormData.ProbandDoB2 ? myFormData.ProbandDoB2 : null;\n\t    if (dob1 !== dob2) {\n\t      alert(\"DOB do not match!\");\n\t      return;\n\t    }\n\t\n\t    if (dob1 > today) {\n\t      alert(\"Consent to study date cannot be later than today!\");\n\t      return;\n\t    }\n\t\n\t    // Set form data\n\t    var self = this;\n\t    var formData = new FormData();\n\t    for (var key in myFormData) {\n\t      if (myFormData[key] !== \"\") {\n\t        formData.append(key, myFormData[key]);\n\t      }\n\t    }\n\t\n\t    formData.append('tab', this.props.tabName);\n\t    formData.append('candID', this.state.Data.candID);\n\t    $.ajax({\n\t      type: 'POST',\n\t      url: self.props.action,\n\t      data: formData,\n\t      cache: false,\n\t      contentType: false,\n\t      processData: false,\n\t      success: function success(data) {\n\t        self.setState({\n\t          updateResult: \"success\"\n\t        });\n\t        self.showAlertMessage();\n\t      },\n\t      error: function error(err) {\n\t        if (err.responseText !== \"\") {\n\t          var errorMessage = JSON.parse(err.responseText).message;\n\t          self.setState({\n\t            updateResult: \"error\",\n\t            errorMessage: errorMessage\n\t          });\n\t          self.showAlertMessage();\n\t        }\n\t      }\n\t    });\n\t  },\n\t  /**\n\t  * Display a success/error alert message after form submission\n\t  */\n\t  showAlertMessage: function showAlertMessage() {\n\t    var self = this;\n\t    if (this.refs[\"alert-message\"] === null) {\n\t      return;\n\t    }\n\t\n\t    var alertMsg = this.refs[\"alert-message\"];\n\t    $(alertMsg).fadeTo(2000, 500).delay(3000).slideUp(500, function () {\n\t      self.setState({\n\t        updateResult: null\n\t      });\n\t    });\n\t  }\n\t\n\t});\n\t\n\tvar RProbandInfo = React.createFactory(ProbandInfo);\n\t\n\twindow.ProbandInfo = ProbandInfo;\n\twindow.RProbandInfo = RProbandInfo;\n\t\n\texports.default = ProbandInfo;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// modules/candidate_parameters/js/probandInfo.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 036ba4bef008cda13c0b","/* exported RProbandInfo */\n\nvar ProbandInfo = React.createClass(\n  {\n    getInitialState: function() {\n      return {\n        genderOptions: {\n          Male: \"Male\",\n          Female: \"Female\"\n        },\n        Data: [],\n        formData: {},\n        updateResult: null,\n        errorMessage: null,\n        isLoaded: false,\n        loadedData: 0\n      };\n    },\n    componentDidMount: function() {\n      var that = this;\n      $.ajax(\n                this.props.dataURL,\n        {\n          dataType: 'json',\n          xhr: function() {\n            var xhr = new window.XMLHttpRequest();\n            xhr.addEventListener(\n                            \"progress\",\n                            function(evt) {\n                              that.setState(\n                                {\n                                  loadedData: evt.loaded\n                                }\n                                );\n                            }\n                        );\n            return xhr;\n          },\n          success: function(data) {\n            const formData = {\n              ProbandGender: data.ProbandGender,\n              ProbandDoB: data.ProbandDoB,\n              ProbandDoB2: data.ProbandDoB\n            };\n\n            that.setState(\n              {\n                formData,\n                Data: data,\n                isLoaded: true\n              }\n                        );\n          },\n          error: function(data, errorCode, errorMsg) {\n            that.setState(\n              {\n                error: 'An error occurred when loading the form!'\n              }\n                        );\n          }\n        }\n            );\n    },\n    setFormData: function(formElement,\n    value) {\n      var formData = this.state.formData;\n      formData[formElement] = value;\n      this.setState(\n        {\n          formData: formData\n        }\n            );\n    },\n    onSubmit: function(e) {\n      e.preventDefault();\n    },\n    render: function() {\n      if (!this.state.isLoaded) {\n        if (this.state.error !== undefined) {\n          return (\n                    <div className =\"alert alert-danger text-center\">\n                        <strong>\n                            {this.state.error}\n                        </strong>\n                    </div>\n                    );\n        }\n\n        return (\n                <button className =\"btn-info has-spinner\">\n                    Loading\n                    <span\n                        className =\"glyphicon glyphicon-refresh\n                        glyphicon-refresh-animate\"\n                    >\n                    </span>\n                </button>\n                );\n      }\n\n      var disabled = true;\n      var updateButton = null;\n      if (loris.userHasPermission('candidate_parameter_edit')) {\n        disabled = false;\n        updateButton = <ButtonElement label =\"Update\" />;\n      }\n\n      var dobRequired = false;\n      var dob2Required = false;\n      if (this.state.formData.ProbandGender !== null) {\n        dobRequired = true;\n      }\n      if (this.state.formData.ProbandDoB !== null) {\n        dob2Required = true;\n      }\n\n      var alertMessage = \"\";\n      var alertClass = \"alert text-center hide\";\n      if (this.state.updateResult) {\n        if (this.state.updateResult === \"success\") {\n          alertClass = \"alert alert-success text-center\";\n          alertMessage = \"Update Successful!\";\n        } else if (this.state.updateResult === \"error\") {\n          var errorMessage = this.state.errorMessage;\n          alertClass = \"alert alert-danger text-center\";\n          alertMessage = errorMessage ? errorMessage : \"Failed to update!\";\n        }\n      }\n\n      return (\n          <div class=\"row\">\n                <div className ={alertClass} role=\"alert\" ref=\"alert-message\">\n                    {alertMessage}\n                </div>\n                <FormElement\n                    name =\"probandInfo\"\n                    onSubmit ={this.handleSubmit}\n                    ref =\"form\"\n                    class =\"col-md-6\"\n                >\n                <StaticElement\n                    label =\"PSCID\"\n                    text ={this.state.Data.pscid}\n                />\n                <StaticElement\n                    label =\"DCCID\"\n                    text ={this.state.Data.candID}\n                />\n                <SelectElement\n                    label =\"Proband Gender\"\n                    name =\"ProbandGender\"\n                    options ={this.state.genderOptions}\n                    value ={this.state.Data.ProbandGender}\n                    onUserInput ={this.setFormData}\n                    ref =\"ProbandGender\"\n                    disabled ={disabled}\n                    required ={true}\n                />\n                <DateElement\n                    label =\"DoB Proband\"\n                    name =\"ProbandDoB\"\n                    value ={this.state.Data.ProbandDoB}\n                    onUserInput ={this.setFormData}\n                    ref =\"ProbandDoB\"\n                    disabled ={disabled}\n                    required ={dobRequired}\n                />\n                <DateElement\n                    label =\"Confirm DoB Proband\"\n                    name =\"ProbandDoB2\"\n                    value ={this.state.Data.ProbandDoB}\n                    onUserInput ={this.setFormData}\n                    ref =\"ProbandDoB2\"\n                    disabled ={disabled}\n                    required ={dob2Required}\n                />\n                <StaticElement\n                    label =\"Age Difference (months)\"\n                    text ={this.state.Data.ageDifference}\n                />\n                {updateButton}\n            </FormElement>\n                </div>\n            );\n    },\n        /**\n     * Handles form submission\n     *\n     * @param {event} e - Form submission event\n     */\n    handleSubmit: function(e) {\n      e.preventDefault();\n      var myFormData = this.state.formData;\n      var today = new Date();\n      var dd = today.getDate();\n      var mm = today.getMonth() + 1; // January is 0!\n      var yyyy = today.getFullYear();\n      if (dd < 10) {\n        dd = '0' + dd;\n      }\n      if (mm < 10) {\n        mm = '0' + mm;\n      }\n      today = yyyy + '-' + mm + '-' + dd;\n      var dob1 = myFormData.ProbandDoB ?\n            myFormData.ProbandDoB : null;\n      var dob2 = myFormData.ProbandDoB2 ?\n            myFormData.ProbandDoB2 : null;\n      if (dob1 !== dob2) {\n        alert(\"DOB do not match!\");\n        return;\n      }\n\n      if (dob1 > today) {\n        alert(\"Consent to study date cannot be later than today!\");\n        return;\n      }\n\n            // Set form data\n      var self = this;\n      var formData = new FormData();\n      for (var key in myFormData) {\n        if (myFormData[key] !== \"\") {\n          formData.append(key, myFormData[key]);\n        }\n      }\n\n      formData.append('tab', this.props.tabName);\n      formData.append('candID', this.state.Data.candID);\n      $.ajax(\n        {\n          type: 'POST',\n          url: self.props.action,\n          data: formData,\n          cache: false,\n          contentType: false,\n          processData: false,\n          success: function(data) {\n            self.setState(\n              {\n                updateResult: \"success\"\n              }\n                  );\n            self.showAlertMessage();\n          },\n          error: function(err) {\n            if (err.responseText !== \"\") {\n              var errorMessage = JSON.parse(err.responseText).message;\n              self.setState(\n                {\n                  updateResult: \"error\",\n                  errorMessage: errorMessage\n                }\n                      );\n              self.showAlertMessage();\n            }\n          }\n        }\n            );\n    },\n        /**\n     * Display a success/error alert message after form submission\n     */\n    showAlertMessage: function() {\n      var self = this;\n      if (this.refs[\"alert-message\"] === null) {\n        return;\n      }\n\n      var alertMsg = this.refs[\"alert-message\"];\n      $(alertMsg).fadeTo(2000, 500).delay(3000).slideUp(\n                500,\n                function() {\n                  self.setState(\n                    {\n                      updateResult: null\n                    }\n                    );\n                }\n            );\n    }\n\n  }\n);\n\nvar RProbandInfo = React.createFactory(ProbandInfo);\n\nwindow.ProbandInfo = ProbandInfo;\nwindow.RProbandInfo = RProbandInfo;\n\nexport default ProbandInfo;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/candidate_parameters/jsx/probandInfo.js"],"sourceRoot":""}