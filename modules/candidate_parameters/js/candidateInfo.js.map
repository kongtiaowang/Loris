{"version":3,"sources":["webpack:///modules/candidate_parameters/js/candidateInfo.js","webpack:///webpack/bootstrap 036ba4bef008cda13c0b?cb59************","webpack:///./modules/candidate_parameters/jsx/candidateInfo.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","Object","defineProperty","value","CandidateInfo","React","createClass","displayName","getInitialState","caveatOptions","true","false","Data","formData","updateResult","errorMessage","isLoaded","loadedData","componentDidMount","that","this","$","ajax","props","dataURL","dataType","xhr","window","XMLHttpRequest","addEventListener","evt","setState","success","data","flaggedCaveatemptor","flagged_caveatemptor","flaggedOther","flagged_other","flaggedReason","flagged_reason","otherOption","caveatReasonOptions","reason","error","errorCode","errorMsg","setFormData","formElement","state","refs","hasError","onSubmit","e","preventDefault","render","undefined","createElement","className","disabled","updateButton","loris","userHasPermission","ButtonElement","label","reasonDisabled","reasonRequired","reasonKey","specifyOther","otherDisabled","otherRequired","key","hasOwnProperty","TextareaElement","name","onUserInput","ref","required","extraParameterFields","extraParameters","extra_parameters","key2","paramTypeID","ParameterTypeID","parameter_values","Type","substring","types","slice","replace","split","selectOptions","key3","push","SelectElement","Description","options","DateElement","alertMessage","alertClass","class","role","FormElement","handleSubmit","StaticElement","text","pscid","candID","myFormData","self","FormData","append","tabName","type","url","action","cache","contentType","processData","showAlertMessage","err","responseText","JSON","parse","message","alertMsg","fadeTo","delay","slideUp","RCandidateInfo","createFactory","default"],"mappings":"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","file":"./modules/candidate_parameters/js/candidateInfo.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/* exported RCandidateInfo */\n\t\n\tvar CandidateInfo = React.createClass({\n\t  displayName: \"CandidateInfo\",\n\t\n\t  getInitialState: function getInitialState() {\n\t    return {\n\t      caveatOptions: {\n\t        true: \"True\",\n\t        false: \"False\"\n\t      },\n\t      Data: [],\n\t      formData: {},\n\t      updateResult: null,\n\t      errorMessage: null,\n\t      isLoaded: false,\n\t      loadedData: 0\n\t    };\n\t  },\n\t  componentDidMount: function componentDidMount() {\n\t    var that = this;\n\t    $.ajax(this.props.dataURL, {\n\t      dataType: 'json',\n\t      xhr: function xhr() {\n\t        var xhr = new window.XMLHttpRequest();\n\t        xhr.addEventListener(\"progress\", function (evt) {\n\t          that.setState({\n\t            loadedData: evt.loaded\n\t          });\n\t        });\n\t        return xhr;\n\t      },\n\t      success: function success(data) {\n\t        var formData = {\n\t          flaggedCaveatemptor: data.flagged_caveatemptor,\n\t          flaggedOther: data.flagged_other,\n\t          flaggedReason: data.flagged_reason\n\t        };\n\t\n\t        // Figure out what is the index of Other option\n\t        that.otherOption = null;\n\t        var caveatReasonOptions = data.caveatReasonOptions;\n\t        if (caveatReasonOptions) {\n\t          for (var reason in caveatReasonOptions) {\n\t            if (caveatReasonOptions[reason] === \"Other\") {\n\t              that.otherOption = reason;\n\t              break;\n\t            }\n\t          }\n\t        }\n\t\n\t        that.setState({\n\t          Data: data,\n\t          isLoaded: true,\n\t          formData: formData\n\t        });\n\t      },\n\t      error: function error(data, errorCode, errorMsg) {\n\t        that.setState({\n\t          error: 'An error occurred when loading the form!'\n\t        });\n\t      }\n\t    });\n\t  },\n\t  setFormData: function setFormData(formElement, value) {\n\t    var formData = this.state.formData;\n\t    formData[formElement] = value;\n\t\n\t    // Reset 'reason' field\n\t    if (formElement === \"flaggedCaveatemptor\" && value === \"false\") {\n\t      formData.flaggedReason = '';\n\t      formData.flaggedOther = '';\n\t      this.refs.flaggedReason.state.value = \"\";\n\t      this.refs.flaggedReason.state.hasError = false;\n\t      this.refs.flaggedOther.state.value = \"\";\n\t    }\n\t\n\t    // Reset 'other' field\n\t    if (formElement === \"flaggedReason\" && value !== this.otherOption) {\n\t      formData.flaggedOther = '';\n\t      this.refs.flaggedOther.state.value = \"\";\n\t    }\n\t\n\t    this.setState({\n\t      formData: formData\n\t    });\n\t  },\n\t  onSubmit: function onSubmit(e) {\n\t    e.preventDefault();\n\t  },\n\t  render: function render() {\n\t    if (!this.state.isLoaded) {\n\t      if (this.state.error !== undefined) {\n\t        return React.createElement(\n\t          \"div\",\n\t          { className: \"alert alert-danger text-center\" },\n\t          React.createElement(\n\t            \"strong\",\n\t            null,\n\t            this.state.error\n\t          )\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        \"button\",\n\t        { className: \"btn-info has-spinner\" },\n\t        \"Loading\",\n\t        React.createElement(\"span\", {\n\t          className: \"glyphicon glyphicon-refresh glyphicon-refresh-animate\" })\n\t      );\n\t    }\n\t\n\t    var disabled = true;\n\t    var updateButton = null;\n\t    if (loris.userHasPermission('candidate_parameter_edit')) {\n\t      disabled = false;\n\t      updateButton = React.createElement(ButtonElement, { label: \"Update\" });\n\t    }\n\t    var reasonDisabled = true;\n\t    var reasonRequired = false;\n\t    if (this.state.formData.flaggedCaveatemptor === \"true\") {\n\t      reasonDisabled = false;\n\t      reasonRequired = true;\n\t    }\n\t\n\t    var reasonKey = null;\n\t    var specifyOther = null;\n\t    var otherDisabled = true;\n\t    var otherRequired = false;\n\t    for (var key in this.state.Data.caveatReasonOptions) {\n\t      if (this.state.Data.caveatReasonOptions.hasOwnProperty(key)) {\n\t        if (this.state.Data.caveatReasonOptions[key] === \"Other\") {\n\t          reasonKey = key;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this.state.formData.flaggedReason === reasonKey) {\n\t      otherRequired = true;\n\t      otherDisabled = false;\n\t    }\n\t\n\t    if (this.state.formData.flaggedCaveatemptor === \"false\") {\n\t      reasonDisabled = true;\n\t      reasonRequired = false;\n\t      otherDisabled = true;\n\t      otherRequired = false;\n\t    }\n\t\n\t    if (reasonKey !== null) {\n\t      specifyOther = React.createElement(TextareaElement, {\n\t        label: \"If Other, please specify\",\n\t        name: \"flaggedOther\",\n\t        value: this.state.formData.flaggedOther,\n\t        onUserInput: this.setFormData,\n\t        ref: \"flaggedOther\",\n\t        disabled: otherDisabled,\n\t        required: otherRequired\n\t      });\n\t    }\n\t    var extraParameterFields = [];\n\t    var extraParameters = this.state.Data.extra_parameters;\n\t    for (var key2 in extraParameters) {\n\t      if (extraParameters.hasOwnProperty(key2)) {\n\t        var paramTypeID = extraParameters[key2].ParameterTypeID;\n\t        var name = 'PTID' + paramTypeID;\n\t        var value = this.state.Data.parameter_values[paramTypeID];\n\t\n\t        switch (extraParameters[key2].Type.substring(0, 3)) {\n\t          case \"enu\":\n\t            var types = extraParameters[key2].Type.substring(5);\n\t            types = types.slice(0, -1);\n\t            types = types.replace(/'/g, '');\n\t            types = types.split(',');\n\t            var selectOptions = [];\n\t            for (var key3 in types) {\n\t              if (types.hasOwnProperty(key3)) {\n\t                selectOptions[types[key3]] = types[key3];\n\t              }\n\t            }\n\t\n\t            extraParameterFields.push(React.createElement(SelectElement, {\n\t              label: extraParameters[key2].Description,\n\t              name: name,\n\t              options: selectOptions,\n\t              value: value,\n\t              onUserInput: this.setFormData,\n\t              ref: name,\n\t              disabled: disabled\n\t            }));\n\t            break;\n\t          case \"dat\":\n\t            extraParameterFields.push(React.createElement(DateElement, {\n\t              label: extraParameters[key2].Description,\n\t              name: name,\n\t              value: value,\n\t              onUserInput: this.setFormData,\n\t              ref: name,\n\t              disabled: disabled\n\t            }));\n\t            break;\n\t          default:\n\t            extraParameterFields.push(React.createElement(TextareaElement, {\n\t              label: extraParameters[key2].Description,\n\t              name: name,\n\t              value: value,\n\t              onUserInput: this.setFormData,\n\t              ref: name,\n\t              disabled: disabled\n\t            }));\n\t        }\n\t      }\n\t    }\n\t\n\t    var alertMessage = \"\";\n\t    var alertClass = \"alert text-center hide\";\n\t    if (this.state.updateResult) {\n\t      if (this.state.updateResult === \"success\") {\n\t        alertClass = \"alert alert-success text-center\";\n\t        alertMessage = \"Update Successful!\";\n\t      } else if (this.state.updateResult === \"error\") {\n\t        var errorMessage = this.state.errorMessage;\n\t        alertClass = \"alert alert-danger text-center\";\n\t        alertMessage = errorMessage ? errorMessage : \"Failed to update!\";\n\t      }\n\t    }\n\t\n\t    return React.createElement(\n\t      \"div\",\n\t      { \"class\": \"row\" },\n\t      React.createElement(\n\t        \"div\",\n\t        { className: alertClass, role: \"alert\", ref: \"alert-message\" },\n\t        alertMessage\n\t      ),\n\t      React.createElement(\n\t        FormElement,\n\t        {\n\t          name: \"candidateInfo\",\n\t          onSubmit: this.handleSubmit,\n\t          ref: \"form\",\n\t          \"class\": \"col-md-6\"\n\t        },\n\t        React.createElement(StaticElement, {\n\t          label: \"PSCID\",\n\t          text: this.state.Data.pscid\n\t        }),\n\t        React.createElement(StaticElement, {\n\t          label: \"DCCID\",\n\t          text: this.state.Data.candID\n\t        }),\n\t        React.createElement(SelectElement, {\n\t          label: \"Caveat Emptor Flag for Candidate\",\n\t          name: \"flaggedCaveatemptor\",\n\t          options: this.state.caveatOptions,\n\t          value: this.state.formData.flaggedCaveatemptor,\n\t          onUserInput: this.setFormData,\n\t          ref: \"flaggedCaveatemptor\",\n\t          disabled: disabled,\n\t          required: true\n\t        }),\n\t        React.createElement(SelectElement, {\n\t          label: \"Reason for Caveat Emptor Flag\",\n\t          name: \"flaggedReason\",\n\t          options: this.state.Data.caveatReasonOptions,\n\t          value: this.state.formData.flaggedReason,\n\t          onUserInput: this.setFormData,\n\t          ref: \"flaggedReason\",\n\t          disabled: reasonDisabled,\n\t          required: reasonRequired\n\t        }),\n\t        specifyOther,\n\t        extraParameterFields,\n\t        updateButton\n\t      )\n\t    );\n\t  },\n\t  /**\n\t   * Handles form submission\n\t   *\n\t   * @param {event} e - Form submission event\n\t   */\n\t  handleSubmit: function handleSubmit(e) {\n\t    e.preventDefault();\n\t    var myFormData = this.state.formData;\n\t    // Set form data and upload the media file\n\t    var self = this;\n\t    var formData = new FormData();\n\t    for (var key in myFormData) {\n\t      if (myFormData.hasOwnProperty(key)) {\n\t        if (myFormData[key] !== \"\") {\n\t          formData.append(key, myFormData[key]);\n\t        }\n\t      }\n\t    }\n\t\n\t    formData.append('tab', this.props.tabName);\n\t    formData.append('candID', this.state.Data.candID);\n\t    $.ajax({\n\t      type: 'POST',\n\t      url: self.props.action,\n\t      data: formData,\n\t      cache: false,\n\t      contentType: false,\n\t      processData: false,\n\t      success: function success(data) {\n\t        self.setState({\n\t          updateResult: \"success\"\n\t        });\n\t        self.showAlertMessage();\n\t      },\n\t      error: function error(err) {\n\t        if (err.responseText !== \"\") {\n\t          var errorMessage = JSON.parse(err.responseText).message;\n\t          self.setState({\n\t            updateResult: \"error\",\n\t            errorMessage: errorMessage\n\t          });\n\t          self.showAlertMessage();\n\t        }\n\t      }\n\t\n\t    });\n\t  },\n\t  /**\n\t   * Display a success/error alert message after form submission\n\t   */\n\t  showAlertMessage: function showAlertMessage() {\n\t    var self = this;\n\t    if (this.refs[\"alert-message\"] === null) {\n\t      return;\n\t    }\n\t\n\t    var alertMsg = this.refs[\"alert-message\"];\n\t    $(alertMsg).fadeTo(2000, 500).delay(3000).slideUp(500, function () {\n\t      self.setState({\n\t        updateResult: null\n\t      });\n\t    });\n\t  }\n\t\n\t});\n\t\n\tvar RCandidateInfo = React.createFactory(CandidateInfo);\n\t\n\twindow.CandidateInfo = CandidateInfo;\n\twindow.RCandidateInfo = RCandidateInfo;\n\t\n\texports.default = CandidateInfo;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// modules/candidate_parameters/js/candidateInfo.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 036ba4bef008cda13c0b","/* exported RCandidateInfo */\n\nvar CandidateInfo = React.createClass(\n  {\n    getInitialState: function() {\n      return {\n        caveatOptions: {\n          true: \"True\",\n          false: \"False\"\n        },\n        Data: [],\n        formData: {},\n        updateResult: null,\n        errorMessage: null,\n        isLoaded: false,\n        loadedData: 0\n      };\n    },\n    componentDidMount: function() {\n      var that = this;\n      $.ajax(\n        this.props.dataURL,\n        {\n          dataType: 'json',\n          xhr: function() {\n            var xhr = new window.XMLHttpRequest();\n            xhr.addEventListener(\n              \"progress\",\n              function(evt) {\n                that.setState(\n                  {\n                    loadedData: evt.loaded\n                  }\n                );\n              }\n            );\n            return xhr;\n          },\n          success: function(data) {\n            var formData = {\n              flaggedCaveatemptor: data.flagged_caveatemptor,\n              flaggedOther: data.flagged_other,\n              flaggedReason: data.flagged_reason\n            };\n\n            // Figure out what is the index of Other option\n            that.otherOption = null;\n            var caveatReasonOptions = data.caveatReasonOptions;\n            if (caveatReasonOptions) {\n              for (var reason in caveatReasonOptions) {\n                if (caveatReasonOptions[reason] === \"Other\") {\n                  that.otherOption = reason;\n                  break;\n                }\n              }\n            }\n\n            that.setState(\n              {\n                Data: data,\n                isLoaded: true,\n                formData: formData\n              }\n            );\n          },\n          error: function(data, errorCode, errorMsg) {\n            that.setState(\n              {\n                error: 'An error occurred when loading the form!'\n              }\n            );\n          }\n        }\n      );\n    },\n    setFormData: function(formElement, value) {\n      var formData = this.state.formData;\n      formData[formElement] = value;\n\n      // Reset 'reason' field\n      if (formElement === \"flaggedCaveatemptor\" && value === \"false\") {\n        formData.flaggedReason = '';\n        formData.flaggedOther = '';\n        this.refs.flaggedReason.state.value = \"\";\n        this.refs.flaggedReason.state.hasError = false;\n        this.refs.flaggedOther.state.value = \"\";\n      }\n\n      // Reset 'other' field\n      if (formElement === \"flaggedReason\" && value !== this.otherOption) {\n        formData.flaggedOther = '';\n        this.refs.flaggedOther.state.value = \"\";\n      }\n\n      this.setState({\n        formData: formData\n      });\n    },\n    onSubmit: function(e) {\n      e.preventDefault();\n    },\n    render: function() {\n      if (!this.state.isLoaded) {\n        if (this.state.error !== undefined) {\n          return (\n            <div className=\"alert alert-danger text-center\">\n              <strong>\n                {this.state.error}\n              </strong>\n            </div>\n          );\n        }\n\n        return (\n          <button className=\"btn-info has-spinner\">\n            Loading\n            <span\n              className=\"glyphicon glyphicon-refresh glyphicon-refresh-animate\">\n            </span>\n          </button>\n        );\n      }\n\n      var disabled = true;\n      var updateButton = null;\n      if (loris.userHasPermission('candidate_parameter_edit')) {\n        disabled = false;\n        updateButton = <ButtonElement label=\"Update\"/>;\n      }\n      var reasonDisabled = true;\n      var reasonRequired = false;\n      if (this.state.formData.flaggedCaveatemptor === \"true\") {\n        reasonDisabled = false;\n        reasonRequired = true;\n      }\n\n      var reasonKey = null;\n      var specifyOther = null;\n      var otherDisabled = true;\n      var otherRequired = false;\n      for (var key in this.state.Data.caveatReasonOptions) {\n        if (this.state.Data.caveatReasonOptions.hasOwnProperty(key)) {\n          if (this.state.Data.caveatReasonOptions[key] === \"Other\") {\n            reasonKey = key;\n            break;\n          }\n        }\n      }\n\n      if (this.state.formData.flaggedReason === reasonKey) {\n        otherRequired = true;\n        otherDisabled = false;\n      }\n\n      if (this.state.formData.flaggedCaveatemptor === \"false\") {\n        reasonDisabled = true;\n        reasonRequired = false;\n        otherDisabled = true;\n        otherRequired = false;\n      }\n\n      if (reasonKey !== null) {\n        specifyOther = <TextareaElement\n          label=\"If Other, please specify\"\n          name=\"flaggedOther\"\n          value={this.state.formData.flaggedOther}\n          onUserInput={this.setFormData}\n          ref=\"flaggedOther\"\n          disabled={otherDisabled}\n          required={otherRequired}\n        />;\n      }\n      var extraParameterFields = [];\n      var extraParameters = this.state.Data.extra_parameters;\n      for (var key2 in extraParameters) {\n        if (extraParameters.hasOwnProperty(key2)) {\n          var paramTypeID = extraParameters[key2].ParameterTypeID;\n          var name = 'PTID' + paramTypeID;\n          var value = this.state.Data.parameter_values[paramTypeID];\n\n          switch (extraParameters[key2].Type.substring(0, 3)) {\n            case \"enu\":\n              var types = extraParameters[key2].Type.substring(5);\n              types = types.slice(0, -1);\n              types = types.replace(/'/g, '');\n              types = types.split(',');\n              var selectOptions = [];\n              for (var key3 in types) {\n                if (types.hasOwnProperty(key3)) {\n                  selectOptions[types[key3]] = types[key3];\n                }\n              }\n\n              extraParameterFields.push(\n                <SelectElement\n                  label={extraParameters[key2].Description}\n                  name={name}\n                  options={selectOptions}\n                  value={value}\n                  onUserInput={this.setFormData}\n                  ref={name}\n                  disabled={disabled}\n                />\n              );\n              break;\n            case \"dat\":\n              extraParameterFields.push(\n                <DateElement\n                  label={extraParameters[key2].Description}\n                  name={name}\n                  value={value}\n                  onUserInput={this.setFormData}\n                  ref={name}\n                  disabled={disabled}\n                />\n              );\n              break;\n            default:\n              extraParameterFields.push(\n                <TextareaElement\n                  label={extraParameters[key2].Description}\n                  name={name}\n                  value={value}\n                  onUserInput={this.setFormData}\n                  ref={name}\n                  disabled={disabled}\n                />\n              );\n          }\n        }\n      }\n\n      var alertMessage = \"\";\n      var alertClass = \"alert text-center hide\";\n      if (this.state.updateResult) {\n        if (this.state.updateResult === \"success\") {\n          alertClass = \"alert alert-success text-center\";\n          alertMessage = \"Update Successful!\";\n        } else if (this.state.updateResult === \"error\") {\n          var errorMessage = this.state.errorMessage;\n          alertClass = \"alert alert-danger text-center\";\n          alertMessage = errorMessage ? errorMessage : \"Failed to update!\";\n        }\n      }\n\n      return (\n        <div class=\"row\">\n          <div className={alertClass} role=\"alert\" ref=\"alert-message\">\n            {alertMessage}\n          </div>\n          <FormElement\n            name=\"candidateInfo\"\n            onSubmit={this.handleSubmit}\n            ref=\"form\"\n            class=\"col-md-6\"\n          >\n            <StaticElement\n              label=\"PSCID\"\n              text={this.state.Data.pscid}\n            />\n            <StaticElement\n              label=\"DCCID\"\n              text={this.state.Data.candID}\n            />\n            <SelectElement\n              label=\"Caveat Emptor Flag for Candidate\"\n              name=\"flaggedCaveatemptor\"\n              options={this.state.caveatOptions}\n              value={this.state.formData.flaggedCaveatemptor}\n              onUserInput={this.setFormData}\n              ref=\"flaggedCaveatemptor\"\n              disabled={disabled}\n              required={true}\n            />\n            <SelectElement\n              label=\"Reason for Caveat Emptor Flag\"\n              name=\"flaggedReason\"\n              options={this.state.Data.caveatReasonOptions}\n              value={this.state.formData.flaggedReason}\n              onUserInput={this.setFormData}\n              ref=\"flaggedReason\"\n              disabled={reasonDisabled}\n              required={reasonRequired}\n            />\n            {specifyOther}\n            {extraParameterFields}\n            {updateButton}\n          </FormElement>\n        </div>\n      );\n    },\n    /**\n     * Handles form submission\n     *\n     * @param {event} e - Form submission event\n     */\n    handleSubmit: function(e) {\n      e.preventDefault();\n      var myFormData = this.state.formData;\n      // Set form data and upload the media file\n      var self = this;\n      var formData = new FormData();\n      for (var key in myFormData) {\n        if (myFormData.hasOwnProperty(key)) {\n          if (myFormData[key] !== \"\") {\n            formData.append(key, myFormData[key]);\n          }\n        }\n      }\n\n      formData.append('tab', this.props.tabName);\n      formData.append('candID', this.state.Data.candID);\n      $.ajax(\n        {\n          type: 'POST',\n          url: self.props.action,\n          data: formData,\n          cache: false,\n          contentType: false,\n          processData: false,\n          success: function(data) {\n            self.setState(\n              {\n                updateResult: \"success\"\n              }\n            );\n            self.showAlertMessage();\n          },\n          error: function(err) {\n            if (err.responseText !== \"\") {\n              var errorMessage = JSON.parse(err.responseText).message;\n              self.setState(\n                {\n                  updateResult: \"error\",\n                  errorMessage: errorMessage\n                }\n              );\n              self.showAlertMessage();\n            }\n          }\n\n        }\n      );\n    },\n    /**\n     * Display a success/error alert message after form submission\n     */\n    showAlertMessage: function() {\n      var self = this;\n      if (this.refs[\"alert-message\"] === null) {\n        return;\n      }\n\n      var alertMsg = this.refs[\"alert-message\"];\n      $(alertMsg).fadeTo(2000, 500).delay(3000).slideUp(\n        500,\n        function() {\n          self.setState(\n            {\n              updateResult: null\n            }\n          );\n        }\n      );\n    }\n\n  }\n);\n\nvar RCandidateInfo = React.createFactory(CandidateInfo);\n\nwindow.CandidateInfo = CandidateInfo;\nwindow.RCandidateInfo = RCandidateInfo;\n\nexport default CandidateInfo;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/candidate_parameters/jsx/candidateInfo.js"],"sourceRoot":""}