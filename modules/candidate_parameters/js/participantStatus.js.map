{"version":3,"sources":["webpack:///modules/candidate_parameters/js/participantStatus.js","webpack:///webpack/bootstrap 036ba4bef008cda13c0b?cb59***************","webpack:///./modules/candidate_parameters/jsx/participantStatus.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","Object","defineProperty","value","ParticipantStatus","React","createClass","displayName","getInitialState","Data","formData","updateResult","errorMessage","isLoaded","loadedData","componentDidMount","that","this","$","ajax","props","dataURL","dataType","xhr","window","XMLHttpRequest","addEventListener","evt","setState","success","data","participantStatus","participantSuboptions","reasonSpecify","error","errorCode","errorMsg","setFormData","formElement","state","required","indexOf","onSubmit","e","preventDefault","render","undefined","createElement","className","disabled","updateButton","loris","userHasPermission","ButtonElement","label","subOptions","suboptionsRequired","parentIDs","formattedHistory","statusKey","history","hasOwnProperty","line","field","current","push","alertMessage","alertClass","class","role","ref","FormElement","name","handleSubmit","StaticElement","text","pscid","candID","SelectElement","options","statusOptions","onUserInput","TextareaElement","myFormData","self","FormData","key","append","tabName","type","url","action","cache","contentType","processData","showAlertMessage","err","responseText","JSON","parse","message","refs","alertMsg","fadeTo","delay","slideUp","RParticipantStatus","createFactory","default"],"mappings":"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","file":"./modules/candidate_parameters/js/participantStatus.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/* exported RParticipantStatus */\n\t\n\tvar ParticipantStatus = React.createClass({\n\t  displayName: 'ParticipantStatus',\n\t\n\t  getInitialState: function getInitialState() {\n\t    return {\n\t      Data: [],\n\t      formData: {},\n\t      updateResult: null,\n\t      errorMessage: null,\n\t      isLoaded: false,\n\t      loadedData: 0\n\t    };\n\t  },\n\t  componentDidMount: function componentDidMount() {\n\t    var that = this;\n\t    $.ajax(this.props.dataURL, {\n\t      dataType: 'json',\n\t      xhr: function xhr() {\n\t        var xhr = new window.XMLHttpRequest();\n\t        xhr.addEventListener(\"progress\", function (evt) {\n\t          that.setState({\n\t            loadedData: evt.loaded\n\t          });\n\t        });\n\t        return xhr;\n\t      },\n\t      success: function success(data) {\n\t        var formData = {};\n\t        formData.participantStatus = data.participantStatus;\n\t        formData.participantSuboptions = data.participantSuboptions;\n\t        formData.reasonSpecify = data.reasonSpecify;\n\t\n\t        that.setState({\n\t          Data: data,\n\t          formData: formData,\n\t          isLoaded: true\n\t        });\n\t      },\n\t      error: function error(data, errorCode, errorMsg) {\n\t        that.setState({\n\t          error: 'An error occurred when loading the form!'\n\t        });\n\t      }\n\t    });\n\t  },\n\t  setFormData: function setFormData(formElement, value) {\n\t    var formData = this.state.formData;\n\t    var required = this.state.Data.required;\n\t    if (formElement === \"participantStatus\" && required.indexOf(value) < 0) {\n\t      formData.participantSuboptions = \"\";\n\t    }\n\t    formData[formElement] = value;\n\t    this.setState({\n\t      formData: formData\n\t    });\n\t  },\n\t  onSubmit: function onSubmit(e) {\n\t    e.preventDefault();\n\t  },\n\t  render: function render() {\n\t    if (!this.state.isLoaded) {\n\t      if (this.state.error !== undefined) {\n\t        return React.createElement(\n\t          'div',\n\t          { className: 'alert alert-danger text-center' },\n\t          React.createElement(\n\t            'strong',\n\t            null,\n\t            this.state.error\n\t          )\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        'button',\n\t        { className: 'btn-info has-spinner' },\n\t        'Loading',\n\t        React.createElement('span', {\n\t          className: 'glyphicon glyphicon-refresh glyphicon-refresh-animate'\n\t        })\n\t      );\n\t    }\n\t\n\t    var disabled = true;\n\t    var updateButton = null;\n\t    if (loris.userHasPermission('candidate_parameter_edit')) {\n\t      disabled = false;\n\t      updateButton = React.createElement(ButtonElement, { label: 'Update' });\n\t    }\n\t\n\t    var required = this.state.Data.required;\n\t    var subOptions = [];\n\t    var suboptionsRequired = false;\n\t    var participantStatus = this.state.formData.participantStatus ? this.state.formData.participantStatus : this.state.Data.participantStatus;\n\t\n\t    if (participantStatus && required.indexOf(participantStatus) > -1) {\n\t      subOptions = this.state.Data.parentIDs[participantStatus];\n\t      suboptionsRequired = true;\n\t    }\n\t\n\t    var formattedHistory = [];\n\t    for (var statusKey in this.state.Data.history) {\n\t      if (this.state.Data.history.hasOwnProperty(statusKey)) {\n\t        var line = \"\";\n\t        for (var field in this.state.Data.history[statusKey]) {\n\t          if (this.state.Data.history[statusKey].hasOwnProperty(field)) {\n\t            var current = this.state.Data.history[statusKey][field];\n\t            if (current !== null) {\n\t              switch (field) {\n\t                case 'data_entry_date':\n\t                  line += \"[\";\n\t                  line += current;\n\t                  line += \"] \";\n\t                  break;\n\t                case 'entry_staff':\n\t                  line += current;\n\t                  line += \" \";\n\t                  break;\n\t                case 'status':\n\t                  line += \" Status: \";\n\t                  line += current;\n\t                  line += \" \";\n\t                  break;\n\t                case 'suboption':\n\t                  line += \"Details: \";\n\t                  line += current;\n\t                  line += \" \";\n\t                  break;\n\t                case 'reason_specify':\n\t                  line += \"Comments: \";\n\t                  line += current;\n\t                  line += \" \";\n\t                  break;\n\t                default:\n\t              }\n\t            }\n\t          }\n\t        }\n\t        formattedHistory.push(React.createElement(\n\t          'p',\n\t          null,\n\t          line\n\t        ));\n\t      }\n\t    }\n\t\n\t    var alertMessage = \"\";\n\t    var alertClass = \"alert text-center hide\";\n\t    if (this.state.updateResult) {\n\t      if (this.state.updateResult === \"success\") {\n\t        alertClass = \"alert alert-success text-center\";\n\t        alertMessage = \"Update Successful!\";\n\t      } else if (this.state.updateResult === \"error\") {\n\t        var errorMessage = this.state.errorMessage;\n\t        alertClass = \"alert alert-danger text-center\";\n\t        alertMessage = errorMessage ? errorMessage : \"Failed to update!\";\n\t      }\n\t    }\n\t\n\t    return React.createElement(\n\t      'div',\n\t      { 'class': 'row' },\n\t      React.createElement(\n\t        'div',\n\t        { className: alertClass, role: 'alert', ref: 'alert-message' },\n\t        alertMessage\n\t      ),\n\t      React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'participantStatus',\n\t          onSubmit: this.handleSubmit,\n\t          ref: 'form',\n\t          'class': 'col-md-6'\n\t        },\n\t        React.createElement(StaticElement, {\n\t          label: 'PSCID',\n\t          text: this.state.Data.pscid\n\t        }),\n\t        React.createElement(StaticElement, {\n\t          label: 'DCCID',\n\t          text: this.state.Data.candID\n\t        }),\n\t        React.createElement(SelectElement, {\n\t          label: 'Participant Status',\n\t          name: 'participantStatus',\n\t          options: this.state.Data.statusOptions,\n\t          value: this.state.formData.participantStatus,\n\t          onUserInput: this.setFormData,\n\t          ref: 'participantStatus',\n\t          disabled: disabled,\n\t          required: true\n\t        }),\n\t        React.createElement(SelectElement, {\n\t          label: 'Specify Reason',\n\t          name: 'participantSuboptions',\n\t          options: subOptions,\n\t          value: this.state.formData.participantSuboptions,\n\t          onUserInput: this.setFormData,\n\t          ref: 'participantSuboptions',\n\t          disabled: !suboptionsRequired,\n\t          required: suboptionsRequired\n\t        }),\n\t        React.createElement(TextareaElement, {\n\t          label: 'Comments',\n\t          name: 'reasonSpecify',\n\t          value: this.state.formData.reasonSpecify,\n\t          onUserInput: this.setFormData,\n\t          ref: 'reasonSpecify',\n\t          disabled: disabled,\n\t          required: false\n\t        }),\n\t        updateButton,\n\t        formattedHistory\n\t      )\n\t    );\n\t  },\n\t  /**\n\t  * Handles form submission\n\t  *\n\t  * @param {event} e - Form submission event\n\t  */\n\t  handleSubmit: function handleSubmit(e) {\n\t    e.preventDefault();\n\t    var myFormData = this.state.formData;\n\t    var self = this;\n\t    var formData = new FormData();\n\t    for (var key in myFormData) {\n\t      if (myFormData[key] !== \"\") {\n\t        formData.append(key, myFormData[key]);\n\t      }\n\t    }\n\t\n\t    formData.append('tab', this.props.tabName);\n\t    formData.append('candID', this.state.Data.candID);\n\t    $.ajax({\n\t      type: 'POST',\n\t      url: self.props.action,\n\t      data: formData,\n\t      cache: false,\n\t      contentType: false,\n\t      processData: false,\n\t      success: function success(data) {\n\t        self.setState({\n\t          updateResult: \"success\"\n\t        });\n\t        self.showAlertMessage();\n\t      },\n\t      error: function error(err) {\n\t        if (err.responseText !== \"\") {\n\t          var errorMessage = JSON.parse(err.responseText).message;\n\t          self.setState({\n\t            updateResult: \"error\",\n\t            errorMessage: errorMessage\n\t          });\n\t          self.showAlertMessage();\n\t        }\n\t      }\n\t    });\n\t  },\n\t  /**\n\t  * Display a success/error alert message after form submission\n\t  */\n\t  showAlertMessage: function showAlertMessage() {\n\t    var self = this;\n\t    if (this.refs[\"alert-message\"] === null) {\n\t      return;\n\t    }\n\t\n\t    var alertMsg = this.refs[\"alert-message\"];\n\t    $(alertMsg).fadeTo(2000, 500).delay(3000).slideUp(500, function () {\n\t      self.setState({\n\t        updateResult: null\n\t      });\n\t    });\n\t  }\n\t\n\t});\n\t\n\tvar RParticipantStatus = React.createFactory(ParticipantStatus);\n\t\n\twindow.ParticipantStatus = ParticipantStatus;\n\twindow.RParticipantStatus = RParticipantStatus;\n\t\n\texports.default = ParticipantStatus;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// modules/candidate_parameters/js/participantStatus.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 036ba4bef008cda13c0b","/* exported RParticipantStatus */\n\nvar ParticipantStatus = React.createClass(\n  {\n    getInitialState: function() {\n      return {\n        Data: [],\n        formData: {},\n        updateResult: null,\n        errorMessage: null,\n        isLoaded: false,\n        loadedData: 0\n      };\n    },\n    componentDidMount: function() {\n      var that = this;\n      $.ajax(\n                this.props.dataURL,\n        {\n          dataType: 'json',\n          xhr: function() {\n            var xhr = new window.XMLHttpRequest();\n            xhr.addEventListener(\n                            \"progress\",\n                            function(evt) {\n                              that.setState(\n                                {\n                                  loadedData: evt.loaded\n                                }\n                                );\n                            }\n                        );\n            return xhr;\n          },\n          success: function(data) {\n            let formData = {};\n            formData.participantStatus = data.participantStatus;\n            formData.participantSuboptions = data.participantSuboptions;\n            formData.reasonSpecify = data.reasonSpecify;\n\n            that.setState(\n              {\n                Data: data,\n                formData: formData,\n                isLoaded: true\n              }\n                        );\n          },\n          error: function(data, errorCode, errorMsg) {\n            that.setState(\n              {\n                error: 'An error occurred when loading the form!'\n              }\n                        );\n          }\n        }\n            );\n    },\n    setFormData: function(formElement,\n    value) {\n      var formData = this.state.formData;\n      var required = this.state.Data.required;\n      if (formElement === \"participantStatus\" && required.indexOf(value) < 0) {\n        formData.participantSuboptions = \"\";\n      }\n      formData[formElement] = value;\n      this.setState(\n        {\n          formData: formData\n        }\n            );\n    },\n    onSubmit: function(e) {\n      e.preventDefault();\n    },\n    render: function() {\n      if (!this.state.isLoaded) {\n        if (this.state.error !== undefined) {\n          return (\n                    <div className =\"alert alert-danger text-center\">\n                        <strong>\n                            {this.state.error}\n                        </strong>\n                    </div>\n                    );\n        }\n\n        return (\n                <button className =\"btn-info has-spinner\">\n                    Loading\n                    <span\n                        className =\"glyphicon glyphicon-refresh\n                        glyphicon-refresh-animate\"\n                    >\n                    </span>\n                </button>\n                );\n      }\n\n      var disabled = true;\n      var updateButton = null;\n      if (loris.userHasPermission('candidate_parameter_edit')) {\n        disabled = false;\n        updateButton = <ButtonElement label =\"Update\" />;\n      }\n\n      var required = this.state.Data.required;\n      var subOptions = [];\n      var suboptionsRequired = false;\n      var participantStatus = (\n        this.state.formData.participantStatus ?\n          this.state.formData.participantStatus :\n          this.state.Data.participantStatus\n      );\n\n      if (participantStatus && required.indexOf(participantStatus) > -1) {\n        subOptions = this.state.Data.parentIDs[participantStatus];\n        suboptionsRequired = true;\n      }\n\n      var formattedHistory = [];\n      for (var statusKey in this.state.Data.history) {\n        if (this.state.Data.history.hasOwnProperty(statusKey)) {\n          var line = \"\";\n          for (var field in this.state.Data.history[statusKey]) {\n            if (this.state.Data.history[statusKey].hasOwnProperty(field)) {\n              var current = this.state.Data.history[statusKey][field];\n              if (current !== null) {\n                switch (field) {\n                  case 'data_entry_date':\n                    line += \"[\";\n                    line += current;\n                    line += \"] \";\n                    break;\n                  case 'entry_staff':\n                    line += current;\n                    line += \" \";\n                    break;\n                  case 'status':\n                    line += \" Status: \";\n                    line += current;\n                    line += \" \";\n                    break;\n                  case 'suboption':\n                    line += \"Details: \";\n                    line += current;\n                    line += \" \";\n                    break;\n                  case 'reason_specify':\n                    line += \"Comments: \";\n                    line += current;\n                    line += \" \";\n                    break;\n                  default:\n                }\n              }\n            }\n          }\n          formattedHistory.push(<p>{line}</p>);\n        }\n      }\n\n      var alertMessage = \"\";\n      var alertClass = \"alert text-center hide\";\n      if (this.state.updateResult) {\n        if (this.state.updateResult === \"success\") {\n          alertClass = \"alert alert-success text-center\";\n          alertMessage = \"Update Successful!\";\n        } else if (this.state.updateResult === \"error\") {\n          var errorMessage = this.state.errorMessage;\n          alertClass = \"alert alert-danger text-center\";\n          alertMessage = errorMessage ? errorMessage : \"Failed to update!\";\n        }\n      }\n\n      return (\n            <div class=\"row\">\n                <div className ={alertClass} role=\"alert\" ref=\"alert-message\">\n                    {alertMessage}\n                </div>\n            <FormElement\n                name =\"participantStatus\"\n                onSubmit ={this.handleSubmit}\n                ref =\"form\"\n                class =\"col-md-6\"\n            >\n                <StaticElement\n                    label =\"PSCID\"\n                    text ={this.state.Data.pscid}\n                />\n                <StaticElement\n                    label =\"DCCID\"\n                    text ={this.state.Data.candID}\n                />\n                <SelectElement\n                    label =\"Participant Status\"\n                    name =\"participantStatus\"\n                    options ={this.state.Data.statusOptions}\n                    value ={this.state.formData.participantStatus}\n                    onUserInput ={this.setFormData}\n                    ref =\"participantStatus\"\n                    disabled ={disabled}\n                    required ={true}\n                />\n                <SelectElement\n                    label =\"Specify Reason\"\n                    name =\"participantSuboptions\"\n                    options ={subOptions}\n                    value ={this.state.formData.participantSuboptions}\n                    onUserInput ={this.setFormData}\n                    ref =\"participantSuboptions\"\n                    disabled ={!suboptionsRequired}\n                    required ={suboptionsRequired}\n                />\n                <TextareaElement\n                    label =\"Comments\"\n                    name =\"reasonSpecify\"\n                    value ={this.state.formData.reasonSpecify}\n                    onUserInput ={this.setFormData}\n                    ref =\"reasonSpecify\"\n                    disabled ={disabled}\n                    required ={false}\n                />\n                {updateButton}\n                {formattedHistory}\n            </FormElement>\n                </div>\n            );\n    },\n        /**\n     * Handles form submission\n     *\n     * @param {event} e - Form submission event\n     */\n    handleSubmit: function(e) {\n      e.preventDefault();\n      var myFormData = this.state.formData;\n      var self = this;\n      var formData = new FormData();\n      for (var key in myFormData) {\n        if (myFormData[key] !== \"\") {\n          formData.append(key, myFormData[key]);\n        }\n      }\n\n      formData.append('tab', this.props.tabName);\n      formData.append('candID', this.state.Data.candID);\n      $.ajax(\n        {\n          type: 'POST',\n          url: self.props.action,\n          data: formData,\n          cache: false,\n          contentType: false,\n          processData: false,\n          success: function(data) {\n            self.setState(\n              {\n                updateResult: \"success\"\n              }\n                  );\n            self.showAlertMessage();\n          },\n          error: function(err) {\n            if (err.responseText !== \"\") {\n              var errorMessage = JSON.parse(err.responseText).message;\n              self.setState(\n                {\n                  updateResult: \"error\",\n                  errorMessage: errorMessage\n                }\n                      );\n              self.showAlertMessage();\n            }\n          }\n        }\n            );\n    },\n        /**\n     * Display a success/error alert message after form submission\n     */\n    showAlertMessage: function() {\n      var self = this;\n      if (this.refs[\"alert-message\"] === null) {\n        return;\n      }\n\n      var alertMsg = this.refs[\"alert-message\"];\n      $(alertMsg).fadeTo(2000, 500).delay(3000).slideUp(\n                500,\n                function() {\n                  self.setState(\n                    {\n                      updateResult: null\n                    }\n                    );\n                }\n            );\n    }\n\n  }\n);\n\nvar RParticipantStatus = React.createFactory(ParticipantStatus);\n\nwindow.ParticipantStatus = ParticipantStatus;\nwindow.RParticipantStatus = RParticipantStatus;\n\nexport default ParticipantStatus;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/candidate_parameters/jsx/participantStatus.js"],"sourceRoot":""}