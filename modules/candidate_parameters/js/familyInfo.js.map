{"version":3,"sources":["webpack:///modules/candidate_parameters/js/familyInfo.js","webpack:///webpack/bootstrap 036ba4bef008cda13c0b?cb59**************","webpack:///./modules/candidate_parameters/jsx/familyInfo.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","Object","defineProperty","value","FamilyInfo","React","createClass","displayName","getInitialState","Data","formData","familyMembers","updateResult","errorMessage","isLoaded","loadedData","componentDidMount","that","this","$","ajax","props","dataURL","dataType","xhr","window","XMLHttpRequest","addEventListener","evt","setState","success","data","existingFamilyMembers","error","errorCode","errorMsg","setFormData","formElement","state","onSubmit","e","preventDefault","render","undefined","createElement","className","relationshipOptions","full_sibling","half_sibling","1st_cousin","disabled","addButton","loris","userHasPermission","ButtonElement","label","candidateList","candidates","familyMembersHTML","key","hasOwnProperty","candID","FamilyCandID","relationship","Relationship_type","link","push","StaticElement","text","href","type","onUserInput","deleteFamilyMember","bind","relationshipRequired","alertMessage","alertClass","role","ref","FormElement","name","handleSubmit","class","pscid","SelectElement","options","required","myFormData","self","FormData","formRefs","refs","familyMember","append","tabName","url","action","cache","contentType","processData","showAlertMessage","keys","map","forceUpdate","err","JSON","parse","responseText","message","alertMsg","fadeTo","delay","slideUp","RFamilyInfo","createFactory","default"],"mappings":"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","file":"./modules/candidate_parameters/js/familyInfo.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/* exported RFamilyInfo */\n\t\n\tvar FamilyInfo = React.createClass({\n\t  displayName: 'FamilyInfo',\n\t\n\t  getInitialState: function getInitialState() {\n\t    return {\n\t      Data: [],\n\t      formData: {},\n\t      familyMembers: [],\n\t      updateResult: null,\n\t      errorMessage: null,\n\t      isLoaded: false,\n\t      loadedData: 0\n\t    };\n\t  },\n\t  componentDidMount: function componentDidMount() {\n\t    var that = this;\n\t    $.ajax(this.props.dataURL, {\n\t      dataType: 'json',\n\t      xhr: function xhr() {\n\t        var xhr = new window.XMLHttpRequest();\n\t        xhr.addEventListener(\"progress\", function (evt) {\n\t          that.setState({\n\t            loadedData: evt.loaded\n\t          });\n\t        });\n\t        return xhr;\n\t      },\n\t      success: function success(data) {\n\t        that.setState({\n\t          Data: data,\n\t          isLoaded: true,\n\t          familyMembers: data.existingFamilyMembers\n\t        });\n\t      },\n\t      error: function error(data, errorCode, errorMsg) {\n\t        that.setState({\n\t          error: 'An error occurred when loading the form!'\n\t        });\n\t      }\n\t    });\n\t  },\n\t  setFormData: function setFormData(formElement, value) {\n\t    var formData = this.state.formData;\n\t    formData[formElement] = value;\n\t    this.setState({\n\t      formData: formData\n\t    });\n\t  },\n\t  onSubmit: function onSubmit(e) {\n\t    e.preventDefault();\n\t  },\n\t  render: function render() {\n\t    if (!this.state.isLoaded) {\n\t      if (this.state.error !== undefined) {\n\t        return React.createElement(\n\t          'div',\n\t          { className: 'alert alert-danger text-center' },\n\t          React.createElement(\n\t            'strong',\n\t            null,\n\t            this.state.error\n\t          )\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        'button',\n\t        { className: 'btn-info has-spinner' },\n\t        'Loading',\n\t        React.createElement('span', {\n\t          className: 'glyphicon glyphicon-refresh glyphicon-refresh-animate'\n\t        })\n\t      );\n\t    }\n\t\n\t    var relationshipOptions = {\n\t      \"full_sibling\": \"Full Sibling\",\n\t      \"half_sibling\": \"Half Sibling\",\n\t      \"1st_cousin\": \"First Cousin\"\n\t    };\n\t\n\t    var disabled = true;\n\t    var addButton = null;\n\t    if (loris.userHasPermission('candidate_parameter_edit')) {\n\t      disabled = false;\n\t      addButton = React.createElement(ButtonElement, { label: 'Add' });\n\t    }\n\t\n\t    var candidateList = this.state.Data.candidates;\n\t\n\t    var familyMembers = this.state.familyMembers;\n\t    var familyMembersHTML = [];\n\t\n\t    for (var key in familyMembers) {\n\t      if (familyMembers.hasOwnProperty(key)) {\n\t        var candID = familyMembers[key].FamilyCandID;\n\t        var relationship = familyMembers[key].Relationship_type;\n\t        var link = \"?candID=\" + candID + \"&identifier=\" + candID;\n\t\n\t        familyMembersHTML.push(React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Family Member DCCID',\n\t            text: React.createElement(\n\t              'a',\n\t              { href: link },\n\t              candID\n\t            )\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Relation Type',\n\t            text: relationshipOptions[relationship]\n\t          }),\n\t          React.createElement(ButtonElement, {\n\t            label: 'Delete',\n\t            type: 'button',\n\t            onUserInput: this.deleteFamilyMember.bind(null, candID, key, candidateList)\n\t          }),\n\t          React.createElement('hr', null)\n\t        ));\n\t        // remove from list of candidates because it can only be added once\n\t        delete candidateList[candID];\n\t      }\n\t    }\n\t\n\t    var relationshipRequired = false;\n\t    if (this.state.formData.FamilyCandID) {\n\t      relationshipRequired = true;\n\t    }\n\t\n\t    var alertMessage = \"\";\n\t    var alertClass = \"alert text-center hide\";\n\t    if (this.state.updateResult) {\n\t      if (this.state.updateResult === \"success\") {\n\t        alertClass = \"alert alert-success text-center\";\n\t        alertMessage = \"Update Successful!\";\n\t      } else if (this.state.updateResult === \"error\") {\n\t        var errorMessage = this.state.errorMessage;\n\t        alertClass = \"alert alert-danger text-center\";\n\t        alertMessage = errorMessage ? errorMessage : \"Failed to update!\";\n\t      }\n\t    }\n\t\n\t    return React.createElement(\n\t      'div',\n\t      { className: 'row' },\n\t      React.createElement(\n\t        'div',\n\t        { className: alertClass, role: 'alert', ref: 'alert-message' },\n\t        alertMessage\n\t      ),\n\t      React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'familyInfo',\n\t          onSubmit: this.handleSubmit,\n\t          ref: 'form',\n\t          'class': 'col-md-6'\n\t        },\n\t        React.createElement(StaticElement, {\n\t          label: 'PSCID',\n\t          text: this.state.Data.pscid\n\t        }),\n\t        React.createElement(StaticElement, {\n\t          label: 'DCCID',\n\t          text: this.state.Data.candID\n\t        }),\n\t        React.createElement('hr', null),\n\t        familyMembersHTML,\n\t        React.createElement(SelectElement, {\n\t          label: 'Family Member ID (DCCID)',\n\t          name: 'FamilyCandID',\n\t          options: candidateList,\n\t          onUserInput: this.setFormData,\n\t          ref: 'FamilyCandID',\n\t          disabled: disabled,\n\t          required: false,\n\t          value: this.state.formData.FamilyCandID\n\t        }),\n\t        React.createElement(SelectElement, {\n\t          label: 'Relation Type',\n\t          name: 'Relationship_type',\n\t          options: relationshipOptions,\n\t          onUserInput: this.setFormData,\n\t          ref: 'Relationship_type',\n\t          disabled: disabled,\n\t          required: relationshipRequired,\n\t          value: this.state.formData.Relationship_type\n\t        }),\n\t        addButton\n\t      )\n\t    );\n\t  },\n\t  /**\n\t   * Handles form submission\n\t   *\n\t   * @param {event} e - Form submission event\n\t   */\n\t  handleSubmit: function handleSubmit(e) {\n\t    e.preventDefault();\n\t    var myFormData = this.state.formData;\n\t    var self = this;\n\t    var formData = new FormData();\n\t    var formRefs = this.refs;\n\t\n\t    var familyMembers = this.state.familyMembers;\n\t    var familyMember = {};\n\t\n\t    for (var key in myFormData) {\n\t      if (myFormData.hasOwnProperty(key)) {\n\t        if (myFormData[key] !== \"\") {\n\t          familyMember[key] = myFormData[key];\n\t          formData.append(key, myFormData[key]);\n\t        }\n\t      }\n\t    }\n\t\n\t    formData.append('tab', this.props.tabName);\n\t    formData.append('candID', this.state.Data.candID);\n\t\n\t    familyMembers.push(familyMember);\n\t\n\t    this.setState({\n\t      familyMembers: familyMembers\n\t    });\n\t\n\t    $.ajax({\n\t      type: 'POST',\n\t      url: self.props.action,\n\t      data: formData,\n\t      cache: false,\n\t      contentType: false,\n\t      processData: false,\n\t      success: function success(data) {\n\t        self.setState({\n\t          updateResult: \"success\",\n\t          formData: {}\n\t        });\n\t        self.showAlertMessage();\n\t\n\t        // Iterates through child components and resets state\n\t        // to initial state in order to clear the form\n\t        Object.keys(formRefs).map(function (ref) {\n\t          if (formRefs[ref].state && formRefs[ref].state.value) {\n\t            formRefs[ref].state.value = \"\";\n\t          }\n\t        });\n\t        // rerender components\n\t        self.forceUpdate();\n\t      },\n\t      error: function error(err) {\n\t        var errorMessage = JSON.parse(err.responseText).message;\n\t        self.setState({\n\t          updateResult: \"error\",\n\t          errorMessage: errorMessage\n\t        });\n\t        self.showAlertMessage();\n\t      }\n\t\n\t    });\n\t  },\n\t  /**\n\t   * Display a success/error alert message after form submission\n\t   */\n\t  showAlertMessage: function showAlertMessage() {\n\t    var self = this;\n\t    if (this.refs[\"alert-message\"] === null) {\n\t      return;\n\t    }\n\t\n\t    var alertMsg = this.refs[\"alert-message\"];\n\t    $(alertMsg).fadeTo(2000, 500).delay(3000).slideUp(500, function () {\n\t      self.setState({\n\t        updateResult: null\n\t\n\t      });\n\t    });\n\t  },\n\t  deleteFamilyMember: function deleteFamilyMember(candID, key, candidateList) {\n\t    var familyMembers = this.state.familyMembers;\n\t    delete familyMembers[key];\n\t\n\t    // readd to list of possible family members\n\t    candidateList[candID] = candID;\n\t\n\t    this.setState({\n\t      familyMembers: familyMembers\n\t    });\n\t\n\t    var myFormData = this.state.formData;\n\t    var self = this;\n\t    var formData = new FormData();\n\t    for (var _key in myFormData) {\n\t      if (myFormData.hasOwnProperty(_key)) {\n\t        if (myFormData[_key] !== \"\") {\n\t          formData.append(_key, myFormData[_key]);\n\t        }\n\t      }\n\t    }\n\t\n\t    formData.append('tab', 'deleteFamilyMember');\n\t    formData.append('candID', this.state.Data.candID);\n\t    formData.append('familyDCCID', candID);\n\t\n\t    $.ajax({\n\t      type: 'POST',\n\t      url: self.props.action,\n\t      data: formData,\n\t      cache: false,\n\t      contentType: false,\n\t      processData: false,\n\t      success: function success(data) {\n\t        self.setState({\n\t          updateResult: \"success\"\n\t        });\n\t        self.showAlertMessage();\n\t      },\n\t      error: function error(err) {\n\t        if (err.responseText !== \"\") {\n\t          var errorMessage = JSON.parse(err.responseText).message;\n\t          self.setState({\n\t            updateResult: \"error\",\n\t            errorMessage: errorMessage\n\t          });\n\t          self.showAlertMessage();\n\t        }\n\t      }\n\t    });\n\t  }\n\t\n\t});\n\t\n\tvar RFamilyInfo = React.createFactory(FamilyInfo);\n\t\n\twindow.FamilyInfo = FamilyInfo;\n\twindow.RFamilyInfo = RFamilyInfo;\n\t\n\texports.default = FamilyInfo;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// modules/candidate_parameters/js/familyInfo.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 036ba4bef008cda13c0b","/* exported RFamilyInfo */\n\nvar FamilyInfo = React.createClass({\n  getInitialState: function() {\n    return {\n      Data: [],\n      formData: {},\n      familyMembers: [],\n      updateResult: null,\n      errorMessage: null,\n      isLoaded: false,\n      loadedData: 0\n    };\n  },\n  componentDidMount: function() {\n    var that = this;\n    $.ajax(\n        this.props.dataURL,\n      {\n        dataType: 'json',\n        xhr: function() {\n          var xhr = new window.XMLHttpRequest();\n          xhr.addEventListener(\n              \"progress\",\n              function(evt) {\n                that.setState({\n                  loadedData: evt.loaded\n                });\n              });\n          return xhr;\n        },\n        success: function(data) {\n          that.setState({\n            Data: data,\n            isLoaded: true,\n            familyMembers: data.existingFamilyMembers\n          });\n        },\n        error: function(data, errorCode, errorMsg) {\n          that.setState({\n            error: 'An error occurred when loading the form!'\n          });\n        }\n      }\n      );\n  },\n  setFormData: function(formElement, value) {\n    var formData = this.state.formData;\n    formData[formElement] = value;\n    this.setState({\n      formData: formData\n    });\n  },\n  onSubmit: function(e) {\n    e.preventDefault();\n  },\n  render: function() {\n    if (!this.state.isLoaded) {\n      if (this.state.error !== undefined) {\n        return (\n            <div className=\"alert alert-danger text-center\">\n              <strong>\n                {this.state.error}\n              </strong>\n            </div>\n          );\n      }\n\n      return (\n          <button className=\"btn-info has-spinner\">\n            Loading\n            <span\n              className=\"glyphicon glyphicon-refresh\n                        glyphicon-refresh-animate\"\n            >\n                    </span>\n          </button>\n        );\n    }\n\n    var relationshipOptions = {\n      \"full_sibling\": \"Full Sibling\",\n      \"half_sibling\": \"Half Sibling\",\n      \"1st_cousin\": \"First Cousin\"\n    };\n\n    var disabled = true;\n    var addButton = null;\n    if (loris.userHasPermission('candidate_parameter_edit')) {\n      disabled = false;\n      addButton = <ButtonElement label=\"Add\"/>;\n    }\n\n    var candidateList = this.state.Data.candidates;\n\n    var familyMembers = this.state.familyMembers;\n    var familyMembersHTML = [];\n\n    for (var key in familyMembers) {\n      if (familyMembers.hasOwnProperty(key)) {\n        var candID = familyMembers[key].FamilyCandID;\n        var relationship = familyMembers[key].Relationship_type;\n        var link = \"?candID=\" + candID + \"&identifier=\" + candID;\n\n        familyMembersHTML.push(\n                  <div>\n                      <StaticElement\n                          label=\"Family Member DCCID\"\n                          text={<a href={link}>{candID}</a>}\n                      />\n                      <StaticElement\n                          label=\"Relation Type\"\n                          text={relationshipOptions[relationship]}\n                      />\n                      <ButtonElement\n                          label=\"Delete\"\n                          type=\"button\"\n                          onUserInput={\n                              this.deleteFamilyMember.bind(null, candID, key, candidateList)\n                          }\n                      />\n                      <hr />\n                  </div>\n              );\n          // remove from list of candidates because it can only be added once\n        delete candidateList[candID];\n      }\n    }\n\n    var relationshipRequired = false;\n    if (this.state.formData.FamilyCandID) {\n      relationshipRequired = true;\n    }\n\n    var alertMessage = \"\";\n    var alertClass = \"alert text-center hide\";\n    if (this.state.updateResult) {\n      if (this.state.updateResult === \"success\") {\n        alertClass = \"alert alert-success text-center\";\n        alertMessage = \"Update Successful!\";\n      } else if (this.state.updateResult === \"error\") {\n        var errorMessage = this.state.errorMessage;\n        alertClass = \"alert alert-danger text-center\";\n        alertMessage = errorMessage ? errorMessage : \"Failed to update!\";\n      }\n    }\n\n    return (\n        <div className=\"row\">\n          <div className={alertClass} role=\"alert\" ref=\"alert-message\">\n            {alertMessage}\n          </div>\n\n          <FormElement\n            name=\"familyInfo\"\n            onSubmit={this.handleSubmit}\n            ref=\"form\"\n            class=\"col-md-6\"\n          >\n            <StaticElement\n              label=\"PSCID\"\n              text={this.state.Data.pscid}\n            />\n            <StaticElement\n              label=\"DCCID\"\n              text={this.state.Data.candID}\n            />\n              <hr />\n              {familyMembersHTML}\n            <SelectElement\n              label=\"Family Member ID (DCCID)\"\n              name=\"FamilyCandID\"\n              options={candidateList}\n              onUserInput={this.setFormData}\n              ref=\"FamilyCandID\"\n              disabled={disabled}\n              required={false}\n              value={this.state.formData.FamilyCandID}\n            />\n            <SelectElement\n              label=\"Relation Type\"\n              name=\"Relationship_type\"\n              options={relationshipOptions}\n              onUserInput={this.setFormData}\n              ref=\"Relationship_type\"\n              disabled={disabled}\n              required={relationshipRequired}\n              value={this.state.formData.Relationship_type}\n            />\n            {addButton}\n          </FormElement>\n        </div>\n      );\n  },\n    /**\n     * Handles form submission\n     *\n     * @param {event} e - Form submission event\n     */\n  handleSubmit: function(e) {\n    e.preventDefault();\n    var myFormData = this.state.formData;\n    var self = this;\n    var formData = new FormData();\n    var formRefs = this.refs;\n\n    var familyMembers = this.state.familyMembers;\n    var familyMember = {};\n\n    for (var key in myFormData) {\n      if (myFormData.hasOwnProperty(key)) {\n        if (myFormData[key] !== \"\") {\n          familyMember[key] = myFormData[key];\n          formData.append(key, myFormData[key]);\n        }\n      }\n    }\n\n    formData.append('tab', this.props.tabName);\n    formData.append('candID', this.state.Data.candID);\n\n    familyMembers.push(familyMember);\n\n    this.setState({\n      familyMembers: familyMembers\n    });\n\n    $.ajax({\n      type: 'POST',\n      url: self.props.action,\n      data: formData,\n      cache: false,\n      contentType: false,\n      processData: false,\n      success: function(data) {\n        self.setState({\n          updateResult: \"success\",\n          formData: {}\n        });\n        self.showAlertMessage();\n\n              // Iterates through child components and resets state\n              // to initial state in order to clear the form\n        Object.keys(formRefs).map(function(ref) {\n          if (formRefs[ref].state && formRefs[ref].state.value) {\n            formRefs[ref].state.value = \"\";\n          }\n        });\n              // rerender components\n        self.forceUpdate();\n      },\n      error: function(err) {\n        var errorMessage = JSON.parse(err.responseText).message;\n        self.setState(\n          {\n            updateResult: \"error\",\n            errorMessage: errorMessage\n          }\n            );\n        self.showAlertMessage();\n      }\n\n    });\n  },\n    /**\n     * Display a success/error alert message after form submission\n     */\n  showAlertMessage: function() {\n    var self = this;\n    if (this.refs[\"alert-message\"] === null) {\n      return;\n    }\n\n    var alertMsg = this.refs[\"alert-message\"];\n    $(alertMsg).fadeTo(2000, 500).delay(3000).slideUp(\n        500,\n        function() {\n          self.setState(\n            {\n              updateResult: null\n\n            }\n          );\n        });\n  },\n  deleteFamilyMember: function(candID, key, candidateList) {\n    var familyMembers = this.state.familyMembers;\n    delete familyMembers[key];\n\n      // readd to list of possible family members\n    candidateList[candID] = candID;\n\n    this.setState({\n      familyMembers: familyMembers\n    });\n\n    var myFormData = this.state.formData;\n    var self = this;\n    var formData = new FormData();\n    for (let key in myFormData) {\n      if (myFormData.hasOwnProperty(key)) {\n        if (myFormData[key] !== \"\") {\n          formData.append(key, myFormData[key]);\n        }\n      }\n    }\n\n    formData.append('tab', 'deleteFamilyMember');\n    formData.append('candID', this.state.Data.candID);\n    formData.append('familyDCCID', candID);\n\n    $.ajax({\n      type: 'POST',\n      url: self.props.action,\n      data: formData,\n      cache: false,\n      contentType: false,\n      processData: false,\n      success: function(data) {\n        self.setState(\n          {\n            updateResult: \"success\"\n          });\n        self.showAlertMessage();\n      },\n      error: function(err) {\n        if (err.responseText !== \"\") {\n          var errorMessage = JSON.parse(err.responseText).message;\n          self.setState(\n            {\n              updateResult: \"error\",\n              errorMessage: errorMessage\n            });\n          self.showAlertMessage();\n        }\n      }\n    });\n  }\n\n});\n\nvar RFamilyInfo = React.createFactory(FamilyInfo);\n\nwindow.FamilyInfo = FamilyInfo;\nwindow.RFamilyInfo = RFamilyInfo;\n\nexport default FamilyInfo;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/candidate_parameters/jsx/familyInfo.js"],"sourceRoot":""}