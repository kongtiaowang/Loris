{"version":3,"sources":["webpack:///project/modules/final_radiological_review/js/columnFormatter.js","webpack:///webpack/bootstrap 9b76099cbdd4e7222418","webpack:///./project/modules/final_radiological_review/jsx/columnFormatter.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","formatColumn","column","cell","rowData","rowHeaders","loris","hiddenHeaders","indexOf","row","forEach","header","index","this","url","reviewDone","finalizedvar","sas","pvs","BaseURL","CommentID","React","createElement","href","SAS","PVS","Finalized","SessionID","Object","defineProperty","value","window","default"],"mappings":"CAAS,SAAUA,SCInB,QAAAC,qBAAAC,UAGA,GAAAC,iBAAAD,UACA,MAAAC,kBAAAD,UAAAE,OAGA,IAAAC,QAAAF,iBAAAD,WACAE,WACAE,GAAAJ,SACAK,QAAA,EAUA,OANAP,SAAAE,UAAAM,KAAAH,OAAAD,QAAAC,cAAAD,QAAAH,qBAGAI,OAAAE,QAAA,EAGAF,OAAAD,QAvBA,GAAAD,oBAqCA,OATAF,qBAAAQ,EAAAT,QAGAC,oBAAAS,EAAAP,iBAGAF,oBAAAU,EAAA,GAGAV,oBAAA,KDMM,SAASI,OAAQD,SAEtB,YEpCD,SAASQ,cAAaC,OAAQC,KAAMC,QAASC,YAC3C,GAAIC,MAAMC,cAAcC,QAAQN,SAAU,EACxC,MAAO,KAGT,IAAIO,OACJJ,YAAWK,QAAQ,SAASC,OAAQC,OAClCH,IAAIE,QAAUP,QAAQQ,QACrBC,KACH,IAAIC,KACAC,WACAC,aACAC,IACAC,GACJ,IAAe,UAAXhB,OAIF,MAHAY,KAAMR,MAAMa,QACV,0DACAV,IAAIW,UAEGC,MAAAC,cAAA,UACGD,MAAAC,cAAA,KAAGC,KAAOT,KAAMX,MAI9B,IAAe,gBAAXD,OAMF,MALAa,YAAa,KAEc,QAAvBN,IAAI,gBAAmD,QAAvBA,IAAI,iBACtCM,WAAa,OAEPM,MAAAC,cAAA,UAAKP,WAGf,IAAe,QAAXb,OAAkB,CACpB,OAAQO,IAAIe,KACV,IAAK,IACHP,IAAM,MACN,MACF,KAAK,IACHA,IAAM,SACN,MACF,KAAK,IACHA,IAAM,MACN,MACF,KAAK,IACHA,IAAM,UACN,MACF,KAAK,IACHA,IAAM,QACN,MACF,SACEA,IAAM,eAIV,MAAQI,OAAAC,cAAA,UAAKL,KAGf,GAAe,QAAXf,OAAkB,CACpB,OAAQO,IAAIgB,KACV,IAAK,IACHP,IAAM,MACN,MACF,KAAK,IACHA,IAAM,SACN,MACF,KAAK,IACHA,IAAM,MACN,MACF,KAAK,IACHA,IAAM,UACN,MACF,KAAK,IACHA,IAAM,QACN,MACF,SACEA,IAAM,eAGV,MAAQG,OAAAC,cAAA,UAAKJ,KAEf,MAAe,cAAXhB,QACFc,aAAe,KAEO,QAAlBP,IAAIiB,WAAyC,QAAlBjB,IAAIiB,YACjCV,aAAe,OAETK,MAAAC,cAAA,UAAKN,eAGA,gBAAXd,QAAmD,QAAvBO,IAAI,gBAClCK,IAAMR,MAAMa,QACV,2CACAV,IAAIkB,UAEGN,MAAAC,cAAA,UACGD,MAAAC,cAAA,KAAGC,KAAOT,KAAMX,QAItBkB,MAAAC,cAAA,UAAKnB,MF9DdyB,OAAOC,eAAepC,QAAS,cAC7BqC,OAAO,IEgEVC,OAAO9B,aAAeA,aF6ErBR,QAAQuC,QE3EM/B","file":"./project/modules/final_radiological_review/js/columnFormatter.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/* exported formatColumn */\n\t\n\t/**\n\t * Modify behaviour of specified column cells in the Data Table component\n\t * @param {string} column - column name\n\t * @param {string} cell - cell content\n\t * @param {arrray} rowData - array of cell contents for a specific row\n\t * @param {arrray} rowHeaders - array of table headers (column names)\n\t * @return {*} a formated table cell for a given column\n\t */\n\tfunction formatColumn(column, cell, rowData, rowHeaders) {\n\t  if (loris.hiddenHeaders.indexOf(column) > -1) {\n\t    return null;\n\t  }\n\t  // Create the mapping between rowHeaders and rowData in a row object.\n\t  var row = {};\n\t  rowHeaders.forEach(function (header, index) {\n\t    row[header] = rowData[index];\n\t  }, this);\n\t  var url;\n\t  var reviewDone;\n\t  var finalizedvar;\n\t  var sas;\n\t  var pvs;\n\t  if (column === 'PSCID') {\n\t    url = loris.BaseURL + \"/final_radiological_review/compare_reviews/?identifier=\" + row.CommentID;\n\t    return React.createElement(\n\t      'td',\n\t      null,\n\t      React.createElement(\n\t        'a',\n\t        { href: url },\n\t        cell\n\t      )\n\t    );\n\t  }\n\t  if (column === 'Review Done') {\n\t    reviewDone = \"No\";\n\t\n\t    if (row['Review Done'] === 'yes' || row['Review Done'] === 'Yes') {\n\t      reviewDone = 'Yes';\n\t    }\n\t    return React.createElement(\n\t      'td',\n\t      null,\n\t      reviewDone\n\t    );\n\t  }\n\t\n\t  if (column === 'SAS') {\n\t    switch (row.SAS) {\n\t      case \"0\":\n\t        sas = \"None\";\n\t        break;\n\t      case \"1\":\n\t        sas = \"Minimal\";\n\t        break;\n\t      case \"2\":\n\t        sas = \"Mild\";\n\t        break;\n\t      case \"3\":\n\t        sas = \"Moderate\";\n\t        break;\n\t      case \"4\":\n\t        sas = \"Marked\";\n\t        break;\n\t      default:\n\t        sas = \"Not Answered\";\n\t\n\t    }\n\t\n\t    return React.createElement(\n\t      'td',\n\t      null,\n\t      sas\n\t    );\n\t  }\n\t\n\t  if (column === 'PVS') {\n\t    switch (row.PVS) {\n\t      case \"0\":\n\t        pvs = \"None\";\n\t        break;\n\t      case \"1\":\n\t        pvs = \"Minimal\";\n\t        break;\n\t      case \"2\":\n\t        pvs = \"Mild\";\n\t        break;\n\t      case \"3\":\n\t        pvs = \"Moderate\";\n\t        break;\n\t      case \"4\":\n\t        pvs = \"Marked\";\n\t        break;\n\t      default:\n\t        pvs = \"Not Answered\";\n\t\n\t    }\n\t    return React.createElement(\n\t      'td',\n\t      null,\n\t      pvs\n\t    );\n\t  }\n\t  if (column === 'Finalized') {\n\t    finalizedvar = \"No\";\n\t\n\t    if (row.Finalized === 'yes' || row.Finalized === 'Yes') {\n\t      finalizedvar = 'Yes';\n\t    }\n\t    return React.createElement(\n\t      'td',\n\t      null,\n\t      finalizedvar\n\t    );\n\t  }\n\t\n\t  if (column === 'T1 Inserted' && row['T1 Inserted'] === \"Yes\") {\n\t    url = loris.BaseURL + \"/imaging_browser/viewSession/?sessionID=\" + row.SessionID;\n\t    return React.createElement(\n\t      'td',\n\t      null,\n\t      React.createElement(\n\t        'a',\n\t        { href: url },\n\t        cell\n\t      )\n\t    );\n\t  }\n\t  return React.createElement(\n\t    'td',\n\t    null,\n\t    cell\n\t  );\n\t}\n\t\n\twindow.formatColumn = formatColumn;\n\t\n\texports.default = formatColumn;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// project/modules/final_radiological_review/js/columnFormatter.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9b76099cbdd4e7222418","/* exported formatColumn */\n\n/**\n * Modify behaviour of specified column cells in the Data Table component\n * @param {string} column - column name\n * @param {string} cell - cell content\n * @param {arrray} rowData - array of cell contents for a specific row\n * @param {arrray} rowHeaders - array of table headers (column names)\n * @return {*} a formated table cell for a given column\n */\nfunction formatColumn(column, cell, rowData, rowHeaders) {\n  if (loris.hiddenHeaders.indexOf(column) > -1) {\n    return null;\n  }\n  // Create the mapping between rowHeaders and rowData in a row object.\n  var row = {};\n  rowHeaders.forEach(function(header, index) {\n    row[header] = rowData[index];\n  }, this);\n  var url;\n  var reviewDone;\n  var finalizedvar;\n  var sas;\n  var pvs;\n  if (column === 'PSCID') {\n    url = loris.BaseURL +\n      \"/final_radiological_review/compare_reviews/?identifier=\" +\n      row.CommentID;\n    return (\n             <td>\n                <a href ={url}>{cell}</a>\n             </td>\n           );\n  }\n  if (column === 'Review Done') {\n    reviewDone = \"No\";\n\n    if (row['Review Done'] === 'yes' || row['Review Done'] === 'Yes') {\n      reviewDone = 'Yes';\n    }\n    return (<td>{reviewDone}</td>);\n  }\n\n  if (column === 'SAS') {\n    switch (row.SAS) {\n      case \"0\":\n        sas = \"None\";\n        break;\n      case \"1\":\n        sas = \"Minimal\";\n        break;\n      case \"2\":\n        sas = \"Mild\";\n        break;\n      case \"3\":\n        sas = \"Moderate\";\n        break;\n      case \"4\":\n        sas = \"Marked\";\n        break;\n      default:\n        sas = \"Not Answered\";\n\n    }\n\n    return (<td>{sas}</td>);\n  }\n\n  if (column === 'PVS') {\n    switch (row.PVS) {\n      case \"0\":\n        pvs = \"None\";\n        break;\n      case \"1\":\n        pvs = \"Minimal\";\n        break;\n      case \"2\":\n        pvs = \"Mild\";\n        break;\n      case \"3\":\n        pvs = \"Moderate\";\n        break;\n      case \"4\":\n        pvs = \"Marked\";\n        break;\n      default:\n        pvs = \"Not Answered\";\n\n    }\n    return (<td>{pvs}</td>);\n  }\n  if (column === 'Finalized') {\n    finalizedvar = \"No\";\n\n    if (row.Finalized === 'yes' || row.Finalized === 'Yes') {\n      finalizedvar = 'Yes';\n    }\n    return (<td>{finalizedvar}</td>);\n  }\n\n  if (column === 'T1 Inserted' && row['T1 Inserted'] === \"Yes\") {\n    url = loris.BaseURL +\n      \"/imaging_browser/viewSession/?sessionID=\" +\n      row.SessionID;\n    return (\n             <td>\n                <a href ={url}>{cell}</a>\n             </td>\n           );\n  }\n  return (<td>{cell}</td>);\n}\n\nwindow.formatColumn = formatColumn;\n\nexport default formatColumn;\n\n\n\n// WEBPACK FOOTER //\n// ./project/modules/final_radiological_review/jsx/columnFormatter.js"],"sourceRoot":""}