{"version":3,"sources":["webpack:///modules/dataquery/js/react.filterBuilder.js","webpack:///webpack/bootstrap 8852a649345d4aba9697?fa4b******************","webpack:///./modules/dataquery/jsx/react.filterBuilder.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","Object","defineProperty","value","LogicOperator","React","createClass","displayName","changeOperator","op","this","props","updateGroupOperator","render","andClass","orClass","logicOperator","createElement","className","role","type","onClick","bind","FilterRule","getInitialState","operators","equal","notEqual","lessThanEqual","greaterThanEqual","startsWith","contains","componentWillMount","valueSet","loris","debounce","selectInstrument","event","rule","that","target","instrument","$","get","BaseURL","category","data","fields","updateRule","index","fieldSelect","JSON","parse","stringify","field","fieldType","operator","visit","candidates","key","Type","operatorSelect","valueChange","setState","state","responseHandler","i","allSessions","allCandiates","length","push","session","keys","updateSessions","ajaxRetrieve","script","updateVisit","fieldIndex","forVisits","visits","inputOptions","input","operatorKey","options","inputType","map","split","onChange","enumToArray","option","Visits","items","item","deleteRule","FilterGroup","updateChild","child","group","children","updateGroup","updateFilter","activeOperator","getSessions","addChild","deleteChild","splice","deleteButton","deleteGroup","FilterBuilder","filter","window","default"],"mappings":"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","file":"./modules/dataquery/js/react.filterBuilder.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t/**\n\t *  The following file contains the components used for the filter builder tab\n\t *\n\t *  @author   Jordan Stirling <jstirling91@gmail.com>\n\t *  @license  http://www.gnu.org/licenses/gpl-3.0.txt GPLv3\n\t *  @link     https://github.com/mohadesz/Loris-Trunk\n\t */\n\t\n\t/*\n\t *  The following component is used for displaying operator for the group component\n\t */\n\tvar LogicOperator = React.createClass({\n\t\tdisplayName: \"LogicOperator\",\n\t\n\t\tchangeOperator: function changeOperator(op) {\n\t\t\t// Wrapper function updating operator\n\t\t\tthis.props.updateGroupOperator(op);\n\t\t},\n\t\trender: function render() {\n\t\t\t// Renders the html for the component\n\t\n\t\t\tvar andClass = \"btn\",\n\t\t\t    orClass = \"btn\";\n\t\n\t\t\t// Set operator to OR if logicOperator is 1, AND otherwise\n\t\t\tif (this.props.logicOperator === 1) {\n\t\t\t\torClass += \" btn-primary\";\n\t\t\t\tandClass += \" switch\";\n\t\t\t} else {\n\t\t\t\tandClass += \" btn-primary\";\n\t\t\t\torClass += \" switch\";\n\t\t\t}\n\t\t\treturn React.createElement(\n\t\t\t\t\"div\",\n\t\t\t\t{ className: \"btn-group\", role: \"group\" },\n\t\t\t\tReact.createElement(\n\t\t\t\t\t\"button\",\n\t\t\t\t\t{ type: \"button\", className: andClass, onClick: this.changeOperator.bind(this, 0) },\n\t\t\t\t\t\"And\"\n\t\t\t\t),\n\t\t\t\tReact.createElement(\n\t\t\t\t\t\"button\",\n\t\t\t\t\t{ type: \"button\", className: orClass, onClick: this.changeOperator.bind(this, 1) },\n\t\t\t\t\t\"Or\"\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\t\n\t/*\n\t *  The following component is used for displaying a filter rule\n\t */\n\tvar FilterRule = React.createClass({\n\t\tdisplayName: \"FilterRule\",\n\t\n\t\tgetInitialState: function getInitialState() {\n\t\t\treturn {\n\t\t\t\toperators: {\n\t\t\t\t\t// \"enum\" : {\n\t\t\t\t\t\"equal\": \"=\",\n\t\t\t\t\t\"notEqual\": \"!=\",\n\t\t\t\t\t\"lessThanEqual\": \"<=\",\n\t\t\t\t\t\"greaterThanEqual\": \">=\",\n\t\t\t\t\t\"startsWith\": \"startsWith\",\n\t\t\t\t\t\"contains\": \"contains\"\n\t\t\t\t\t// }\n\t\t\t\t},\n\t\t\t\tvalue: \"\"\n\t\t\t};\n\t\t},\n\t\tcomponentWillMount: function componentWillMount() {\n\t\t\tthis.valueSet = loris.debounce(this.valueSet, 1000);\n\t\t},\n\t\tselectInstrument: function selectInstrument(event) {\n\t\t\t// Update the rules instrument, getting the instruments avalible fields\n\t\t\tvar rule = this.props.rule,\n\t\t\t    that = this;\n\t\t\tif (event.target.value) {\n\t\t\t\trule.instrument = event.target.value;\n\t\t\t\t$.get(loris.BaseURL + \"/AjaxHelper.php?Module=dataquery&script=datadictionary.php\", { category: rule.instrument }, function (data) {\n\t\t\t\t\trule.fields = data;\n\t\t\t\t\tthat.props.updateRule(that.props.index, rule);\n\t\t\t\t}, 'json');\n\t\t\t}\n\t\t},\n\t\tfieldSelect: function fieldSelect(event) {\n\t\t\t// Update the rules desired field, setting the rules field and field type\n\t\t\tvar rule = JSON.parse(JSON.stringify(this.props.rule));\n\t\t\tdelete rule.field;\n\t\t\tdelete rule.fieldType;\n\t\t\tdelete rule.operator;\n\t\t\tdelete rule.value;\n\t\t\tdelete rule.visit;\n\t\t\tdelete rule.candidates;\n\t\t\tif (event.target.value) {\n\t\t\t\trule.field = rule.fields[event.target.value].key[1];\n\t\t\t\trule.fieldType = rule.fields[event.target.value].value.Type;\n\t\t\t}\n\t\t\tthis.props.updateRule(this.props.index, rule);\n\t\t},\n\t\toperatorSelect: function operatorSelect(event) {\n\t\t\t// Update the desired rule operation for the selected field\n\t\t\tvar rule = JSON.parse(JSON.stringify(this.props.rule));\n\t\t\tdelete rule.operator;\n\t\t\tdelete rule.value;\n\t\t\tdelete rule.visit;\n\t\t\tdelete rule.candidates;\n\t\t\tif (event.target.value) {\n\t\t\t\trule.operator = event.target.value;\n\t\t\t}\n\t\t\tthis.props.updateRule(this.props.index, rule);\n\t\t},\n\t\tvalueChange: function valueChange(event) {\n\t\t\tvar rule = JSON.parse(JSON.stringify(this.props.rule));\n\t\t\tdelete rule.visit;\n\t\t\tdelete rule.candidates;\n\t\n\t\t\trule.value = event.target.value;\n\t\n\t\t\tthis.setState({\n\t\t\t\tvalue: event.target.value\n\t\t\t});\n\t\t\tthis.valueSet();\n\t\t\tthis.props.updateRule(this.props.index, rule);\n\t\t},\n\t\tvalueSet: function valueSet() {\n\t\t\t// Update the value to filter for, and runs the query for the rules parameters\n\t\t\tvar rule = JSON.parse(JSON.stringify(this.props.rule)),\n\t\t\t    that = this;\n\t\t\tif (this.state.value) {\n\t\t\t\tvar responseHandler = function responseHandler(data) {\n\t\t\t\t\tvar i,\n\t\t\t\t\t    allSessions = {},\n\t\t\t\t\t    allCandiates = {};\n\t\t\t\t\t// Loop through data and divide into individual visits with unique PSCIDs\n\t\t\t\t\t// storing a master list of unique PSCIDs\n\t\t\t\t\tfor (i = 0; i < data.length; i++) {\n\t\t\t\t\t\tif (!allSessions[data[i][1]]) {\n\t\t\t\t\t\t\tallSessions[data[i][1]] = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tallSessions[data[i][1]].push(data[i][0]);\n\t\t\t\t\t\tif (!allCandiates[data[i][0]]) {\n\t\t\t\t\t\t\tallCandiates[data[i][0]] = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tallCandiates[data[i][0]].push(data[i][1]);\n\t\t\t\t\t}\n\t\t\t\t\trule.candidates = {\n\t\t\t\t\t\t\"allCandiates\": allCandiates,\n\t\t\t\t\t\t\"allSessions\": allSessions\n\t\t\t\t\t};\n\t\t\t\t\trule.session = Object.keys(allCandiates);\n\t\t\t\t\trule.visit = \"All\";\n\t\t\t\t\tthat.props.updateSessions(that.props.index, rule);\n\t\t\t\t},\n\t\t\t\t    ajaxRetrieve = function ajaxRetrieve(script) {\n\t\t\t\t\t$.get(loris.BaseURL + \"/AjaxHelper.php?Module=dataquery&script=\" + script, {\n\t\t\t\t\t\tcategory: rule.instrument,\n\t\t\t\t\t\tfield: rule.field,\n\t\t\t\t\t\tvalue: that.state.value\n\t\t\t\t\t}, responseHandler, 'json');\n\t\t\t\t};\n\t\t\t\tswitch (rule.operator) {\n\t\t\t\t\tcase \"equal\":\n\t\t\t\t\t\tajaxRetrieve(\"queryEqual.php\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"notEqual\":\n\t\t\t\t\t\tajaxRetrieve(\"queryNotEqual.php\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"lessThanEqual\":\n\t\t\t\t\t\tajaxRetrieve(\"queryLessThanEqual.php\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"greaterThanEqual\":\n\t\t\t\t\t\tajaxRetrieve(\"queryGreaterThanEqual.php\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"startsWith\":\n\t\t\t\t\t\tajaxRetrieve(\"queryStartsWith.php\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"contains\":\n\t\t\t\t\t\tajaxRetrieve(\"queryContains.php\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tupdateVisit: function updateVisit(event) {\n\t\t\t// Update rule to filter for specified visit\n\t\t\tvar rule = JSON.parse(JSON.stringify(this.props.rule));\n\t\t\trule.visit = event.target.value;\n\t\n\t\t\tif (event.target.value === \"all\") {\n\t\t\t\t// If all visits, use keys of master list\n\t\t\t\trule.session = Object.keys(rule.candidates.allCandiates);\n\t\t\t} else {\n\t\t\t\t// Else use list of PSCIDs for given vist\n\t\t\t\trule.session = rule.candidates.allSessions[event.target.value];\n\t\t\t}\n\t\t\tthis.props.updateSessions(this.props.index, rule);\n\t\t},\n\t\trender: function render() {\n\t\t\t// Renders the html for the component\n\t\n\t\t\tvar rule,\n\t\t\t    fieldIndex,\n\t\t\t    forVisits,\n\t\t\t    visits,\n\t\t\t    that = this;\n\t\t\tif (this.props.rule.instrument) {\n\t\t\t\t// Only display field select and etc. if instrument is selected\n\t\t\t\tvar fields = this.props.rule.fields.map(function (field, index) {\n\t\t\t\t\tif (that.props.rule.field && field.key[1] === that.props.rule.field) {\n\t\t\t\t\t\tfieldIndex = index;\n\t\t\t\t\t}\n\t\t\t\t\treturn React.createElement(\n\t\t\t\t\t\t\"option\",\n\t\t\t\t\t\t{ value: index },\n\t\t\t\t\t\tfield.key[1]\n\t\t\t\t\t);\n\t\t\t\t}),\n\t\t\t\t    operators = [],\n\t\t\t\t    inputOptions,\n\t\t\t\t    input,\n\t\t\t\t    operatorKey,\n\t\t\t\t    operatorSelect,\n\t\t\t\t    options,\n\t\t\t\t    value,\n\t\t\t\t    inputType;\n\t\n\t\t\t\tif (this.props.rule.fieldType) {\n\t\t\t\t\t// Only display operators if field is selected\n\t\t\t\t\tinputType = this.props.rule.fieldType.split(\"(\");\n\t\t\t\t\toperatorKey = inputType[0];\n\t\t\t\t\tfor (var key in this.state.operators) {\n\t\t\t\t\t\toperators.push(React.createElement(\n\t\t\t\t\t\t\t\"option\",\n\t\t\t\t\t\t\t{ value: key, onChange: this.operatorSelect },\n\t\t\t\t\t\t\tthis.state.operators[key]\n\t\t\t\t\t\t));\n\t\t\t\t\t}\n\t\t\t\t\tvalue = this.props.rule.operator ? this.props.rule.operator : \"\";\n\t\t\t\t\toperatorSelect = React.createElement(\n\t\t\t\t\t\t\"select\",\n\t\t\t\t\t\t{ className: \"input-sm col-xs-3 \", onChange: this.operatorSelect, value: value },\n\t\t\t\t\t\tReact.createElement(\"option\", { value: \"\" }),\n\t\t\t\t\t\toperators\n\t\t\t\t\t);\n\t\t\t\t\tif (this.props.rule.operator) {\n\t\t\t\t\t\t// Only display value input if operator is selected, displaying specific\n\t\t\t\t\t\t// input type field data type\n\t\t\t\t\t\tswitch (operatorKey) {\n\t\t\t\t\t\t\tcase \"enum\":\n\t\t\t\t\t\t\t\tinputOptions = enumToArray(this.props.rule.fieldType);\n\t\t\t\t\t\t\t\toptions = inputOptions.map(function (option) {\n\t\t\t\t\t\t\t\t\treturn React.createElement(\n\t\t\t\t\t\t\t\t\t\t\"option\",\n\t\t\t\t\t\t\t\t\t\t{ value: option },\n\t\t\t\t\t\t\t\t\t\toption\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tvalue = this.props.rule.value ? this.props.rule.value : \"\";\n\t\t\t\t\t\t\t\tinput = React.createElement(\n\t\t\t\t\t\t\t\t\t\"select\",\n\t\t\t\t\t\t\t\t\t{ className: \"input-sm col-xs-3\", onChange: this.valueChange, value: value },\n\t\t\t\t\t\t\t\t\tReact.createElement(\"option\", { value: \"\" }),\n\t\t\t\t\t\t\t\t\toptions\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tinput = React.createElement(\"input\", { type: \"text\",\n\t\t\t\t\t\t\t\t\tclassName: \"input-sm col-xs-3\",\n\t\t\t\t\t\t\t\t\tonChange: this.valueChange,\n\t\t\t\t\t\t\t\t\tvalue: this.props.rule.value\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (this.props.rule.visit) {\n\t\t\t\t\t\t// Display dropdown for visit select. This only displays after a value\n\t\t\t\t\t\t// has been inputed\n\t\t\t\t\t\tvisits = Object.keys(this.props.Visits).map(function (visit) {\n\t\t\t\t\t\t\treturn React.createElement(\n\t\t\t\t\t\t\t\t\"option\",\n\t\t\t\t\t\t\t\t{ value: visit },\n\t\t\t\t\t\t\t\tvisit\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tforVisits = React.createElement(\n\t\t\t\t\t\t\t\"select\",\n\t\t\t\t\t\t\t{ className: \"input-sm col-xs-3\", onChange: this.updateVisit, value: this.props.rule.visit },\n\t\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\t\"option\",\n\t\t\t\t\t\t\t\t{ value: \"all\" },\n\t\t\t\t\t\t\t\t\"All Visits\"\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tvisits\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\trule = React.createElement(\n\t\t\t\t\t\"div\",\n\t\t\t\t\tnull,\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\"div\",\n\t\t\t\t\t\t{ className: \"col-xs-12\" },\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\"label\",\n\t\t\t\t\t\t\t{ className: \"instrumentLabel\" },\n\t\t\t\t\t\t\tthis.props.rule.instrument\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\"div\",\n\t\t\t\t\t\t{ className: \"col-xs-10\" },\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\"select\",\n\t\t\t\t\t\t\t{ className: \"input-sm col-xs-3\", onChange: this.fieldSelect, value: fieldIndex },\n\t\t\t\t\t\t\tReact.createElement(\"option\", { value: \"\" }),\n\t\t\t\t\t\t\tfields\n\t\t\t\t\t\t),\n\t\t\t\t\t\toperatorSelect,\n\t\t\t\t\t\tinput,\n\t\t\t\t\t\tforVisits\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t// Else display dropdown for instrument select\n\t\t\t\tvar options = this.props.items.map(function (item) {\n\t\t\t\t\treturn React.createElement(\n\t\t\t\t\t\t\"option\",\n\t\t\t\t\t\t{ value: item.category },\n\t\t\t\t\t\titem.category\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t\trule = React.createElement(\n\t\t\t\t\t\"select\",\n\t\t\t\t\t{ onChange: this.selectInstrument, className: \"input-sm col-xs-10\" },\n\t\t\t\t\tReact.createElement(\"option\", { value: \"\" }),\n\t\t\t\t\toptions\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn React.createElement(\n\t\t\t\t\"div\",\n\t\t\t\t{ className: \"panel panel-default\" },\n\t\t\t\tReact.createElement(\n\t\t\t\t\t\"div\",\n\t\t\t\t\t{ className: \"panel-body\" },\n\t\t\t\t\trule,\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\"div\",\n\t\t\t\t\t\t{ className: \"col-xs-2\" },\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\"button\",\n\t\t\t\t\t\t\t{ className: \"btn btn-danger btn-sm pull-right\",\n\t\t\t\t\t\t\t\tonClick: this.props.deleteRule.bind(this, this.props.index)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tReact.createElement(\"span\", { className: \"glyphicon glyphicon-remove\" }),\n\t\t\t\t\t\t\t\" Delete\"\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\t\n\t/*\n\t *  The following component is used for displaying a filter group\n\t */\n\tvar FilterGroup = React.createClass({\n\t\tdisplayName: \"FilterGroup\",\n\t\n\t\tupdateChild: function updateChild(index, child) {\n\t\t\t// Update a specified child in the groups children\n\t\n\t\t\tvar group = this.props.group;\n\t\t\tgroup.children[index] = child;\n\t\n\t\t\tif (this.props.index) {\n\t\t\t\t// If not base filter group, recursively call update child\n\t\t\t\tthis.props.updateGroup(this.props.index, group);\n\t\t\t} else {\n\t\t\t\t// Else base filter group, update the filter in the data query component\n\t\t\t\tthis.props.updateFilter(group);\n\t\t\t}\n\t\t},\n\t\tupdateGroupOperator: function updateGroupOperator(operator) {\n\t\t\t// Update the group's operator\n\t\t\tvar group = this.props.group;\n\t\t\tgroup.activeOperator = operator;\n\t\n\t\t\t// Update the groups sessions by calling the arrayintersect.js functions\n\t\t\tgroup.session = getSessions(group);\n\t\n\t\t\tif (this.props.index) {\n\t\t\t\t// If not base filter group, recursively call update child\n\t\t\t\tthis.props.updateGroup(this.props.index, group);\n\t\t\t} else {\n\t\t\t\t// Else base filter group, update the filter in the data query component\n\t\t\t\tthis.props.updateFilter(group);\n\t\t\t}\n\t\t},\n\t\tupdateSessions: function updateSessions(index, child) {\n\t\t\t// Computes the desired sessions of the current group\n\t\t\tvar group = this.props.group,\n\t\t\t    sessions = [],\n\t\t\t    session = [];\n\t\t\tgroup.children[index] = child;\n\t\n\t\t\t// Update the groups sessions by calling the arrayintersect.js functions\n\t\t\tgroup.session = getSessions(group);\n\t\t\tif (this.props.index) {\n\t\t\t\t// If not base filter group, recursively call update parents session\n\t\t\t\tthis.props.updateSessions(this.props.index, group);\n\t\t\t} else {\n\t\t\t\t// Else base filter group, update the filter in the data query component\n\t\t\t\tthis.props.updateFilter(group);\n\t\t\t}\n\t\t},\n\t\taddChild: function addChild(type) {\n\t\t\t// Add a child to the group\n\t\t\tvar child,\n\t\t\t    group = this.props.group;\n\t\n\t\t\t// Define the child's base data structure depending on specifed type\n\t\t\tif (type === \"rule\") {\n\t\t\t\tchild = {\n\t\t\t\t\ttype: \"rule\"\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tchild = {\n\t\t\t\t\ttype: \"group\",\n\t\t\t\t\tactiveOperator: 0,\n\t\t\t\t\tchildren: [{\n\t\t\t\t\t\ttype: \"rule\"\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t}\n\t\t\tgroup.children.push(child);\n\t\n\t\t\tif (this.props.index) {\n\t\t\t\t// If not base filter group, recursively call update child\n\t\t\t\tthis.props.updateGroup(this.props.index, group);\n\t\t\t} else {\n\t\t\t\t// Else base filter group, update the filter in the data query component\n\t\t\t\tthis.props.updateFilter(group);\n\t\t\t}\n\t\t},\n\t\tdeleteChild: function deleteChild(index) {\n\t\t\t// Delete a child\n\t\n\t\t\tvar group = this.props.group;\n\t\t\tgroup.children.splice(index, 1);\n\t\n\t\t\t// Update the groups sessions by calling the arrayintersect.js functions\n\t\t\tgroup.session = getSessions(group);\n\t\n\t\t\tif (this.props.index) {\n\t\t\t\t// If not base filter group, recursively call update child\n\t\t\t\tthis.props.updateGroup(this.props.index, group);\n\t\t\t} else {\n\t\t\t\t// Else base filter group, update the filter in the data query component\n\t\t\t\tthis.props.updateFilter(group);\n\t\t\t}\n\t\t},\n\t\trender: function render() {\n\t\t\t// Renders the html for the component\n\t\n\t\t\tvar logicOperator = React.createElement(LogicOperator, { logicOperator: this.props.group.activeOperator,\n\t\t\t\tupdateGroupOperator: this.updateGroupOperator\n\t\t\t}),\n\t\t\t    that = this,\n\t\n\t\n\t\t\t// Render the children based on their type\n\t\t\tchildren = this.props.group.children.map(function (child, index) {\n\t\t\t\tif (child.type === \"rule\") {\n\t\t\t\t\treturn React.createElement(\n\t\t\t\t\t\t\"li\",\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tReact.createElement(FilterRule, { rule: child,\n\t\t\t\t\t\t\titems: that.props.items,\n\t\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\t\tupdateRule: that.updateChild,\n\t\t\t\t\t\t\tupdateSessions: that.updateSessions,\n\t\t\t\t\t\t\tdeleteRule: that.deleteChild,\n\t\t\t\t\t\t\tVisits: that.props.Visits\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t} else if (child.type === \"group\") {\n\t\t\t\t\treturn React.createElement(\n\t\t\t\t\t\t\"li\",\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tReact.createElement(FilterGroup, { group: child,\n\t\t\t\t\t\t\titems: that.props.items,\n\t\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\t\tupdateGroup: that.updateChild,\n\t\t\t\t\t\t\tupdateSessions: that.updateSessions,\n\t\t\t\t\t\t\tdeleteGroup: that.deleteChild,\n\t\t\t\t\t\t\tVisits: that.props.Visits\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}),\n\t\t\t    deleteButton;\n\t\n\t\t\tif (this.props.deleteGroup) {\n\t\t\t\t// Can only delete a group that isn't the base group\n\t\t\t\tdeleteButton = React.createElement(\n\t\t\t\t\t\"button\",\n\t\t\t\t\t{ className: \"btn btn-danger btn-sm pull-right\",\n\t\t\t\t\t\tonClick: this.props.deleteGroup.bind(this, this.props.index)\n\t\t\t\t\t},\n\t\t\t\t\tReact.createElement(\"span\", { className: \"glyphicon glyphicon-remove\" }),\n\t\t\t\t\t\" Delete Group\"\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn React.createElement(\n\t\t\t\t\"div\",\n\t\t\t\t{ className: \"tree\" },\n\t\t\t\tReact.createElement(\n\t\t\t\t\t\"ul\",\n\t\t\t\t\t{ className: \"firstUL\" },\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\"li\",\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\"div\",\n\t\t\t\t\t\t\t{ className: \"row\" },\n\t\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\t\"div\",\n\t\t\t\t\t\t\t\t{ className: \"col-xs-2\" },\n\t\t\t\t\t\t\t\tlogicOperator\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\t\"div\",\n\t\t\t\t\t\t\t\t{ className: \"col-xs-10\" },\n\t\t\t\t\t\t\t\tdeleteButton,\n\t\t\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\t\t\"button\",\n\t\t\t\t\t\t\t\t\t{ className: \"btn btn-primary btn-sm pull-right\",\n\t\t\t\t\t\t\t\t\t\tonClick: this.addChild.bind(this, \"group\")\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tReact.createElement(\"span\", { className: \"glyphicon glyphicon-add\" }),\n\t\t\t\t\t\t\t\t\t\" Add Group\"\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\t\t\"button\",\n\t\t\t\t\t\t\t\t\t{ className: \"btn btn-primary btn-sm pull-right\",\n\t\t\t\t\t\t\t\t\t\tonClick: this.addChild.bind(this, \"rule\")\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tReact.createElement(\"span\", { className: \"glyphicon glyphicon-add\" }),\n\t\t\t\t\t\t\t\t\t\" Add Rule\"\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\"ul\",\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\tchildren\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\t\n\t/*\n\t *  The following component is the base componenet for the filter builder\n\t */\n\tvar FilterBuilder = React.createClass({\n\t\tdisplayName: \"FilterBuilder\",\n\t\n\t\trender: function render() {\n\t\t\treturn React.createElement(\n\t\t\t\t\"div\",\n\t\t\t\tnull,\n\t\t\t\tReact.createElement(\n\t\t\t\t\t\"h1\",\n\t\t\t\t\t{ className: \"col-xs-12\" },\n\t\t\t\t\t\"Filter\"\n\t\t\t\t),\n\t\t\t\tReact.createElement(\n\t\t\t\t\t\"div\",\n\t\t\t\t\t{ className: \"col-xs-12\" },\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\"div\",\n\t\t\t\t\t\t{ className: \"well well-primary\" },\n\t\t\t\t\t\tReact.createElement(FilterGroup, { group: this.props.filter,\n\t\t\t\t\t\t\titems: this.props.items,\n\t\t\t\t\t\t\tupdateFilter: this.props.updateFilter,\n\t\t\t\t\t\t\tVisits: this.props.Visits\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\t\n\twindow.LogicOperator = LogicOperator;\n\twindow.FilterRule = FilterRule;\n\twindow.FilterGroup = FilterGroup;\n\twindow.FilterBuilder = FilterBuilder;\n\t\n\texports.default = {\n\t\tLogicOperator: LogicOperator,\n\t\tFilterRule: FilterRule,\n\t\tFilterGroup: FilterGroup,\n\t\tFilterBuilder: FilterBuilder\n\t};\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// modules/dataquery/js/react.filterBuilder.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8852a649345d4aba9697","/**\n *  The following file contains the components used for the filter builder tab\n *\n *  @author   Jordan Stirling <jstirling91@gmail.com>\n *  @license  http://www.gnu.org/licenses/gpl-3.0.txt GPLv3\n *  @link     https://github.com/mohadesz/Loris-Trunk\n */\n\n/*\n *  The following component is used for displaying operator for the group component\n */\nvar LogicOperator = React.createClass({\n\tchangeOperator: function(op) {\n\t\t// Wrapper function updating operator\n\t\tthis.props.updateGroupOperator(op);\n\t},\n\trender: function() {\n\t\t// Renders the html for the component\n\n\t\tvar andClass = \"btn\",\n\t\t\torClass = \"btn\";\n\n\t\t// Set operator to OR if logicOperator is 1, AND otherwise\n\t\tif(this.props.logicOperator === 1) {\n\t\t\torClass += \" btn-primary\";\n\t\t\tandClass += \" switch\"\n\t\t} else {\n\t\t\tandClass += \" btn-primary\";\n\t\t\torClass += \" switch\"\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"btn-group\" role=\"group\">\n\t\t  \t\t<button type=\"button\" className={andClass} onClick={this.changeOperator.bind(this, 0)}>And</button>\n\t\t  \t\t<button type=\"button\" className={orClass} onClick={this.changeOperator.bind(this, 1)}>Or</button>\n\t\t\t</div>\n\t\t);\n\t}\n});\n\n/*\n *  The following component is used for displaying a filter rule\n */\nvar FilterRule = React.createClass({\n\tgetInitialState: function() {\n\t\treturn {\n\t\t\toperators: {\n\t\t\t\t// \"enum\" : {\n\t\t\t\t\"equal\" : \"=\",\n\t\t\t\t\"notEqual\" : \"!=\",\n\t\t\t\t\"lessThanEqual\" : \"<=\",\n\t\t    \t\"greaterThanEqual\" : \">=\",\n\t\t    \t\"startsWith\" : \"startsWith\",\n\t\t    \t\"contains\" : \"contains\"\n\t\t\t\t// }\n\t\t\t},\n\t\t\tvalue: \"\",\n\t\t}\n\t},\n\tcomponentWillMount: function() {\n       this.valueSet = loris.debounce(this.valueSet,1000);\n    },\n\tselectInstrument: function(event){\n\t\t// Update the rules instrument, getting the instruments avalible fields\n\t\tvar rule = this.props.rule,\n\t\t\tthat = this;\n\t\tif(event.target.value){\n\t\t\trule.instrument = event.target.value;\n\t\t\t$.get(loris.BaseURL + \"/AjaxHelper.php?Module=dataquery&script=datadictionary.php\", { category: rule.instrument}, function(data) {\n                rule.fields = data;\n                that.props.updateRule(that.props.index, rule);\n            }, 'json');\n\t\t}\n\t},\n\tfieldSelect: function(event) {\n\t\t// Update the rules desired field, setting the rules field and field type\n\t\tvar rule = JSON.parse(JSON.stringify(this.props.rule));\n\t\tdelete rule.field;\n\t\tdelete rule.fieldType;\n\t\tdelete rule.operator;\n\t\tdelete rule.value;\n\t\tdelete rule.visit;\n\t\tdelete rule.candidates;\n\t\tif(event.target.value) {\n\t\t\trule.field = rule.fields[event.target.value].key[1];\n\t\t\trule.fieldType = rule.fields[event.target.value].value.Type;\n\t\t}\n\t\tthis.props.updateRule(this.props.index, rule);\n\t},\n\toperatorSelect: function(event) {\n\t\t// Update the desired rule operation for the selected field\n\t\tvar rule = JSON.parse(JSON.stringify(this.props.rule));\n\t\tdelete rule.operator;\n\t\tdelete rule.value;\n\t\tdelete rule.visit;\n\t\tdelete rule.candidates;\n\t\tif(event.target.value) {\n\t\t\trule.operator = event.target.value;\n\t\t}\n\t\tthis.props.updateRule(this.props.index, rule);\n\t},\n\tvalueChange: function(event) {\n\t\tvar rule = JSON.parse(JSON.stringify(this.props.rule));\n\t\tdelete rule.visit;\n\t\tdelete rule.candidates;\n\n\t\trule.value = event.target.value;\n\n\t\tthis.setState({\n\t\t\tvalue: event.target.value\n\t\t});\n\t\tthis.valueSet();\n\t\tthis.props.updateRule(this.props.index, rule);\n\t},\n\tvalueSet: function() {\n\t\t// Update the value to filter for, and runs the query for the rules parameters\n\t\tvar rule = JSON.parse(JSON.stringify(this.props.rule)),\n\t\t\tthat = this;\n\t\tif(this.state.value) {\n\t\t\tvar responseHandler = function(data) {\n\t\t\t\t\tvar i,\n\t\t\t\t\t\tallSessions = {},\n\t\t\t\t\t\tallCandiates = {};\n\t\t\t\t\t// Loop through data and divide into individual visits with unique PSCIDs\n\t\t\t\t\t// storing a master list of unique PSCIDs\n\t\t\t\t\tfor(i = 0; i < data.length; i++){\n\t\t\t\t\t\tif(!allSessions[data[i][1]]){\n\t\t\t\t\t\t\tallSessions[data[i][1]] = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tallSessions[data[i][1]].push(data[i][0]);\n\t\t\t\t\t\tif(!allCandiates[data[i][0]]){\n\t\t\t\t\t\t\tallCandiates[data[i][0]] = []\n\t\t\t\t\t\t}\n\t\t\t\t\t\tallCandiates[data[i][0]].push(data[i][1]);\n\t\t\t\t\t}\n\t\t\t\t\trule.candidates = {\n\t\t\t\t\t\t\"allCandiates\" : allCandiates,\n\t\t\t\t\t\t\"allSessions\" : allSessions\n\t\t\t\t\t};\n\t\t            rule.session = Object.keys(allCandiates);\n\t\t            rule.visit = \"All\";\n\t\t            that.props.updateSessions(that.props.index, rule);\n\t\t        },\n\t\t\t\tajaxRetrieve = function(script) {\n\t\t            $.get(loris.BaseURL + \"/AjaxHelper.php?Module=dataquery&script=\" + script,\n\t\t                  {\n\t\t                    category: rule.instrument,\n\t\t                    field: rule.field,\n\t\t                    value: that.state.value\n\t\t                  },\n\t\t                  responseHandler,\n\t\t                  'json'\n\t\t            );\n\t\t        };\n\t\t    switch(rule.operator) {\n\t\t    \tcase \"equal\":\n\t\t    \t\tajaxRetrieve(\"queryEqual.php\");\n\t\t    \t\tbreak;\n\t\t    \tcase \"notEqual\":\n\t\t    \t\tajaxRetrieve(\"queryNotEqual.php\");\n\t\t    \t\tbreak;\n\t\t    \tcase \"lessThanEqual\":\n\t\t    \t\tajaxRetrieve(\"queryLessThanEqual.php\");\n\t\t    \t\tbreak;\n\t\t    \tcase \"greaterThanEqual\":\n\t\t    \t\tajaxRetrieve(\"queryGreaterThanEqual.php\");\n\t\t    \t\tbreak;\n\t\t    \tcase \"startsWith\":\n\t\t    \t\tajaxRetrieve(\"queryStartsWith.php\");\n\t\t    \t\tbreak;\n\t\t    \tcase \"contains\":\n\t\t    \t\tajaxRetrieve(\"queryContains.php\");\n\t\t    \t\tbreak;\n\t\t    \tdefault:\n\t\t    \t\tbreak;\n\t\t    }\n\t\t}\n\t},\n\tupdateVisit: function(event) {\n\t\t// Update rule to filter for specified visit\n\t\tvar rule = JSON.parse(JSON.stringify(this.props.rule));\n\t\trule.visit = event.target.value;\n\n\t\tif(event.target.value === \"all\"){\n\t\t\t// If all visits, use keys of master list\n\t\t\trule.session = Object.keys(rule.candidates.allCandiates);\n\t\t} else {\n\t\t\t// Else use list of PSCIDs for given vist\n\t\t\trule.session = rule.candidates.allSessions[event.target.value];\n\t\t}\n\t\tthis.props.updateSessions(this.props.index, rule);\n\t},\n\trender: function() {\n\t\t// Renders the html for the component\n\n\t\tvar rule,\n\t\t\tfieldIndex,\n\t\t\tforVisits,\n\t\t\tvisits,\n\t\t\tthat = this;\n\t\tif(this.props.rule.instrument) {\n\t\t\t// Only display field select and etc. if instrument is selected\n\t\t\tvar fields = this.props.rule.fields.map(function(field, index){\n\t\t\t\t\tif(that.props.rule.field && field.key[1] === that.props.rule.field) {\n\t\t\t\t\t\tfieldIndex = index\n\t\t\t\t\t}\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<option value={index}>{field.key[1]}</option>\n\t\t\t\t\t);\n\t\t\t\t}),\n\t\t\t\toperators = [],\n\t\t\t\tinputOptions, input, operatorKey, operatorSelect, options, value, inputType;\n\n\t\t\tif(this.props.rule.fieldType) {\n\t\t\t\t// Only display operators if field is selected\n\t\t\t\tinputType = this.props.rule.fieldType.split(\"(\");\n\t\t\t\toperatorKey = inputType[0]\n\t\t\t\tfor(var key in this.state.operators){\n\t\t\t\t\toperators.push(\n\t\t\t\t\t\t<option value={key} onChange={this.operatorSelect}>\n\t\t\t\t\t\t\t{this.state.operators[key]}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tvalue = (this.props.rule.operator) ? this.props.rule.operator : \"\";\n\t\t\t\toperatorSelect = (\n\t\t\t\t\t<select className=\"input-sm col-xs-3 \" onChange={this.operatorSelect} value={value}>\n\t\t\t\t\t\t<option value=\"\"></option>\n\t\t\t\t\t\t{operators}\n\t\t\t\t\t</select>\n\t\t\t\t);\n\t\t\t\tif(this.props.rule.operator){\n\t\t\t\t\t// Only display value input if operator is selected, displaying specific\n\t\t\t\t\t// input type field data type\n\t\t\t\t\tswitch(operatorKey){\n\t\t\t\t\t\tcase \"enum\":\n\t\t\t\t\t\t\tinputOptions = enumToArray(this.props.rule.fieldType);\n\t\t\t\t\t\t\toptions = inputOptions.map(function(option){\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<option value={option}>\n\t\t\t\t\t\t\t\t\t\t{option}\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tvalue = (this.props.rule.value) ? this.props.rule.value : \"\";\n\t\t\t\t\t\t\tinput = (\n\t\t\t\t\t\t\t\t<select className=\"input-sm col-xs-3\" onChange={this.valueChange} value={value}>\n\t\t\t\t\t\t\t\t\t<option value=\"\"></option>\n\t\t\t\t\t\t\t\t\t{options}\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tinput = (\n\t\t\t\t\t\t\t\t<input type=\"text\"\n\t\t\t\t\t\t\t\t\t   className=\"input-sm col-xs-3\"\n\t\t\t\t\t\t\t\t\t   onChange={this.valueChange}\n\t\t\t\t\t\t\t\t\t   value={this.props.rule.value}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(this.props.rule.visit){\n\t\t\t\t\t// Display dropdown for visit select. This only displays after a value\n\t\t\t\t\t// has been inputed\n\t\t\t\t\tvisits = Object.keys(this.props.Visits).map(function(visit){\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<option value={visit}>\n\t\t\t\t\t\t\t\t{visit}\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\tforVisits = (\n\t\t\t\t\t\t<select className=\"input-sm col-xs-3\" onChange={this.updateVisit} value={this.props.rule.visit}>\n\t\t\t\t\t\t\t<option value=\"all\">All Visits</option>\n\t\t\t\t\t\t\t{visits}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\trule = (\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"col-xs-12\">\n\t\t\t\t\t\t<label className=\"instrumentLabel\">{this.props.rule.instrument}</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-xs-10\">\n\t\t\t\t\t\t<select className=\"input-sm col-xs-3\" onChange={this.fieldSelect} value={fieldIndex}>\n\t\t\t\t\t\t\t<option value=\"\"></option>\n\t\t\t\t\t\t\t{fields}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t{operatorSelect}\n\t\t\t\t\t\t{input}\n\t\t\t\t\t\t{forVisits}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\t// Else display dropdown for instrument select\n\t\t\tvar options = this.props.items.map(function(item){\n\t\t\t\treturn (\n\t\t\t\t\t<option value={item.category}>{item.category}</option>\n\t\t\t\t);\n\t\t\t});\n\t\t\trule = (\n\t\t\t\t<select onChange={this.selectInstrument} className=\"input-sm col-xs-10\">\n\t\t\t\t\t<option value=\"\"></option>\n\t\t\t\t\t{options}\n\t\t\t\t</select>\n\t\t\t)\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"panel panel-default\">\n\t\t\t\t<div className=\"panel-body\">\n\t\t\t\t\t{rule}\n\t\t\t\t\t<div className=\"col-xs-2\">\n\t\t\t\t\t\t<button className=\"btn btn-danger btn-sm pull-right\"\n\t\t\t\t\t\t\t\tonClick={this.props.deleteRule.bind(this, this.props.index)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span className=\"glyphicon glyphicon-remove\"></span> Delete\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n});\n\n/*\n *  The following component is used for displaying a filter group\n */\nvar FilterGroup = React.createClass({\n\tupdateChild: function(index, child) {\n\t\t// Update a specified child in the groups children\n\n\t\tvar group = this.props.group;\n\t\tgroup.children[index] = child;\n\n\t\tif(this.props.index) {\n\t\t\t// If not base filter group, recursively call update child\n\t\t\tthis.props.updateGroup(this.props.index, group);\n\t\t} else {\n\t\t\t// Else base filter group, update the filter in the data query component\n\t\t\tthis.props.updateFilter(group);\n\t\t}\n\t},\n\tupdateGroupOperator: function(operator) {\n\t\t// Update the group's operator\n\t\tvar group = this.props.group;\n\t\tgroup.activeOperator = operator;\n\n\t\t// Update the groups sessions by calling the arrayintersect.js functions\n\t\tgroup.session = getSessions(group);\n\n\t\tif(this.props.index) {\n\t\t\t// If not base filter group, recursively call update child\n\t\t\tthis.props.updateGroup(this.props.index, group);\n\t\t} else {\n\t\t\t// Else base filter group, update the filter in the data query component\n\t\t\tthis.props.updateFilter(group);\n\t\t}\n\t},\n\tupdateSessions: function(index, child) {\n\t\t// Computes the desired sessions of the current group\n\t\tvar group = this.props.group,\n\t\t \tsessions = [],\n\t\t \tsession = [];\n\t\tgroup.children[index] = child;\n\n\t\t// Update the groups sessions by calling the arrayintersect.js functions\n\t\tgroup.session = getSessions(group);\n\t\tif(this.props.index) {\n\t\t\t// If not base filter group, recursively call update parents session\n\t\t\tthis.props.updateSessions(this.props.index, group);\n\t\t} else {\n\t\t\t// Else base filter group, update the filter in the data query component\n\t\t\tthis.props.updateFilter(group)\n\t\t}\n\t},\n\taddChild: function(type) {\n\t\t// Add a child to the group\n\t\tvar child,\n\t\t\tgroup = this.props.group;\n\n\t\t// Define the child's base data structure depending on specifed type\n\t\tif(type === \"rule\") {\n\t\t\tchild = {\n\t\t\t\ttype: \"rule\"\n\t\t\t}\n\t\t} else {\n\t\t\tchild = {\n\t\t\t\ttype: \"group\",\n\t\t\t\tactiveOperator: 0,\n\t\t\t\tchildren: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: \"rule\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t\tgroup.children.push(child);\n\n\t\tif(this.props.index) {\n\t\t\t// If not base filter group, recursively call update child\n\t\t\tthis.props.updateGroup(this.props.index, group);\n\t\t} else {\n\t\t\t// Else base filter group, update the filter in the data query component\n\t\t\tthis.props.updateFilter(group)\n\t\t}\n\t},\n\tdeleteChild: function(index) {\n\t\t// Delete a child\n\n\t\tvar group = this.props.group;\n\t\tgroup.children.splice(index, 1);\n\n\t\t// Update the groups sessions by calling the arrayintersect.js functions\n\t\tgroup.session = getSessions(group);\n\n\n\t\tif(this.props.index) {\n\t\t\t// If not base filter group, recursively call update child\n\t\t\tthis.props.updateGroup(this.props.index, group);\n\t\t} else {\n\t\t\t// Else base filter group, update the filter in the data query component\n\t\t\tthis.props.updateFilter(group);\n\t\t}\n\t},\n\trender: function() {\n\t\t// Renders the html for the component\n\n\t\tvar logicOperator = (\n\t\t\t\t<LogicOperator logicOperator={this.props.group.activeOperator}\n\t\t\t\t\t\t\t   updateGroupOperator={this.updateGroupOperator}\n\t\t\t\t/>\n\t\t\t),\n\t\t\tthat = this,\n\n\t\t\t// Render the children based on their type\n\t\t    children = this.props.group.children.map(function(child, index){\n\t\t    \tif(child.type === \"rule\") {\n\t\t    \t\treturn (\n\t\t    \t\t\t<li>\n\t\t    \t\t\t\t<FilterRule rule = {child}\n\t\t    \t\t\t\t\t\t\titems = {that.props.items}\n\t\t    \t\t\t\t\t\t\tindex = {index}\n\t\t    \t\t\t\t\t\t\tupdateRule = {that.updateChild}\n\t\t    \t\t\t\t\t\t\tupdateSessions = {that.updateSessions}\n\t\t    \t\t\t\t\t\t\tdeleteRule = {that.deleteChild}\n\t\t    \t\t\t\t\t\t\tVisits={that.props.Visits}\n\t\t    \t\t\t\t/>\n\t\t    \t\t\t</li>\n\t\t    \t\t);\n\t\t    \t} else if(child.type === \"group\") {\n\t\t    \t\treturn (\n\t\t    \t\t\t<li>\n\t\t    \t\t\t\t<FilterGroup group={child}\n\t\t    \t\t\t\t\t\t\t items={that.props.items}\n\t\t    \t\t\t\t\t\t\t index = {index}\n\t\t    \t\t\t\t\t\t\t updateGroup = {that.updateChild}\n\t\t    \t\t\t\t\t\t\t updateSessions = {that.updateSessions}\n\t\t    \t\t\t\t\t\t\t deleteGroup = {that.deleteChild}\n\t\t    \t\t\t\t\t\t\t Visits={that.props.Visits}\n\t\t    \t\t\t\t/>\n\t\t    \t\t\t</li>\n\t\t    \t\t);\n\t\t    \t}\n\t\t    }),\n\t\t\tdeleteButton;\n\n\t\tif(this.props.deleteGroup){\n\t\t\t// Can only delete a group that isn't the base group\n\t\t\tdeleteButton = (\n\t\t\t\t<button className=\"btn btn-danger btn-sm pull-right\"\n\t\t\t\t\t\t\t\t\t\tonClick={this.props.deleteGroup.bind(this, this.props.index)}\n\t\t\t\t>\n\t\t\t\t\t<span className=\"glyphicon glyphicon-remove\"></span> Delete Group\n\t\t\t\t</button>\n\t\t\t)\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"tree\">\n\t\t\t\t<ul className=\"firstUL\">\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col-xs-2\">\n\t\t\t\t\t\t\t\t{logicOperator}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-xs-10\">\n\t\t\t\t\t\t\t\t{deleteButton}\n\t\t\t\t\t\t\t\t<button className=\"btn btn-primary btn-sm pull-right\"\n\t\t\t\t\t\t\t\t\t\tonClick={this.addChild.bind(this, \"group\")}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<span className=\"glyphicon glyphicon-add\"></span> Add Group\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button className=\"btn btn-primary btn-sm pull-right\"\n\t\t\t\t\t\t\t\t\t\tonClick={this.addChild.bind(this, \"rule\")}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<span className=\"glyphicon glyphicon-add\"></span> Add Rule\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{children}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t)\n\t}\n});\n\n/*\n *  The following component is the base componenet for the filter builder\n */\nvar FilterBuilder = React.createClass({\n    render: function() {\n        return (\n        \t<div>\n        \t\t<h1 className=\"col-xs-12\">Filter</h1>\n        \t\t<div className=\"col-xs-12\">\n\t        \t\t<div className=\"well well-primary\">\n\t        \t\t\t<FilterGroup group={this.props.filter}\n\t        \t\t\t\t\t\t items={this.props.items}\n\t        \t\t\t\t\t\t updateFilter = {this.props.updateFilter}\n\t        \t\t\t\t\t\t Visits={this.props.Visits}\n\t        \t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n        \t</div>\n        );\n    }\n});\n\nwindow.LogicOperator = LogicOperator;\nwindow.FilterRule = FilterRule;\nwindow.FilterGroup = FilterGroup;\nwindow.FilterBuilder = FilterBuilder;\n\nexport default {\n  LogicOperator,\n  FilterRule,\n  FilterGroup,\n  FilterBuilder\n};\n\n\n\n// WEBPACK FOOTER //\n// ./modules/dataquery/jsx/react.filterBuilder.js"],"sourceRoot":""}