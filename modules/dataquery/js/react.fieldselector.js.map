{"version":3,"sources":["webpack:///modules/dataquery/js/react.fieldselector.js","webpack:///webpack/bootstrap 8852a649345d4aba9697?fa4b*****************","webpack:///./modules/dataquery/jsx/react.fieldselector.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","Object","defineProperty","value","CategoryItem","React","createClass","displayName","render","classList","badge","this","props","selected","count","createElement","className","href","onClick","name","CategoryList","getInitialState","selectedCategory","selectCategoryHandler","category","that","evt","onCategorySelect","setState","items","i","length","state","push","key","numFields","FieldItem","visitSelect","field","instrument","Category","FieldName","target","checked","fieldVisitSelect","criteria","multiselect","downloadIcon","keys","Visits","map","visit","selectedVisits","class","type","onChange","downloadable","title","Description","FieldList","onFieldClick","fieldName","onFieldSelect","desc","isFile","selectedFields","fields","rowsPerPage","FieldsPerPage","start","PageNumber","filter","Filter","toLowerCase","Type","indexOf","IsFile","ValueType","bind","PaginationLinks","Total","Active","onChangePage","changePage","RowsPerPage","FieldSelector","propTypes","PropTypes","array","instruments","categoryFields","onFieldChange","$","get","loris","BaseURL","data","cf","filterChange","currentTarget","addAll","deleteAll","modifyCategoryFieldVists","action","selectedFieldsCount","categoryVisits","allVisits","SelectDropdown","multi","options","Criteria","window","default"],"mappings":"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","file":"./modules/dataquery/js/react.fieldselector.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t/**\n\t *  The following file contains the components used for the field select tab\n\t *\n\t *  @author   Jordan Stirling <jstirling91@gmail.com>\n\t *  @author   Dave MacFarlane <david.macfarlane2@mcgill.ca>\n\t *  @license  http://www.gnu.org/licenses/gpl-3.0.txt GPLv3\n\t *  @link     https://github.com/mohadesz/Loris-Trunk\n\t */\n\t\n\t/*\n\t *  The following component is used for displaying individual categories in the\n\t *  categories list\n\t */\n\tvar CategoryItem = React.createClass({\n\t    displayName: \"CategoryItem\",\n\t\n\t    render: function render() {\n\t        var classList = \"list-group-item\",\n\t            badge = '';\n\t        if (this.props.selected) {\n\t            classList += \" active\";\n\t        }\n\t        if (this.props.count >= 0) {\n\t            badge = React.createElement(\n\t                \"span\",\n\t                { className: \"badge\" },\n\t                this.props.count\n\t            );\n\t        }\n\t        return React.createElement(\n\t            \"a\",\n\t            { href: \"#\", className: classList, onClick: this.props.onClick },\n\t            this.props.name,\n\t            badge\n\t        );\n\t    }\n\t});\n\t\n\t/*\n\t *  The following component is used for displaying the list of availible categories\n\t */\n\tvar CategoryList = React.createClass({\n\t    displayName: \"CategoryList\",\n\t\n\t    getInitialState: function getInitialState() {\n\t        return {\n\t            selectedCategory: \"\"\n\t        };\n\t    },\n\t    selectCategoryHandler: function selectCategoryHandler(category) {\n\t        var that = this;\n\t        return function (evt) {\n\t            if (that.props.onCategorySelect) {\n\t                that.props.onCategorySelect(category);\n\t            }\n\t            that.setState({\n\t                selectedCategory: category\n\t            });\n\t        };\n\t    },\n\t    render: function render() {\n\t        var items = [],\n\t            selectClosure = function selectClosure(name) {\n\t            return this.selectCategory(name);\n\t        };\n\t        for (i = 0; i < this.props.items.length; i += 1) {\n\t            selected = false;\n\t            if (this.props.items[i].category == this.state.selectedCategory) {\n\t                selected = true;\n\t            }\n\t            items.push(React.createElement(CategoryItem, {\n\t                key: this.props.items[i].category,\n\t                name: this.props.items[i].category,\n\t                count: this.props.items[i].numFields,\n\t                selected: selected,\n\t                onClick: this.selectCategoryHandler(this.props.items[i].category) }));\n\t        }\n\t        return React.createElement(\n\t            \"div\",\n\t            { className: \"list-group col-md-3 col-sm-12\" },\n\t            items\n\t        );\n\t    }\n\t});\n\t\n\t/*\n\t *  The following component is used for displaying individual fields\n\t */\n\tvar FieldItem = React.createClass({\n\t    displayName: \"FieldItem\",\n\t\n\t    visitSelect: function visitSelect(evt) {\n\t        // Selects and deselects visits\n\t\n\t        var field = {\n\t            instrument: this.props.Category,\n\t            field: this.props.FieldName\n\t        };\n\t        if (evt.target.checked) {\n\t            this.props.fieldVisitSelect(\"check\", evt.target.value, field);\n\t        } else {\n\t            this.props.fieldVisitSelect(\"uncheck\", evt.target.value, field);\n\t        }\n\t    },\n\t    render: function render() {\n\t        // Renders the html for the component\n\t\n\t        var classList = \"list-group-item row\",\n\t            downloadIcon = \"\",\n\t            criteria,\n\t            multiselect,\n\t            that = this;\n\t        if (this.props.selected) {\n\t            // If field is selected, add active class and visits\n\t            classList += \" active\";\n\t            multiselect = Object.keys(this.props.Visits).map(function (visit) {\n\t                var checked = false;\n\t                if (that.props.selectedVisits[visit]) {\n\t                    checked = true;\n\t                }\n\t                return React.createElement(\n\t                    \"div\",\n\t                    { \"class\": \"checkbox\" },\n\t                    React.createElement(\n\t                        \"label\",\n\t                        null,\n\t                        React.createElement(\"input\", { type: \"checkbox\", value: visit, checked: checked, onChange: that.visitSelect }),\n\t                        \" \",\n\t                        visit\n\t                    )\n\t                );\n\t            });\n\t        }\n\t        if (this.props.downloadable) {\n\t            // Add download icon if field is downloadable\n\t            downloadIcon = React.createElement(\"span\", { className: \"glyphicon glyphicon-download-alt pull-right\", title: \"Downloadable File\" });\n\t        }\n\t        // Don't display the category in the field selector\n\t        var displayName = this.props.FieldName;\n\t\n\t        return React.createElement(\n\t            \"div\",\n\t            { className: classList },\n\t            React.createElement(\n\t                \"div\",\n\t                { className: \"col-xs-8\", onClick: this.props.onClick },\n\t                React.createElement(\n\t                    \"h4\",\n\t                    { className: \"list-group-item-heading col-xs-12\" },\n\t                    displayName,\n\t                    criteria,\n\t                    downloadIcon\n\t                ),\n\t                React.createElement(\n\t                    \"span\",\n\t                    { className: \"col-xs-12\" },\n\t                    this.props.Description\n\t                )\n\t            ),\n\t            React.createElement(\n\t                \"div\",\n\t                { className: \"col-xs-4\" },\n\t                multiselect\n\t            )\n\t        );\n\t    }\n\t});\n\t\n\t/*\n\t *  The following component is used for displaying the list of availible fields for\n\t *  the selected category\n\t */\n\tvar FieldList = React.createClass({\n\t    displayName: \"FieldList\",\n\t\n\t    onFieldClick: function onFieldClick(fieldName, downloadable) {\n\t        // Wrapper function used to update field\n\t        this.props.onFieldSelect(fieldName, this.props.category, downloadable);\n\t    },\n\t    render: function render() {\n\t        // Renders the html for the component\n\t\n\t        var fields = [];\n\t        var items = this.props.items || [];\n\t        var fieldName, desc, isFile, type, selected;\n\t        var rowsPerPage = this.props.FieldsPerPage || 20;\n\t\n\t        var start = (this.props.PageNumber - 1) * rowsPerPage;\n\t        var filter = this.props.Filter.toLowerCase();\n\t        var selectedFields;\n\t        if (filter > 0) {\n\t            start = 0;\n\t        }\n\t\n\t        // Display the fields using the FieldItem component\n\t        for (var i = start; i < items.length; i += 1) {\n\t            fieldName = items[i].key[1];\n\t            desc = items[i].value.Description;\n\t            type = items[i].value.Type || \"varchar(255)\";\n\t\n\t            if (fieldName.toLowerCase().indexOf(filter) == -1 && desc.toLowerCase().indexOf(filter) == -1) {\n\t                continue;\n\t            }\n\t\n\t            // Check if field is a file, if so set flag to true\n\t            isFile = false;\n\t            if (items[i].value.IsFile) {\n\t                isFile = true;\n\t            }\n\t\n\t            // Check if field is selected, if so set flag to true\n\t            selected = false;\n\t            if (this.props.selected && this.props.selected[fieldName]) {\n\t                selected = true;\n\t            }\n\t\n\t            // Get the fields selected visits, set to empty object if none\n\t            if (this.props.selected && this.props.selected[fieldName]) {\n\t                selectedFields = this.props.selected[fieldName];\n\t            } else {\n\t                selectedFields = {};\n\t            }\n\t\n\t            fields.push(React.createElement(FieldItem, { FieldName: fieldName,\n\t                Category: this.props.category,\n\t                Description: desc,\n\t                ValueType: type,\n\t                onClick: this.onFieldClick.bind(this, fieldName, isFile),\n\t                selected: selected,\n\t                downloadable: isFile,\n\t                Visits: this.props.Visits,\n\t                selectedVisits: selectedFields,\n\t                fieldVisitSelect: this.props.fieldVisitSelect\n\t            }));\n\t            if (fields.length > rowsPerPage) {\n\t                break;\n\t            }\n\t        }\n\t\n\t        return React.createElement(\n\t            \"div\",\n\t            { className: \"list-group col-md-9 col-sm-12\" },\n\t            fields,\n\t            React.createElement(PaginationLinks, { Total: items.length, Active: this.props.PageNumber, onChangePage: this.props.changePage, RowsPerPage: rowsPerPage })\n\t        );\n\t    }\n\t});\n\t\n\t/*\n\t *  The following component is the base component for the field select tan\n\t */\n\tvar FieldSelector = React.createClass({\n\t    displayName: \"FieldSelector\",\n\t\n\t    propTypes: {\n\t        selectedFields: React.PropTypes.array\n\t    },\n\t    getInitialState: function getInitialState() {\n\t        var instruments = {};\n\t        for (var i = 0; i < this.props.items.length; i++) {\n\t            instruments[this.props.items[i].category] = this.props.items[i].category;\n\t        }\n\t        return {\n\t            filter: \"\",\n\t            selectedCategory: \"\",\n\t            categoryFields: {},\n\t            instruments: instruments,\n\t            PageNumber: 1\n\t        };\n\t    },\n\t    onFieldSelect: function onFieldSelect(fieldName, category, downloadable) {\n\t        // Wrapper function for field changes\n\t        this.props.onFieldChange(fieldName, category, downloadable);\n\t    },\n\t    onCategorySelect: function onCategorySelect(category) {\n\t        // Used for getting the fields of the given category\n\t\n\t        var that = this;\n\t\n\t        // Use the cached version if it exists\n\t        if (this.state.categoryFields[category]) {} else {\n\t            // Retrieve the data dictionary\n\t            $.get(loris.BaseURL + \"/AjaxHelper.php?Module=dataquery&script=datadictionary.php\", { category: category }, function (data) {\n\t                var cf = that.state.categoryFields;\n\t                cf[category] = data;\n\t                that.setState({\n\t                    categoryFields: cf\n\t                });\n\t            }, 'json');\n\t        }\n\t        this.setState({\n\t            selectedCategory: category,\n\t            PageNumber: 1\n\t        });\n\t    },\n\t    filterChange: function filterChange(evt) {\n\t        this.setState({\n\t            filter: evt.currentTarget.value\n\t        });\n\t    },\n\t    addAll: function addAll() {\n\t        // Adds all fields the currently selected category\n\t        var i, isFile, fieldName, category;\n\t        for (i in this.state.categoryFields[this.state.selectedCategory]) {\n\t            fieldName = this.state.categoryFields[this.state.selectedCategory][i].key[1];\n\t            category = this.state.categoryFields[this.state.selectedCategory][i].key[0];\n\t            if (this.props.selectedFields[category] && this.props.selectedFields[category][fieldName]) {\n\t                // Do nothing, already added\n\t            } else {\n\t                    isFile = this.state.categoryFields[category][i].value.isFile ? true : false;\n\t                    this.props.onFieldChange(fieldName, category, isFile);\n\t                }\n\t        }\n\t    },\n\t    deleteAll: function deleteAll() {\n\t        // Deletes all fields the currently selected category\n\t        var i, index, fieldName;\n\t        for (i in this.state.categoryFields[this.state.selectedCategory]) {\n\t            fieldName = this.state.categoryFields[this.state.selectedCategory][i].key[1];\n\t            category = this.state.categoryFields[this.state.selectedCategory][i].key[0];\n\t            if (this.props.selectedFields[category] && this.props.selectedFields[category][fieldName]) {\n\t                isFile = this.state.categoryFields[category][i].value.isFile ? true : false;\n\t                this.props.onFieldChange(fieldName, category, isFile);\n\t            }\n\t        }\n\t    },\n\t    modifyCategoryFieldVists: function modifyCategoryFieldVists(visit, action) {\n\t        if (this.state.selectedCategory && this.props.selectedFields[this.state.selectedCategory]) {\n\t            for (var field in this.props.selectedFields[this.state.selectedCategory]) {\n\t                if (field == \"allVisits\") {\n\t                    continue;\n\t                }\n\t                if (action == \"check\" && !this.props.selectedFields[this.state.selectedCategory][field][visit]) {\n\t                    this.props.fieldVisitSelect(action, visit, { \"instrument\": this.state.selectedCategory, \"field\": field });\n\t                } else if (action == \"uncheck\" && this.props.selectedFields[this.state.selectedCategory][field][visit]) {\n\t                    this.props.fieldVisitSelect(action, visit, { \"instrument\": this.state.selectedCategory, \"field\": field });\n\t                }\n\t            }\n\t        }\n\t    },\n\t    changePage: function changePage(i) {\n\t        this.setState({\n\t            PageNumber: i\n\t        });\n\t    },\n\t    render: function render() {\n\t        // Renders the html for the component\n\t        var categoryVisits = {},\n\t            selectedFieldsCount;\n\t        if (this.state.selectedCategory != \"\") {\n\t            if (this.props.selectedFields[this.state.selectedCategory]) {\n\t                selectedFieldsCount = Object.keys(this.props.selectedFields[this.state.selectedCategory]).length - 1;\n\t            }\n\t            for (var key in this.props.Visits) {\n\t                if (this.props.selectedFields[this.state.selectedCategory] && this.props.selectedFields[this.state.selectedCategory].allVisits[key] && this.props.selectedFields[this.state.selectedCategory].allVisits[key] == selectedFieldsCount) {\n\t                    categoryVisits[key] = true;\n\t                } else {\n\t                    categoryVisits[key] = false;\n\t                }\n\t            }\n\t        }\n\t\n\t        return React.createElement(\n\t            \"div\",\n\t            null,\n\t            React.createElement(\n\t                \"div\",\n\t                { className: \"row\" },\n\t                React.createElement(\n\t                    \"h1\",\n\t                    { className: \"col-md-8\" },\n\t                    this.props.title\n\t                ),\n\t                React.createElement(\n\t                    \"div\",\n\t                    { className: \"form-group col-sm-4 search\" },\n\t                    React.createElement(\n\t                        \"label\",\n\t                        { className: \"col-sm-12 col-md-4\" },\n\t                        \"Search within instrument:\"\n\t                    ),\n\t                    React.createElement(\n\t                        \"div\",\n\t                        { className: \"col-sm-12 col-md-8\" },\n\t                        React.createElement(\"input\", { type: \"text\", onChange: this.filterChange, className: \"form-control input-sm\" })\n\t                    )\n\t                )\n\t            ),\n\t            React.createElement(\n\t                \"div\",\n\t                { className: \"row form-group\" },\n\t                React.createElement(\n\t                    \"div\",\n\t                    { className: \"col-md-8\" },\n\t                    React.createElement(\n\t                        \"button\",\n\t                        { type: \"button\", className: \"btn btn-primary\", onClick: this.addAll },\n\t                        \"Add All\"\n\t                    ),\n\t                    React.createElement(\n\t                        \"button\",\n\t                        { type: \"button\", className: \"btn btn-primary\", onClick: this.deleteAll },\n\t                        \"Remove All\"\n\t                    )\n\t                )\n\t            ),\n\t            React.createElement(\n\t                \"div\",\n\t                { className: \"row form-group\" },\n\t                React.createElement(\n\t                    \"div\",\n\t                    { className: \"form-group col-sm-8 search\" },\n\t                    React.createElement(\n\t                        \"label\",\n\t                        { className: \"col-sm-12 col-md-2\" },\n\t                        \"Instrument:\"\n\t                    ),\n\t                    React.createElement(\n\t                        \"div\",\n\t                        { className: \"col-sm-12 col-md-8\" },\n\t                        React.createElement(SelectDropdown, {\n\t                            multi: false,\n\t                            options: this.state.instruments,\n\t                            onFieldClick: this.onCategorySelect,\n\t                            selectedCategory: this.state.selectedCategory\n\t                        })\n\t                    )\n\t                ),\n\t                React.createElement(\n\t                    \"div\",\n\t                    { className: \"form-group col-sm-4 search\" },\n\t                    React.createElement(\n\t                        \"label\",\n\t                        { className: \"col-sm-12 col-md-4\" },\n\t                        \"Visits:\"\n\t                    ),\n\t                    React.createElement(\n\t                        \"div\",\n\t                        { className: \"col-sm-12 col-md-8\" },\n\t                        React.createElement(SelectDropdown, {\n\t                            multi: true,\n\t                            options: categoryVisits,\n\t                            onFieldClick: this.modifyCategoryFieldVists\n\t                        })\n\t                    )\n\t                )\n\t            ),\n\t            React.createElement(\n\t                \"div\",\n\t                { className: \"row\" },\n\t                React.createElement(FieldList, {\n\t                    items: this.state.categoryFields[this.state.selectedCategory],\n\t                    category: this.state.selectedCategory,\n\t                    Criteria: this.props.Criteria,\n\t                    onFieldSelect: this.onFieldSelect,\n\t                    FieldsPerPage: \"15\",\n\t                    selected: this.props.selectedFields[this.state.selectedCategory],\n\t                    Filter: this.state.filter,\n\t                    Visits: this.props.Visits,\n\t                    fieldVisitSelect: this.props.fieldVisitSelect,\n\t                    changePage: this.changePage,\n\t                    PageNumber: this.state.PageNumber\n\t                })\n\t            )\n\t        );\n\t    }\n\t});\n\t\n\twindow.CategoryItem = CategoryItem;\n\twindow.CategoryList = CategoryList;\n\twindow.FieldItem = FieldItem;\n\twindow.FieldList = FieldList;\n\twindow.FieldSelector = FieldSelector;\n\t\n\texports.default = {\n\t    CategoryItem: CategoryItem,\n\t    CategoryList: CategoryList,\n\t    FieldItem: FieldItem,\n\t    FieldList: FieldList,\n\t    FieldSelector: FieldSelector\n\t};\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// modules/dataquery/js/react.fieldselector.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8852a649345d4aba9697","/**\n *  The following file contains the components used for the field select tab\n *\n *  @author   Jordan Stirling <jstirling91@gmail.com>\n *  @author   Dave MacFarlane <david.macfarlane2@mcgill.ca>\n *  @license  http://www.gnu.org/licenses/gpl-3.0.txt GPLv3\n *  @link     https://github.com/mohadesz/Loris-Trunk\n */\n\n/*\n *  The following component is used for displaying individual categories in the\n *  categories list\n */\nvar CategoryItem = React.createClass({\n    render: function() {\n        var classList = \"list-group-item\",\n            badge = '';\n        if(this.props.selected) {\n            classList += \" active\";\n        }\n        if(this.props.count >= 0) {\n            badge = <span className=\"badge\">{this.props.count}</span>\n        }\n        return (\n            <a href=\"#\" className={classList} onClick={this.props.onClick}>\n                {this.props.name}\n                {badge}\n            </a>\n        );\n    }\n});\n\n/*\n *  The following component is used for displaying the list of availible categories\n */\nvar CategoryList = React.createClass({\n    getInitialState: function () {\n        return {\n            selectedCategory: \"\"\n        };\n    },\n    selectCategoryHandler: function(category) {\n        var that = this;\n        return function(evt) {\n            if(that.props.onCategorySelect) {\n                that.props.onCategorySelect(category);\n            }\n            that.setState({\n                selectedCategory: category\n            });\n        };\n    },\n    render: function() {\n        var items = [],\n             selectClosure = function(name) {\n                 return this.selectCategory(name);\n             };\n        for(i = 0; i < this.props.items.length; i += 1) {\n            selected = false;\n            if(this.props.items[i].category == this.state.selectedCategory) {\n                selected=true;\n            }\n            items.push(<CategoryItem\n                key={this.props.items[i].category}\n                name={this.props.items[i].category}\n                count={this.props.items[i].numFields}\n                selected={selected}\n                onClick={this.selectCategoryHandler(this.props.items[i].category)} />);\n        }\n        return (\n            <div className=\"list-group col-md-3 col-sm-12\">{items}</div>\n        );\n    }\n});\n\n/*\n *  The following component is used for displaying individual fields\n */\nvar FieldItem = React.createClass({\n    visitSelect: function(evt){\n        // Selects and deselects visits\n\n        var field = {\n            instrument : this.props.Category,\n            field : this.props.FieldName\n        };\n        if(evt.target.checked){\n            this.props.fieldVisitSelect(\"check\", evt.target.value, field);\n        } else {\n            this.props.fieldVisitSelect(\"uncheck\", evt.target.value, field);\n        }\n    },\n    render: function() {\n        // Renders the html for the component\n\n        var classList = \"list-group-item row\",\n            downloadIcon = \"\",\n            criteria,\n            multiselect,\n            that = this;\n        if(this.props.selected) {\n            // If field is selected, add active class and visits\n            classList += \" active\";\n            multiselect = Object.keys(this.props.Visits).map(function(visit){\n                var checked = false;\n                if(that.props.selectedVisits[visit]){\n                    checked = true;\n                }\n                return (\n                    <div class=\"checkbox\">\n                        <label>\n                            <input type=\"checkbox\" value={visit} checked={checked} onChange={that.visitSelect}/> {visit}\n                        </label>\n                    </div>\n                );\n            });\n        }\n        if(this.props.downloadable) {\n            // Add download icon if field is downloadable\n            downloadIcon = <span className=\"glyphicon glyphicon-download-alt pull-right\" title=\"Downloadable File\"></span>\n        }\n        // Don't display the category in the field selector\n        var displayName = this.props.FieldName;\n\n        return (\n            <div className={classList}>\n                <div className=\"col-xs-8\" onClick={this.props.onClick}>\n                    <h4 className=\"list-group-item-heading col-xs-12\">{displayName}{criteria}{downloadIcon}</h4>\n                    <span className=\"col-xs-12\">{this.props.Description}</span>\n                </div>\n                <div className=\"col-xs-4\">\n                    {multiselect}\n                </div>\n            </div>\n        );\n    }\n});\n\n/*\n *  The following component is used for displaying the list of availible fields for\n *  the selected category\n */\nvar FieldList = React.createClass({\n    onFieldClick: function(fieldName, downloadable) {\n        // Wrapper function used to update field\n        this.props.onFieldSelect(fieldName, this.props.category, downloadable);\n    },\n    render: function() {\n        // Renders the html for the component\n\n        var fields = [];\n        var items = this.props.items || [];\n        var fieldName, desc, isFile, type, selected;\n        var rowsPerPage = this.props.FieldsPerPage || 20;\n\n        var start = (this.props.PageNumber - 1) * rowsPerPage;\n        var filter = this.props.Filter.toLowerCase();\n        var selectedFields;\n        if(filter > 0) {\n            start = 0;\n        }\n\n        // Display the fields using the FieldItem component\n        for(var i = start; i < items.length; i += 1) {\n            fieldName = items[i].key[1];\n            desc = items[i].value.Description;\n            type = items[i].value.Type || \"varchar(255)\";\n\n            if(fieldName.toLowerCase().indexOf(filter) == -1 && desc.toLowerCase().indexOf(filter) == -1) {\n                continue;\n            }\n\n            // Check if field is a file, if so set flag to true\n            isFile = false;\n            if(items[i].value.IsFile) {\n                isFile = true;\n            }\n\n            // Check if field is selected, if so set flag to true\n            selected=false;\n            if(this.props.selected && this.props.selected[fieldName]) {\n                selected=true;\n            }\n\n            // Get the fields selected visits, set to empty object if none\n            if(this.props.selected && this.props.selected[fieldName]) {\n                selectedFields = this.props.selected[fieldName]\n            } else {\n                selectedFields = {}\n            }\n\n            fields.push(<FieldItem FieldName={fieldName}\n                Category={this.props.category}\n                Description={desc}\n                ValueType={type}\n                onClick={this.onFieldClick.bind(this, fieldName, isFile)}\n                selected={selected}\n                downloadable={isFile}\n                Visits={this.props.Visits}\n                selectedVisits={selectedFields}\n                fieldVisitSelect = {this.props.fieldVisitSelect}\n                />);\n            if(fields.length > rowsPerPage) {\n                break;\n            }\n        }\n\n        return (\n            <div className=\"list-group col-md-9 col-sm-12\">\n                {fields}\n                <PaginationLinks Total={items.length} Active={this.props.PageNumber} onChangePage={this.props.changePage} RowsPerPage={rowsPerPage}/>\n            </div>\n        );\n    }\n});\n\n/*\n *  The following component is the base component for the field select tan\n */\nvar FieldSelector = React.createClass({\n    propTypes: {\n        selectedFields: React.PropTypes.array\n    },\n    getInitialState: function() {\n        var instruments = {};\n        for(var i = 0; i < this.props.items.length; i++) {\n            instruments[this.props.items[i].category] = this.props.items[i].category;\n        }\n        return {\n            filter: \"\",\n            selectedCategory: \"\",\n            categoryFields: {},\n            instruments: instruments,\n            PageNumber: 1\n        };\n    },\n    onFieldSelect: function(fieldName, category, downloadable) {\n        // Wrapper function for field changes\n        this.props.onFieldChange(fieldName, category, downloadable);\n    },\n    onCategorySelect: function(category) {\n        // Used for getting the fields of the given category\n\n        var that=this;\n\n        // Use the cached version if it exists\n        if(this.state.categoryFields[category]) {\n        } else {\n            // Retrieve the data dictionary\n            $.get(loris.BaseURL + \"/AjaxHelper.php?Module=dataquery&script=datadictionary.php\", { category: category}, function(data) {\n                var cf = that.state.categoryFields;\n                cf[category] = data;\n                that.setState({\n                    categoryFields: cf\n                });\n            }, 'json');\n        }\n        this.setState({\n            selectedCategory: category,\n            PageNumber: 1\n        });\n    },\n    filterChange: function(evt) {\n        this.setState({\n            filter: evt.currentTarget.value\n        });\n    },\n    addAll: function() {\n        // Adds all fields the currently selected category\n        var i, isFile, fieldName, category;\n        for(i in this.state.categoryFields[this.state.selectedCategory]) {\n            fieldName = this.state.categoryFields[this.state.selectedCategory][i].key[1];\n            category = this.state.categoryFields[this.state.selectedCategory][i].key[0];\n            if(this.props.selectedFields[category] && this.props.selectedFields[category][fieldName]) {\n                // Do nothing, already added\n            } else {\n                isFile = (this.state.categoryFields[category][i].value.isFile) ? true : false;\n                this.props.onFieldChange(fieldName, category, isFile);\n            }\n        }\n    },\n    deleteAll: function() {\n        // Deletes all fields the currently selected category\n        var i, index, fieldName;\n        for(i in this.state.categoryFields[this.state.selectedCategory]) {\n            fieldName = this.state.categoryFields[this.state.selectedCategory][i].key[1];\n            category = this.state.categoryFields[this.state.selectedCategory][i].key[0];\n            if(this.props.selectedFields[category] && this.props.selectedFields[category][fieldName]) {\n                isFile = (this.state.categoryFields[category][i].value.isFile) ? true : false;\n                this.props.onFieldChange(fieldName, category, isFile);\n            }\n        }\n    },\n    modifyCategoryFieldVists: function(visit, action) {\n        if(this.state.selectedCategory && this.props.selectedFields[this.state.selectedCategory]) {\n            for(var field in this.props.selectedFields[this.state.selectedCategory]) {\n                if(field == \"allVisits\") {\n                    continue;\n                }\n                if(action == \"check\" && !this.props.selectedFields[this.state.selectedCategory][field][visit]) {\n                    this.props.fieldVisitSelect(\n                        action,\n                        visit,\n                        {\"instrument\": this.state.selectedCategory, \"field\": field}\n                    );\n                } else if(action == \"uncheck\" && this.props.selectedFields[this.state.selectedCategory][field][visit]) {\n                    this.props.fieldVisitSelect(\n                        action,\n                        visit,\n                        {\"instrument\": this.state.selectedCategory, \"field\": field}\n                    );\n                }\n            }\n        }\n    },\n    changePage: function(i) {\n        this.setState({\n            PageNumber: i\n        });\n    },\n    render: function() {\n        // Renders the html for the component\n        var categoryVisits = {},\n            selectedFieldsCount;\n        if(this.state.selectedCategory != \"\") {\n            if(this.props.selectedFields[this.state.selectedCategory]) {\n                selectedFieldsCount = Object.keys(this.props.selectedFields[this.state.selectedCategory]).length - 1;\n            }\n            for(var key in this.props.Visits){\n                if(this.props.selectedFields[this.state.selectedCategory]\n                    && this.props.selectedFields[this.state.selectedCategory].allVisits[key]\n                    && this.props.selectedFields[this.state.selectedCategory].allVisits[key] == selectedFieldsCount) {\n                    categoryVisits[key] = true;\n                } else {\n                    categoryVisits[key] = false;\n                }\n            }\n        }\n\n        return (\n            <div>\n                <div className=\"row\">\n                    <h1 className=\"col-md-8\">{this.props.title}</h1>\n                    <div className=\"form-group col-sm-4 search\">\n                        <label className=\"col-sm-12 col-md-4\">Search within instrument:</label>\n                        <div className=\"col-sm-12 col-md-8\">\n                            <input type=\"text\" onChange={this.filterChange} className=\"form-control input-sm\"/>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row form-group\">\n                    <div className=\"col-md-8\">\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.addAll}>Add All</button>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.deleteAll}>Remove All</button>\n                    </div>\n                </div>\n                <div className=\"row form-group\">\n                    <div className=\"form-group col-sm-8 search\">\n                        <label className=\"col-sm-12 col-md-2\">Instrument:</label>\n                        <div className=\"col-sm-12 col-md-8\">\n                            <SelectDropdown\n                                multi={false}\n                                options={this.state.instruments}\n                                onFieldClick={this.onCategorySelect}\n                                selectedCategory={this.state.selectedCategory}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"form-group col-sm-4 search\">\n                        <label className=\"col-sm-12 col-md-4\">Visits:</label>\n                        <div className=\"col-sm-12 col-md-8\">\n                            <SelectDropdown\n                                multi={true}\n                                options={categoryVisits}\n                                onFieldClick={this.modifyCategoryFieldVists}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <FieldList\n                        items={this.state.categoryFields[this.state.selectedCategory]}\n                        category={this.state.selectedCategory}\n                        Criteria={this.props.Criteria}\n                        onFieldSelect={this.onFieldSelect}\n                        FieldsPerPage=\"15\"\n                        selected={this.props.selectedFields[this.state.selectedCategory]}\n                        Filter={this.state.filter}\n                        Visits={this.props.Visits}\n                        fieldVisitSelect = {this.props.fieldVisitSelect}\n                        changePage={this.changePage}\n                        PageNumber={this.state.PageNumber}\n                    />\n                </div>\n            </div>\n        );\n    }\n});\n\nwindow.CategoryItem = CategoryItem;\nwindow.CategoryList = CategoryList;\nwindow.FieldItem = FieldItem;\nwindow.FieldList = FieldList;\nwindow.FieldSelector = FieldSelector;\n\nexport default {\n  CategoryItem,\n  CategoryList,\n  FieldItem,\n  FieldList,\n  FieldSelector\n};\n\n\n\n// WEBPACK FOOTER //\n// ./modules/dataquery/jsx/react.fieldselector.js"],"sourceRoot":""}