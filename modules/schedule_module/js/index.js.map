{"version":3,"sources":["webpack:///project-ibis/modules/schedule_module/js/index.js","webpack:///webpack/bootstrap 8e1c20669439b1be6fbf","webpack:///./project-ibis/modules/schedule_module/jsx/index.js","webpack:///./jsx/Panel.js","webpack:///./project-ibis/modules/schedule_module/jsx/App.js","webpack:///./jsx/Modal.js","webpack:///./project-ibis/modules/schedule_module/jsx/Api.js","webpack:///./project-ibis/modules/schedule_module/jsx/FilterForm.js","webpack:///./project-ibis/modules/schedule_module/jsx/EditForm.js","webpack:///./project-ibis/modules/schedule_module/jsx/debounce.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","0","_App","window","onload","ReactDOM","render","React","createElement","App","document","getElementById","2","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","Panel","_React$Component","this","_this","getPrototypeOf","state","collapsed","initCollapsed","panelClass","toggleCollapsed","bind","setState","glyphClass","panelHeading","title","className","onClick","data-toggle","data-target","style","cursor","role","height","children","Component","propTypes","PropTypes","string","defaultProps","default","26","_interopRequireDefault","obj","__esModule","zeroPad","str","arguments","undefined","repeat","toDateString","date","y","getFullYear","getMonth","toString","d","getDate","_Modal","_Modal2","_Api","_FilterForm","_EditForm","_debounce","today","Date","yesterday","getTime","next30days","tabs","label","filters","StartDateMax","StartDateMin","candId","pscId","centerId","appointmentTypeId","startsAt","seen","visitLabel","sites","visitLabels","appointmentTypes","open","createAppointmentForm","editAppointmentForm","tabIndex","lockTabs","sessionId","sessionsOfCandidate","sessions","fetchSessionsOfCandidateError","desiredItemsPerPage","desiredPage","page","data","meta","itemsPerPage","itemsFound","pagesFound","openAppointmentForm","assign","closeAppointmentForm","clearForm","closeEditForm","fetchSessionsOfCandidate","Api","then","result","console","log","status","json","error","catch","err","message","refreshTab","fetchTab","a","currAppointment","startDate","startTime","_this2","body","encodeURIComponent","test","join","fetch","credentials","method","headers","Content-Type","res","Error","concat","_this3","getOrFetchSites","getOrFetchVisitLabels","getOrFetchAppointmentTypes","_this4","fetchAppointments","parseInt","fetchPage","_this5","createAppointmentButton","editAppointmentButton","show","closeModal","throwWarning","type","defaultValue","onChange","e","debounce","map","s","SessionID","SiteName","Visit_Label","AppointmentTypeID","Name","createAppointment","swal","EditForm","appointment","onEdit","edited","appointments","slice","index","findIndex","item","AppointmentID","toEdit","onError","onCancel","FilterForm","onApply","onClear","margin","tab","href","preventDefault","backgroundColor","site","find","CenterID","appointmentType","at","dataEntryStatus","dataEntryLabelColor","started","hasDataEntryComplete","hasDataEntryInProgress","hasDataEntryNotStarted","CandID","PSCID","Visit_label","StartsAt","openEditForm","setCurrAppointment","text","showCancelButton","confirmButtonClass","confirmButtonText","cancelButtonText","closeOnConfirm","closeOnCancel","isConfirm","splice","close","27","Modal","backdropStyle","position","zIndex","top","bottom","left","right","padding","modalStyle","maxWidth","maxHeight","borderRadius","overflowY","titleStyle","display","flexDirection","alignItems","background","borderTopRightRadius","color","fontSize","glyphStyle","marginLeft","bodyStyle","modal","stopPropagation","bool","isRequired","func","28","AppointmentApi","_sites","Promise","resolve","_visitLabels","_projects","_subprojects","_appointmentTypes","queryString","keys","query","29","_Panel","_Panel2","projects","subprojects","projectId","subprojectId","startDateMin","startDateMax","getOrFetchProjects","getOrFetchSubprojects","ProjectID","SubprojectID","VisitLabel","StartDate","StartTime","onUpdate","warn","30","split","substr","disabled","editAppointment","31","wait","__timer","clearTimeout","setTimeout"],"mappings":"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","file":"./project-ibis/modules/schedule_module/js/index.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _App = __webpack_require__(26);\n\t\n\twindow.onload = function () {\n\t    ReactDOM.render(React.createElement(_App.App, null), document.getElementById(\"lorisworkspace\"));\n\t};\n\n/***/ },\n\n/***/ 2:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React component for Panel\n\t *\n\t * @author Alex I.\n\t * @version 1.0.0\n\t *\n\t */\n\t\n\t/**\n\t * Panel component\n\t * Wraps children in a collapsible bootstrap panel\n\t */\n\tvar Panel = function (_React$Component) {\n\t  _inherits(Panel, _React$Component);\n\t\n\t  function Panel(props) {\n\t    _classCallCheck(this, Panel);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Panel.__proto__ || Object.getPrototypeOf(Panel)).call(this, props));\n\t\n\t    _this.state = {\n\t      collapsed: _this.props.initCollapsed\n\t    };\n\t\n\t    // Initialize panel class based on collapsed status\n\t    _this.panelClass = _this.props.initCollapsed ? \"panel-collapse collapse\" : \"panel-collapse collapse in\";\n\t\n\t    _this.toggleCollapsed = _this.toggleCollapsed.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Panel, [{\n\t    key: \"toggleCollapsed\",\n\t    value: function toggleCollapsed() {\n\t      this.setState({ collapsed: !this.state.collapsed });\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      // Change arrow direction based on collapse status\n\t      var glyphClass = this.state.collapsed ? \"glyphicon pull-right glyphicon-chevron-down\" : \"glyphicon pull-right glyphicon-chevron-up\";\n\t\n\t      // Add panel header, if title is set\n\t      var panelHeading = this.props.title ? React.createElement(\n\t        \"div\",\n\t        {\n\t          className: \"panel-heading\",\n\t          onClick: this.toggleCollapsed,\n\t          \"data-toggle\": \"collapse\",\n\t          \"data-target\": '#' + this.props.id,\n\t          style: { cursor: 'pointer' }\n\t        },\n\t        this.props.title,\n\t        React.createElement(\"span\", { className: glyphClass })\n\t      ) : '';\n\t\n\t      return React.createElement(\n\t        \"div\",\n\t        { className: \"panel panel-primary\" },\n\t        panelHeading,\n\t        React.createElement(\n\t          \"div\",\n\t          { id: this.props.id, className: this.panelClass, role: \"tabpanel\" },\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"panel-body\", style: { height: this.props.height } },\n\t            this.props.children\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Panel;\n\t}(React.Component);\n\t\n\tPanel.propTypes = {\n\t  id: React.PropTypes.string,\n\t  height: React.PropTypes.string,\n\t  title: React.PropTypes.string\n\t};\n\tPanel.defaultProps = {\n\t  initCollapsed: false,\n\t  id: 'default-panel',\n\t  height: '100%'\n\t};\n\t\n\texports.default = Panel;\n\n/***/ },\n\n/***/ 26:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.App = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Modal = __webpack_require__(27);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tvar _Api = __webpack_require__(28);\n\t\n\tvar _FilterForm = __webpack_require__(29);\n\t\n\tvar _EditForm = __webpack_require__(30);\n\t\n\tvar _debounce = __webpack_require__(31);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar today = new Date();\n\tvar yesterday = new Date(today.getTime() - 24 * 60 * 60 * 1000);\n\tvar next30days = new Date(today.getTime() + 30 * 24 * 60 * 60 * 1000);\n\tfunction zeroPad(str) {\n\t    var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n\t\n\t    if (str.length >= length) {\n\t        return str;\n\t    }\n\t    return \"0\".repeat(length - str.length) + str;\n\t}\n\tfunction toDateString(date) {\n\t    var y = date.getFullYear();\n\t    var m = zeroPad((date.getMonth() + 1).toString());\n\t    var d = zeroPad(date.getDate().toString());\n\t    return y + \"-\" + m + \"-\" + d;\n\t}\n\tvar tabs = [{\n\t    label: \"All\",\n\t    filters: {}\n\t}, {\n\t    label: \"Past\",\n\t    filters: {\n\t        StartDateMax: toDateString(yesterday)\n\t    }\n\t}, {\n\t    label: \"Next 30 Days\",\n\t    filters: {\n\t        StartDateMin: toDateString(today),\n\t        StartDateMax: toDateString(next30days)\n\t    }\n\t}];\n\t\n\tvar App = exports.App = function (_React$Component) {\n\t    _inherits(App, _React$Component);\n\t\n\t    function App() {\n\t        _classCallCheck(this, App);\n\t\n\t        var _this = _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this));\n\t\n\t        _this.state = {\n\t            candId: \"\",\n\t            pscId: \"\",\n\t            centerId: \"\",\n\t            appointmentTypeId: \"\",\n\t            startsAt: \"\",\n\t            seen: \"0\",\n\t            visitLabel: \"\",\n\t            sites: [],\n\t            visitLabels: [],\n\t            appointmentTypes: [],\n\t            open: {\n\t                createAppointmentForm: false,\n\t                editAppointmentForm: false\n\t            },\n\t            tabIndex: 0,\n\t            lockTabs: false,\n\t            sessionId: -1,\n\t            sessionsOfCandidate: {\n\t                candId: \"\",\n\t                pscId: \"\",\n\t                sessions: []\n\t            },\n\t            fetchSessionsOfCandidateError: undefined,\n\t            desiredItemsPerPage: \"20\",\n\t            desiredPage: \"0\",\n\t            page: {\n\t                data: [],\n\t                meta: {\n\t                    page: -1,\n\t                    itemsPerPage: -1,\n\t                    itemsFound: -1,\n\t                    pagesFound: -1\n\t                }\n\t            }\n\t        };\n\t\n\t        _this.openAppointmentForm = function () {\n\t            _this.setState({\n\t                open: Object.assign({}, _this.state.open, {\n\t                    createAppointmentForm: true\n\t                })\n\t            });\n\t        };\n\t        _this.closeAppointmentForm = function () {\n\t            _this.setState({\n\t                open: Object.assign({}, _this.state.open, {\n\t                    createAppointmentForm: false\n\t                })\n\t            });\n\t            _this.clearForm();\n\t        };\n\t        _this.closeEditForm = function () {\n\t            _this.setState({\n\t                open: Object.assign({}, _this.state.open, {\n\t                    editAppointmentForm: false\n\t                })\n\t            });\n\t        };\n\t\n\t        _this.fetchSessionsOfCandidate = function () {\n\t            var candId = _this.state.candId;\n\t            var pscId = _this.state.pscId;\n\t\n\t            //Clear the error state\n\t            _this.setState({\n\t                fetchSessionsOfCandidateError: undefined\n\t            });\n\t\n\t            //If we're fetching the sessions of a different candidate,\n\t            //discard the fetched sessions\n\t            if (_this.state.sessionsOfCandidate.candId != candId || _this.state.sessionsOfCandidate.pscId != pscId) {\n\t                _this.setState({\n\t                    sessionId: -1,\n\t                    sessionsOfCandidate: {\n\t                        candId: candId,\n\t                        pscId: pscId,\n\t                        sessions: []\n\t                    }\n\t                });\n\t            }\n\t            if (candId == \"\" || pscId == \"\") {\n\t                //No input yet\n\t                return;\n\t            }\n\t\n\t            //Fetch the sessions\n\t            _Api.Api.fetchSessionsOfCandidate(candId, pscId).then(function (result) {\n\t                console.log(result);\n\t                if (result.status != 200) {\n\t                    _this.setState({\n\t                        fetchSessionsOfCandidateError: typeof result.json.error == \"string\" ? result.json.error : \"An unknown error occurred\"\n\t                    });\n\t                    return;\n\t                }\n\t                if (_this.state.candId != candId || _this.state.pscId != pscId) {\n\t                    //The user typed in something else,\n\t                    //and we just fetched the sessions of the previously entered candId.\n\t                    //So, ignore this result.\n\t                    return;\n\t                }\n\t                _this.setState({\n\t                    sessionId: -1,\n\t                    sessionsOfCandidate: {\n\t                        candId: candId,\n\t                        pscId: pscId,\n\t                        sessions: result.json\n\t                    }\n\t                });\n\t            }).catch(function (err) {\n\t                _this.setState({\n\t                    fetchSessionsOfCandidateError: err.message\n\t                });\n\t            });\n\t        };\n\t\n\t        _this.refreshTab = function () {\n\t            _this.fetchTab(_this.state.tabIndex);\n\t        };\n\t        return _this;\n\t    }\n\t\n\t    _createClass(App, [{\n\t        key: \"openEditForm\",\n\t        value: function openEditForm() {\n\t            var open = this.state.open;\n\t            open.editAppointmentForm = true;\n\t            this.setState({\n\t                open: open\n\t            });\n\t        }\n\t    }, {\n\t        key: \"setCurrAppointment\",\n\t        value: function setCurrAppointment(a) {\n\t            var currAppointment = this.state.currAppointment;\n\t            currAppointment = a;\n\t            this.setState({ currAppointment: currAppointment });\n\t        }\n\t    }, {\n\t        key: \"clearForm\",\n\t        value: function clearForm() {\n\t            this.setState({\n\t                candId: \"\",\n\t                pscId: \"\",\n\t                centerId: \"\",\n\t                appointmentTypeId: \"\",\n\t                startDate: \"\",\n\t                startTime: \"\",\n\t                seen: \"0\",\n\t                visitLabel: \"\",\n\t                sessionId: -1,\n\t                sessionsOfCandidate: {\n\t                    candId: \"\",\n\t                    pscId: \"\",\n\t                    sessions: []\n\t                },\n\t                fetchSessionsOfCandidateError: undefined\n\t            });\n\t        }\n\t    }, {\n\t        key: \"createAppointment\",\n\t        value: function createAppointment() {\n\t            var _this2 = this;\n\t\n\t            var body = [\"CandID=\" + encodeURIComponent(this.state.candId), \"PSCID=\" + encodeURIComponent(this.state.pscId), \"SessionID=\" + (this.state.sessionId > 0 ? encodeURIComponent(this.state.sessionId) : \"\"), \"AppointmentTypeID=\" + encodeURIComponent(this.state.appointmentTypeId), \"StartsAt=\" + (/^\\d{4,6}\\-\\d{2}\\-\\d{2}$/.test(this.state.startDate) && /^\\d{2}\\:\\d{2}$/.test(this.state.startTime) ? encodeURIComponent(this.state.startDate + \" \" + this.state.startTime + \":00\") : \"\")].join(\"&\");\n\t            return fetch(\"/schedule_module/ajax/create_appointment.php\", {\n\t                credentials: \"include\",\n\t                method: \"POST\",\n\t                body: body,\n\t                headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" }\n\t            }).then(function (res) {\n\t                return res.json().then(function (data) {\n\t                    return {\n\t                        status: res.status,\n\t                        data: data\n\t                    };\n\t                });\n\t            }).then(function (result) {\n\t                console.log(result);\n\t                if (result.status == 200) {\n\t                    _this2.setState({\n\t                        page: Object.assign({}, _this2.state.page, {\n\t                            data: _this2.state.page.data.concat(result.data)\n\t                        })\n\t                    });\n\t                } else {\n\t                    throw new Error(result.data.error);\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: \"fetchPage\",\n\t        value: function fetchPage() {\n\t            var _this3 = this;\n\t\n\t            _Api.Api.getOrFetchSites().then(function (data) {\n\t                _this3.setState({\n\t                    sites: data\n\t                });\n\t            });\n\t            _Api.Api.getOrFetchVisitLabels().then(function (data) {\n\t                _this3.setState({\n\t                    visitLabels: data\n\t                });\n\t            });\n\t            _Api.Api.getOrFetchAppointmentTypes().then(function (data) {\n\t                _this3.setState({\n\t                    appointmentTypes: data\n\t                });\n\t            });\n\t        }\n\t    }, {\n\t        key: \"fetchTab\",\n\t        value: function fetchTab(tabIndex) {\n\t            var _this4 = this;\n\t\n\t            if (tabIndex == undefined) {\n\t                tabIndex = this.state.tabIndex;\n\t            }\n\t            _Api.Api.fetchAppointments(Object.assign({\n\t                itemsPerPage: parseInt(this.state.desiredItemsPerPage),\n\t                page: parseInt(this.state.desiredPage)\n\t            }, tabs[tabIndex].filters)).then(function (page) {\n\t                _this4.setState({\n\t                    page: page\n\t                });\n\t            });\n\t        }\n\t    }, {\n\t        key: \"componentDidMount\",\n\t        value: function componentDidMount() {\n\t            this.fetchPage();\n\t            this.fetchTab();\n\t        }\n\t    }, {\n\t        key: \"render\",\n\t        value: function render() {\n\t            var _this5 = this;\n\t\n\t            var createAppointmentButton = void 0;\n\t            var editAppointmentButton = void 0;\n\t\n\t            createAppointmentButton = React.createElement(\n\t                \"div\",\n\t                { className: \"Create Appointment Button\" },\n\t                React.createElement(\n\t                    \"button\",\n\t                    { className: \"btn btn-default\", onClick: this.openAppointmentForm },\n\t                    React.createElement(\"span\", { className: \"glyphicon glyphicon-calendar\" }),\n\t                    \" Create Appointment\"\n\t                ),\n\t                React.createElement(\n\t                    _Modal2.default,\n\t                    {\n\t                        title: \"Create Appointment\",\n\t                        show: this.state.open.createAppointmentForm,\n\t                        closeModal: this.closeAppointmentForm,\n\t                        throwWarning: true\n\t                    },\n\t                    React.createElement(\n\t                        \"div\",\n\t                        { className: \"container-fluid\" },\n\t                        React.createElement(\n\t                            \"div\",\n\t                            { className: \"row\" },\n\t                            React.createElement(\n\t                                \"div\",\n\t                                { className: \"col-lg-6 col-md-6 col-sm-6\" },\n\t                                React.createElement(\n\t                                    \"div\",\n\t                                    { className: \"form-group\" },\n\t                                    React.createElement(\n\t                                        \"label\",\n\t                                        null,\n\t                                        \" DCCID: \"\n\t                                    ),\n\t                                    React.createElement(\"br\", null),\n\t                                    React.createElement(\"input\", { className: \"form-control\", type: \"text\", defaultValue: this.state.candId, onChange: function onChange(e) {\n\t                                            _this5.setState({\n\t                                                candId: e.target.value\n\t                                            });\n\t                                            (0, _debounce.debounce)(_this5.fetchSessionsOfCandidate, 500);\n\t                                        } })\n\t                                ),\n\t                                React.createElement(\n\t                                    \"div\",\n\t                                    { className: \"form-group\" },\n\t                                    React.createElement(\n\t                                        \"label\",\n\t                                        null,\n\t                                        \" PSCID: \"\n\t                                    ),\n\t                                    React.createElement(\"br\", null),\n\t                                    React.createElement(\"input\", { className: \"form-control\", type: \"text\", defaultValue: this.state.pscId, onChange: function onChange(e) {\n\t                                            _this5.setState({\n\t                                                pscId: e.target.value\n\t                                            });\n\t                                            (0, _debounce.debounce)(_this5.fetchSessionsOfCandidate, 500);\n\t                                        } })\n\t                                ),\n\t                                this.state.fetchSessionsOfCandidateError == undefined ? undefined : React.createElement(\n\t                                    \"div\",\n\t                                    { className: \"alert alert-danger\" },\n\t                                    React.createElement(\"span\", { className: \"glyphicon glyphicon-exclamation-sign\" }),\n\t                                    this.state.fetchSessionsOfCandidateError\n\t                                )\n\t                            ),\n\t                            React.createElement(\n\t                                \"div\",\n\t                                { className: \"col-lg-6 col-md-6 col-sm-6\" },\n\t                                React.createElement(\n\t                                    \"div\",\n\t                                    { className: \"form-group\" },\n\t                                    React.createElement(\n\t                                        \"label\",\n\t                                        null,\n\t                                        \" Appointment Date: \"\n\t                                    ),\n\t                                    React.createElement(\"br\", null),\n\t                                    React.createElement(\"input\", { className: \"form-control\", type: \"date\", defaultValue: this.state.startDate, onChange: function onChange(e) {\n\t                                            _this5.setState({\n\t                                                startDate: e.target.value\n\t                                            });\n\t                                        } })\n\t                                ),\n\t                                React.createElement(\n\t                                    \"div\",\n\t                                    { className: \"form-group\" },\n\t                                    React.createElement(\n\t                                        \"label\",\n\t                                        null,\n\t                                        \" Appointment Time: \"\n\t                                    ),\n\t                                    React.createElement(\"br\", null),\n\t                                    React.createElement(\"input\", { className: \"form-control\", type: \"time\", defaultValue: this.state.startTime, onChange: function onChange(e) {\n\t                                            _this5.setState({\n\t                                                startTime: e.target.value\n\t                                            });\n\t                                        } })\n\t                                )\n\t                            )\n\t                        ),\n\t                        React.createElement(\n\t                            \"div\",\n\t                            { className: \"row\" },\n\t                            React.createElement(\n\t                                \"div\",\n\t                                { className: \"col-lg-6 col-md-6 col-sm-6\" },\n\t                                React.createElement(\n\t                                    \"div\",\n\t                                    { className: \"form-group\" },\n\t                                    React.createElement(\n\t                                        \"label\",\n\t                                        null,\n\t                                        \" Session: \"\n\t                                    ),\n\t                                    React.createElement(\"br\", null),\n\t                                    React.createElement(\n\t                                        \"select\",\n\t                                        { className: \"form-control\", defaultValue: this.state.sessionId, onChange: function onChange(e) {\n\t                                                _this5.setState({\n\t                                                    sessionId: e.target.value\n\t                                                });\n\t                                            } },\n\t                                        React.createElement(\n\t                                            \"option\",\n\t                                            { value: \"\" },\n\t                                            \"- Select a Session -\"\n\t                                        ),\n\t                                        this.state.sessionsOfCandidate.sessions.map(function (s) {\n\t                                            return React.createElement(\n\t                                                \"option\",\n\t                                                { key: s.SessionID, value: s.SessionID },\n\t                                                s.SiteName,\n\t                                                \" - \",\n\t                                                s.Visit_Label\n\t                                            );\n\t                                        })\n\t                                    )\n\t                                )\n\t                            ),\n\t                            React.createElement(\n\t                                \"div\",\n\t                                { className: \"col-lg-6 col-md-6 col-sm-6\" },\n\t                                React.createElement(\n\t                                    \"div\",\n\t                                    { className: \"form-group\" },\n\t                                    React.createElement(\n\t                                        \"label\",\n\t                                        null,\n\t                                        \" Type of Appointment: \"\n\t                                    ),\n\t                                    React.createElement(\"br\", null),\n\t                                    React.createElement(\n\t                                        \"select\",\n\t                                        { className: \"form-control\", defaultValue: this.state.appointmentTypeId, onChange: function onChange(e) {\n\t                                                _this5.setState({\n\t                                                    appointmentTypeId: e.target.value\n\t                                                });\n\t                                            } },\n\t                                        React.createElement(\n\t                                            \"option\",\n\t                                            { value: \"\" },\n\t                                            \"- Select an Appointment Type -\"\n\t                                        ),\n\t                                        this.state.appointmentTypes.map(function (s) {\n\t                                            return React.createElement(\n\t                                                \"option\",\n\t                                                { key: s.AppointmentTypeID, value: s.AppointmentTypeID },\n\t                                                s.Name\n\t                                            );\n\t                                        })\n\t                                    )\n\t                                )\n\t                            ),\n\t                            React.createElement(\"br\", null)\n\t                        ),\n\t                        React.createElement(\"br\", null),\n\t                        React.createElement(\n\t                            \"div\",\n\t                            { className: \"buttoncent\" },\n\t                            React.createElement(\n\t                                \"button\",\n\t                                { className: \"btn btn-primary\", onClick: function onClick() {\n\t                                        _this5.createAppointment().then(function () {\n\t                                            swal(\"Success!\", \"Appointment created!\", \"success\");\n\t                                            _this5.closeAppointmentForm();\n\t                                        }).catch(function (err) {\n\t                                            swal(\"Unable to create appointment\", err.message, \"error\");\n\t                                        });\n\t                                    } },\n\t                                \"Create\"\n\t                            )\n\t                        )\n\t                    )\n\t                )\n\t            );\n\t\n\t            editAppointmentButton = React.createElement(\n\t                \"div\",\n\t                { className: \"Edit Appointment\" },\n\t                React.createElement(\n\t                    _Modal2.default,\n\t                    {\n\t                        title: \"Edit Appointment\",\n\t                        show: this.state.open.editAppointmentForm,\n\t                        closeModal: this.closeEditForm,\n\t                        throwWarning: false\n\t                    },\n\t                    React.createElement(_EditForm.EditForm, {\n\t                        appointment: this.state.currAppointment,\n\t                        onEdit: function onEdit(edited) {\n\t                            var appointments = _this5.state.page.data.slice();\n\t                            var index = appointments.findIndex(function (item) {\n\t                                return item.AppointmentID == edited.AppointmentID;\n\t                            });\n\t                            appointments[index] = edited;\n\t                            _this5.setState({\n\t                                page: Object.assign({}, _this5.state.page, {\n\t                                    data: appointments\n\t                                }),\n\t                                toEdit: undefined\n\t                            });\n\t                            swal(\"Success!\", \"Appointment updated!\", \"success\");\n\t                            _this5.closeEditForm();\n\t                        },\n\t                        onError: function onError(err) {\n\t                            swal(\"Unable to edit appointment\", err.message, \"error\");\n\t                        },\n\t                        onCancel: function onCancel() {\n\t                            _this5.setState({\n\t                                toEdit: undefined\n\t                            });\n\t                            _this5.closeEditForm();\n\t                        }\n\t                    })\n\t                )\n\t            );\n\t\n\t            return React.createElement(\n\t                \"div\",\n\t                null,\n\t                React.createElement(_FilterForm.FilterForm, {\n\t                    onApply: function onApply(filters) {\n\t                        _this5.setState({\n\t                            tabIndex: 0,\n\t                            lockTabs: true\n\t                        });\n\t                        _Api.Api.fetchAppointments(filters).then(function (page) {\n\t                            _this5.setState({\n\t                                page: page\n\t                            });\n\t                        });\n\t                    },\n\t                    onClear: function onClear() {\n\t                        _this5.setState({\n\t                            lockTabs: false\n\t                        });\n\t                        _this5.fetchTab();\n\t                    }\n\t                }),\n\t                React.createElement(\n\t                    \"h\",\n\t                    { style: { margin: \"10px\" } },\n\t                    createAppointmentButton\n\t                ),\n\t                React.createElement(\"br\", null),\n\t                React.createElement(\n\t                    \"ul\",\n\t                    { className: \"nav nav-tabs\", style: { margin: \"10px\" } },\n\t\n\t                    /* Map the tabs array to jsx element (makes new array; old array + new info) */\n\t                    tabs.map(function (tab, index) {\n\t                        return (\n\t                            /* Set tab label to element key + if current tab is selected tab, set to active (this gives the appearance of being on a certain tab on the front end*/\n\t                            React.createElement(\n\t                                \"li\",\n\t                                { key: tab.label, className: [!_this5.state.lockTabs && _this5.state.tabIndex == index ? \"active\" : \"\", _this5.state.lockTabs ? \"disabled\" : \"\"].join(\" \") },\n\t                                React.createElement(\n\t                                    \"a\",\n\t                                    { href: \"#/\", onClick: function onClick(e) {\n\t                                            e.preventDefault();\n\t                                            if (_this5.state.lockTabs) {\n\t                                                return;\n\t                                            }\n\t                                            /* (Don't do this when disabling) Change current tab to tab that was clicked, fetch corresponding data */\n\t                                            _this5.setState({\n\t                                                tabIndex: index\n\t                                            });\n\t                                            _this5.fetchTab(index);\n\t                                        } },\n\t                                    tab.label,\n\t                                    \" \\xA0\",\n\t                                    !_this5.state.lockTabs && _this5.state.tabIndex == index ? React.createElement(\n\t                                        \"span\",\n\t                                        { className: \"badge\" },\n\t                                        _this5.state.page.data.length\n\t                                    ) : undefined\n\t                                )\n\t                            )\n\t                        );\n\t                    }),\n\t                    this.state.lockTabs ? React.createElement(\n\t                        \"li\",\n\t                        { className: \"active\" },\n\t                        React.createElement(\n\t                            \"a\",\n\t                            { href: \"#/\", onClick: function onClick(e) {\n\t                                    e.preventDefault();\n\t                                } },\n\t                            \"Search Results \\xA0\",\n\t                            React.createElement(\n\t                                \"span\",\n\t                                { className: \"badge\" },\n\t                                this.state.page.data.length\n\t                            )\n\t                        )\n\t                    ) : undefined\n\t                ),\n\t                React.createElement(\n\t                    \"div\",\n\t                    { className: \"table-responsive\" },\n\t                    React.createElement(\n\t                        \"table\",\n\t                        { className: \"table table-striped table-hover\" },\n\t                        React.createElement(\n\t                            \"thead\",\n\t                            { style: { backgroundColor: \"#064785\" } },\n\t                            React.createElement(\n\t                                \"tr\",\n\t                                null,\n\t                                React.createElement(\n\t                                    \"th\",\n\t                                    null,\n\t                                    \"DCCID\"\n\t                                ),\n\t                                React.createElement(\n\t                                    \"th\",\n\t                                    null,\n\t                                    \"PSCID\"\n\t                                ),\n\t                                React.createElement(\n\t                                    \"th\",\n\t                                    null,\n\t                                    \"Site\"\n\t                                ),\n\t                                React.createElement(\n\t                                    \"th\",\n\t                                    null,\n\t                                    \"Visit Label\"\n\t                                ),\n\t                                React.createElement(\n\t                                    \"th\",\n\t                                    null,\n\t                                    \"Subproject\"\n\t                                ),\n\t                                React.createElement(\n\t                                    \"th\",\n\t                                    null,\n\t                                    \"Starts At\"\n\t                                ),\n\t                                React.createElement(\n\t                                    \"th\",\n\t                                    null,\n\t                                    \"Appointment Type\"\n\t                                ),\n\t                                React.createElement(\n\t                                    \"th\",\n\t                                    null,\n\t                                    \"Data Entry Status\"\n\t                                ),\n\t                                React.createElement(\n\t                                    \"th\",\n\t                                    null,\n\t                                    \"Edit\"\n\t                                ),\n\t                                React.createElement(\n\t                                    \"th\",\n\t                                    null,\n\t                                    \"Delete\"\n\t                                )\n\t                            )\n\t                        ),\n\t                        React.createElement(\n\t                            \"tbody\",\n\t                            null,\n\t                            this.state.page.data.map(function (a, index) {\n\t                                var site = _this5.state.sites.find(function (s) {\n\t                                    return s.CenterID == a.CenterID;\n\t                                });\n\t                                var appointmentType = _this5.state.appointmentTypes.find(function (at) {\n\t                                    return at.AppointmentTypeID == a.AppointmentTypeID;\n\t                                });\n\t\n\t                                var dataEntryStatus = \"Unknown\";\n\t                                var dataEntryLabelColor = \"default\";\n\t                                if (a.started != \"1\") {\n\t                                    dataEntryStatus = \"Upcoming\";\n\t                                    dataEntryLabelColor = \"default\";\n\t                                } else if (a.hasDataEntryComplete == \"1\") {\n\t                                    if (a.hasDataEntryInProgress == \"1\" || a.hasDataEntryNotStarted == \"1\") {\n\t                                        dataEntryStatus = \"In Progress\";\n\t                                        dataEntryLabelColor = \"warning\";\n\t                                    } else {\n\t                                        dataEntryStatus = \"Complete\";\n\t                                        dataEntryLabelColor = \"success\";\n\t                                    }\n\t                                } else if (a.hasDataEntryInProgress == \"1\") {\n\t                                    dataEntryStatus = \"In Progress\";\n\t                                    dataEntryLabelColor = \"warning\";\n\t                                } else if (a.hasDataEntryNotStarted == \"1\") {\n\t                                    dataEntryStatus = \"Not Started\";\n\t                                    dataEntryLabelColor = \"warning\";\n\t                                } else {\n\t                                    dataEntryStatus = \"No Data Found\";\n\t                                    dataEntryLabelColor = \"danger\";\n\t                                }\n\t\n\t                                return React.createElement(\n\t                                    \"tr\",\n\t                                    { key: a.AppointmentID },\n\t                                    React.createElement(\n\t                                        \"td\",\n\t                                        null,\n\t                                        a.CandID\n\t                                    ),\n\t                                    React.createElement(\n\t                                        \"td\",\n\t                                        null,\n\t                                        React.createElement(\n\t                                            \"a\",\n\t                                            { href: \"/\" + a.CandID + \"/\" },\n\t                                            a.PSCID\n\t                                        )\n\t                                    ),\n\t                                    React.createElement(\n\t                                        \"td\",\n\t                                        null,\n\t                                        site == undefined ? \"Site #\" + a.CenterID : site.Name\n\t                                    ),\n\t                                    React.createElement(\n\t                                        \"td\",\n\t                                        null,\n\t                                        React.createElement(\n\t                                            \"a\",\n\t                                            { href: \"/instrument_list/?candID=\" + a.CandID + \"&sessionID=\" + a.SessionID },\n\t                                            a.Visit_label\n\t                                        )\n\t                                    ),\n\t                                    React.createElement(\n\t                                        \"td\",\n\t                                        null,\n\t                                        a.title\n\t                                    ),\n\t                                    React.createElement(\n\t                                        \"td\",\n\t                                        null,\n\t                                        a.StartsAt\n\t                                    ),\n\t                                    React.createElement(\n\t                                        \"td\",\n\t                                        null,\n\t                                        appointmentType == undefined ? \"Appointment Type #\" + a.AppointmentTypeID : appointmentType.Name\n\t                                    ),\n\t                                    React.createElement(\n\t                                        \"td\",\n\t                                        null,\n\t                                        React.createElement(\n\t                                            \"span\",\n\t                                            { className: \"label label-\" + dataEntryLabelColor },\n\t                                            dataEntryStatus\n\t                                        )\n\t                                    ),\n\t                                    React.createElement(\n\t                                        \"td\",\n\t                                        null,\n\t                                        React.createElement(\n\t                                            \"button\",\n\t                                            { className: \"btn btn-default\", onClick: function onClick() {\n\t                                                    _this5.openEditForm();_this5.setCurrAppointment(a);\n\t                                                } },\n\t                                            React.createElement(\"span\", { className: \"glyphicon glyphicon-edit\" }),\n\t                                            \" Edit\"\n\t                                        )\n\t                                    ),\n\t                                    React.createElement(\n\t                                        \"td\",\n\t                                        null,\n\t                                        React.createElement(\n\t                                            \"button\",\n\t                                            { className: \"btn btn-default\", onClick: function onClick() {\n\t                                                    swal({\n\t                                                        title: \"Are you sure you want to delete?\",\n\t                                                        text: \"Appointments cannot be recovered\",\n\t                                                        type: \"warning\",\n\t                                                        showCancelButton: true,\n\t                                                        confirmButtonClass: \"btn-danger\",\n\t                                                        confirmButtonText: \"Yes, delete it!\",\n\t                                                        cancelButtonText: \"No, keep appointment!\",\n\t                                                        closeOnConfirm: false,\n\t                                                        closeOnCancel: false\n\t                                                    }, function (isConfirm) {\n\t                                                        if (isConfirm) {\n\t                                                            fetch(\"/schedule_module/ajax/delete_appointment.php?AppointmentID=\" + a.AppointmentID, {\n\t                                                                credentials: \"include\",\n\t                                                                method: \"DELETE\"\n\t                                                            }).then(function () {\n\t                                                                var index = _this5.state.page.data.findIndex(function (item) {\n\t                                                                    return item.AppointmentID == a.AppointmentID;\n\t                                                                });\n\t                                                                if (index < 0) {\n\t                                                                    return;\n\t                                                                }\n\t                                                                var appointments = _this5.state.page.data.slice();\n\t                                                                appointments.splice(index, 1);\n\t                                                                _this5.setState({\n\t                                                                    page: Object.assign({}, _this5.state.page, {\n\t                                                                        data: appointments\n\t                                                                    })\n\t                                                                });\n\t                                                            });\n\t                                                            swal.close();\n\t                                                        } else {\n\t                                                            //swal(\"Canceled\", \"The appointment has not been deleted\", \"error\");\n\t                                                            swal.close();\n\t                                                        }\n\t                                                    });\n\t                                                } },\n\t                                            React.createElement(\"span\", { className: \"glyphicon glyphicon-trash\" }),\n\t                                            \" Delete\"\n\t                                        )\n\t                                    )\n\t                                );\n\t                            })\n\t                        )\n\t                    )\n\t                ),\n\t                React.createElement(\n\t                    \"div\",\n\t                    { className: \"form-row\" },\n\t                    React.createElement(\n\t                        \"div\",\n\t                        { className: \"form-group col-md-2\" },\n\t                        \"Items Per Page: \",\n\t                        React.createElement(\"input\", { className: \"form-control\", type: \"number\", value: this.state.desiredItemsPerPage, onChange: function onChange(e) {\n\t                                _this5.setState({\n\t                                    desiredItemsPerPage: e.target.value\n\t                                });\n\t                                (0, _debounce.debounce)(_this5.refreshTab, 500);\n\t                            } })\n\t                    ),\n\t                    React.createElement(\n\t                        \"div\",\n\t                        { className: \"form-group col-md-2\" },\n\t                        \"Page: \",\n\t                        React.createElement(\"input\", { className: \"form-control\", type: \"number\", value: this.state.desiredPage, onChange: function onChange(e) {\n\t                                _this5.setState({\n\t                                    desiredPage: e.target.value\n\t                                });\n\t                                (0, _debounce.debounce)(_this5.refreshTab, 500);\n\t                            } })\n\t                    ),\n\t                    React.createElement(\n\t                        \"div\",\n\t                        { className: \"form-group col-md-6\" },\n\t                        this.state.page.meta.pagesFound < 0 ? \"\" : this.state.page.meta.pagesFound + \" page(s) found, \",\n\t                        this.state.page.meta.itemsFound < 0 ? \"\" : this.state.page.meta.itemsFound + \" items found\"\n\t                    )\n\t                ),\n\t                editAppointmentButton\n\t            );\n\t        }\n\t    }]);\n\t\n\t    return App;\n\t}(React.Component);\n\n/***/ },\n\n/***/ 27:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React components for Modal component.\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.1.0\n\t *\n\t */\n\t\n\t/**\n\t * Modal Component.\n\t * React wrapper for a Modal Window. Allows to dynamically toggle a Modal window.\n\t *\n\t * ================================================\n\t * Usage:\n\t *\n\t * =================================================\n\t *\n\t */\n\tvar Modal = function (_React$Component) {\n\t  _inherits(Modal, _React$Component);\n\t\n\t  function Modal() {\n\t    _classCallCheck(this, Modal);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Modal.__proto__ || Object.getPrototypeOf(Modal)).call(this));\n\t\n\t    _this.closeModal = _this.closeModal.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Modal, [{\n\t    key: \"closeModal\",\n\t    value: function closeModal() {\n\t      var _this2 = this;\n\t\n\t      if (this.props.throwWarning) {\n\t        swal({\n\t          title: \"Are You Sure?\",\n\t          text: \"Leaving the form will result in the loss of any information entered.\",\n\t          type: \"warning\",\n\t          showCancelButton: true,\n\t          confirmButtonText: 'Proceed',\n\t          cancelButtonText: 'Cancel'\n\t        }, function () {\n\t          _this2.props.closeModal();\n\t        });\n\t      } else {\n\t        this.props.closeModal();\n\t      }\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      // Black Background with Alpha Channel\n\t      var backdropStyle = {\n\t        position: 'fixed',\n\t        zIndex: 9998,\n\t        top: 0,\n\t        bottom: 0,\n\t        left: 0,\n\t        right: 0,\n\t        backgroundColor: 'rgba(0,0,0,0.1)',\n\t        padding: 50\n\t      };\n\t\n\t      // White Modal Window\n\t      var modalStyle = {\n\t        position: 'relative',\n\t        maxWidth: 600,\n\t        maxHeight: '100%',\n\t        margin: '0 auto',\n\t        backgroundColor: '#fff',\n\t        borderRadius: 10,\n\t        overflowY: 'auto',\n\t        zIndex: 9999,\n\t        top: '10%'\n\t      };\n\t\n\t      var titleStyle = {\n\t        display: 'flex',\n\t        flexDirection: 'row',\n\t        alignItems: 'center',\n\t        background: '#093782',\n\t        height: '50px',\n\t        borderTopRightRadius: '10',\n\t        color: '#FFFFFF',\n\t        fontSize: 24,\n\t        padding: 20\n\t      };\n\t\n\t      var glyphStyle = {\n\t        marginLeft: 'auto',\n\t        cursor: 'pointer'\n\t      };\n\t\n\t      var bodyStyle = {\n\t        padding: 15\n\t      };\n\t\n\t      var modal = void 0;\n\t      if (this.props.show) {\n\t        modal = React.createElement(\n\t          \"div\",\n\t          { style: backdropStyle, onClick: this.closeModal },\n\t          React.createElement(\n\t            \"div\",\n\t            { style: modalStyle, onClick: function onClick(e) {\n\t                e.stopPropagation();\n\t              } },\n\t            React.createElement(\n\t              \"div\",\n\t              { style: titleStyle },\n\t              this.props.title,\n\t              React.createElement(\n\t                \"span\",\n\t                { style: glyphStyle, onClick: this.closeModal },\n\t                \"\\xD7\"\n\t              )\n\t            ),\n\t            React.createElement(\n\t              \"div\",\n\t              { style: bodyStyle },\n\t              this.props.children\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        \"div\",\n\t        null,\n\t        modal\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Modal;\n\t}(React.Component);\n\t\n\tModal.propTypes = {\n\t  title: React.PropTypes.string,\n\t  show: React.PropTypes.bool.isRequired,\n\t  closeModal: React.PropTypes.func.isRequired,\n\t  throwWarning: React.PropTypes.bool.isRequired\n\t};\n\t\n\tModal.defaultProps = {\n\t  throwWarning: true\n\t};\n\t\n\texports.default = Modal;\n\n/***/ },\n\n/***/ 28:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar AppointmentApi = function () {\n\t    function AppointmentApi() {\n\t        _classCallCheck(this, AppointmentApi);\n\t    }\n\t\n\t    _createClass(AppointmentApi, [{\n\t        key: \"getOrFetchSites\",\n\t        value: function getOrFetchSites() {\n\t            var _this = this;\n\t\n\t            if (this._sites != undefined) {\n\t                return Promise.resolve(this._sites);\n\t            }\n\t            return fetch(\"/schedule_module/ajax/list_sites.php\", {\n\t                credentials: \"include\",\n\t                method: \"GET\"\n\t            }).then(function (res) {\n\t                return res.json();\n\t            }).then(function (data) {\n\t                console.log(data);\n\t                _this._sites = data;\n\t                return data;\n\t            });\n\t        }\n\t    }, {\n\t        key: \"getOrFetchVisitLabels\",\n\t        value: function getOrFetchVisitLabels() {\n\t            var _this2 = this;\n\t\n\t            if (this._visitLabels != undefined) {\n\t                return Promise.resolve(this._visitLabels);\n\t            }\n\t            return fetch(\"/schedule_module/ajax/list_visit_labels.php\", {\n\t                credentials: \"include\",\n\t                method: \"GET\"\n\t            }).then(function (res) {\n\t                return res.json();\n\t            }).then(function (data) {\n\t                console.log(data);\n\t                _this2._visitLabels = data;\n\t                return data;\n\t            });\n\t        }\n\t    }, {\n\t        key: \"getOrFetchProjects\",\n\t        value: function getOrFetchProjects() {\n\t            var _this3 = this;\n\t\n\t            if (this._projects != undefined) {\n\t                return Promise.resolve(this._projects);\n\t            }\n\t            return fetch(\"/schedule_module/ajax/list_projects.php\", {\n\t                credentials: \"include\",\n\t                method: \"GET\"\n\t            }).then(function (res) {\n\t                return res.json();\n\t            }).then(function (data) {\n\t                console.log(data);\n\t                _this3._projects = data;\n\t                return data;\n\t            });\n\t        }\n\t    }, {\n\t        key: \"getOrFetchSubprojects\",\n\t        value: function getOrFetchSubprojects() {\n\t            var _this4 = this;\n\t\n\t            if (this._subprojects != undefined) {\n\t                return Promise.resolve(this._subprojects);\n\t            }\n\t            return fetch(\"/schedule_module/ajax/list_subprojects.php\", {\n\t                credentials: \"include\",\n\t                method: \"GET\"\n\t            }).then(function (res) {\n\t                return res.json();\n\t            }).then(function (data) {\n\t                console.log(data);\n\t                _this4._subprojects = data;\n\t                return data;\n\t            });\n\t        }\n\t    }, {\n\t        key: \"getOrFetchAppointmentTypes\",\n\t        value: function getOrFetchAppointmentTypes() {\n\t            var _this5 = this;\n\t\n\t            if (this._appointmentTypes != undefined) {\n\t                return Promise.resolve(this._appointmentTypes);\n\t            }\n\t            return fetch(\"/schedule_module/ajax/list_appointment_types.php\", {\n\t                credentials: \"include\",\n\t                method: \"GET\"\n\t            }).then(function (res) {\n\t                return res.json();\n\t            }).then(function (data) {\n\t                console.log(data);\n\t                _this5._appointmentTypes = data;\n\t                return data;\n\t            });\n\t        }\n\t    }, {\n\t        key: \"fetchAppointments\",\n\t        value: function fetchAppointments() {\n\t            var filters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t            var queryString = Object.keys(filters).map(function (key) {\n\t                return key + \"=\" + encodeURIComponent(filters[key]);\n\t            }).join(\"&\");\n\t            return fetch(\"/schedule_module/ajax/list_appointments.php?\" + queryString, {\n\t                credentials: \"include\",\n\t                method: \"GET\"\n\t            }).then(function (res) {\n\t                return res.json();\n\t            });\n\t        }\n\t    }, {\n\t        key: \"fetchSessionsOfCandidate\",\n\t        value: function fetchSessionsOfCandidate(candId, pscId) {\n\t            var query = {\n\t                \"CandID\": candId,\n\t                \"PSCID\": pscId\n\t            };\n\t            var queryString = Object.keys(query).map(function (key) {\n\t                return key + \"=\" + encodeURIComponent(query[key]);\n\t            }).join(\"&\");\n\t            return fetch(\"/schedule_module/ajax/list_sessions_of_candidate.php?\" + queryString, {\n\t                credentials: \"include\",\n\t                method: \"GET\"\n\t            }).then(function (res) {\n\t                return res.json().then(function (json) {\n\t                    return {\n\t                        status: res.status,\n\t                        json: json\n\t                    };\n\t                });\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return AppointmentApi;\n\t}();\n\t\n\tvar Api = exports.Api = new AppointmentApi();\n\n/***/ },\n\n/***/ 29:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.FilterForm = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Panel = __webpack_require__(2);\n\t\n\tvar _Panel2 = _interopRequireDefault(_Panel);\n\t\n\tvar _Api = __webpack_require__(28);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar FilterForm = exports.FilterForm = function (_React$Component) {\n\t    _inherits(FilterForm, _React$Component);\n\t\n\t    function FilterForm(props) {\n\t        _classCallCheck(this, FilterForm);\n\t\n\t        var _this = _possibleConstructorReturn(this, (FilterForm.__proto__ || Object.getPrototypeOf(FilterForm)).call(this, props));\n\t\n\t        _this.state = {\n\t            sites: [],\n\t            visitLabels: [],\n\t            projects: [],\n\t            subprojects: [],\n\t            appointmentTypes: [],\n\t\n\t            candId: \"\",\n\t            pscId: \"\",\n\t            centerId: \"\",\n\t            visitLabel: \"\",\n\t            projectId: \"\",\n\t            subprojectId: \"\",\n\t            appointmentTypeId: \"\",\n\t\n\t            startDate: \"\",\n\t            startTime: \"\",\n\t\n\t            startDateMin: \"\",\n\t            startDateMax: \"\"\n\t        };\n\t        return _this;\n\t    }\n\t\n\t    _createClass(FilterForm, [{\n\t        key: \"componentDidMount\",\n\t        value: function componentDidMount() {\n\t            var _this2 = this;\n\t\n\t            _Api.Api.getOrFetchSites().then(function (data) {\n\t                _this2.setState({\n\t                    sites: data\n\t                });\n\t            });\n\t            _Api.Api.getOrFetchVisitLabels().then(function (data) {\n\t                _this2.setState({\n\t                    visitLabels: data\n\t                });\n\t            });\n\t            _Api.Api.getOrFetchProjects().then(function (data) {\n\t                _this2.setState({\n\t                    projects: data\n\t                });\n\t            });\n\t            _Api.Api.getOrFetchSubprojects().then(function (data) {\n\t                _this2.setState({\n\t                    subprojects: data\n\t                });\n\t            });\n\t            _Api.Api.getOrFetchAppointmentTypes().then(function (data) {\n\t                _this2.setState({\n\t                    appointmentTypes: data\n\t                });\n\t            });\n\t        }\n\t    }, {\n\t        key: \"render\",\n\t        value: function render() {\n\t            var _this3 = this;\n\t\n\t            return React.createElement(\n\t                _Panel2.default,\n\t                {\n\t                    id: this.props.id,\n\t                    height: this.props.height,\n\t                    title: this.props.title\n\t                },\n\t                React.createElement(\n\t                    \"div\",\n\t                    { className: \"panel-body\" },\n\t                    React.createElement(\n\t                        \"div\",\n\t                        { className: \"container-fluid\" },\n\t                        React.createElement(\n\t                            \"div\",\n\t                            { className: \"row\" },\n\t                            React.createElement(\n\t                                \"div\",\n\t                                { className: \"col-lg-6 col-md-6 col-sm-6\" },\n\t                                React.createElement(\n\t                                    \"div\",\n\t                                    { className: \"form-group\" },\n\t                                    React.createElement(\n\t                                        \"label\",\n\t                                        null,\n\t                                        \"DCCID\"\n\t                                    ),\n\t                                    React.createElement(\"input\", { type: \"text\", value: this.state.candId, className: \"form-control\", onChange: function onChange(e) {\n\t                                            _this3.setState({\n\t                                                candId: e.target.value\n\t                                            });\n\t                                        } })\n\t                                ),\n\t                                React.createElement(\n\t                                    \"div\",\n\t                                    { className: \"form-group\" },\n\t                                    React.createElement(\n\t                                        \"label\",\n\t                                        null,\n\t                                        \"Site\"\n\t                                    ),\n\t                                    React.createElement(\n\t                                        \"select\",\n\t                                        { className: \"form-control\", value: this.state.centerId, onChange: function onChange(e) {\n\t                                                _this3.setState({\n\t                                                    centerId: e.target.value\n\t                                                });\n\t                                            } },\n\t                                        React.createElement(\n\t                                            \"option\",\n\t                                            { value: \"\" },\n\t                                            \"-Select a Site-\"\n\t                                        ),\n\t                                        this.state.sites.map(function (s) {\n\t                                            return React.createElement(\n\t                                                \"option\",\n\t                                                { key: s.CenterID, value: s.CenterID },\n\t                                                s.Name\n\t                                            );\n\t                                        })\n\t                                    )\n\t                                ),\n\t                                React.createElement(\n\t                                    \"div\",\n\t                                    { className: \"form-group\" },\n\t                                    React.createElement(\n\t                                        \"label\",\n\t                                        null,\n\t                                        \"Project\"\n\t                                    ),\n\t                                    React.createElement(\n\t                                        \"select\",\n\t                                        { className: \"form-control\", value: this.state.projectId, onChange: function onChange(e) {\n\t                                                _this3.setState({\n\t                                                    projectId: e.target.value\n\t                                                });\n\t                                            } },\n\t                                        React.createElement(\n\t                                            \"option\",\n\t                                            { value: \"\" },\n\t                                            \"-Select a Project-\"\n\t                                        ),\n\t                                        this.state.projects.map(function (s) {\n\t                                            return React.createElement(\n\t                                                \"option\",\n\t                                                { key: s.ProjectID, value: s.ProjectID },\n\t                                                s.Name\n\t                                            );\n\t                                        })\n\t                                    )\n\t                                ),\n\t                                React.createElement(\n\t                                    \"div\",\n\t                                    { className: \"form-group\" },\n\t                                    React.createElement(\n\t                                        \"label\",\n\t                                        null,\n\t                                        \"Appointment Type\"\n\t                                    ),\n\t                                    React.createElement(\n\t                                        \"select\",\n\t                                        { className: \"form-control\", value: this.state.appointmentTypeId, onChange: function onChange(e) {\n\t                                                _this3.setState({\n\t                                                    appointmentTypeId: e.target.value\n\t                                                });\n\t                                            } },\n\t                                        React.createElement(\n\t                                            \"option\",\n\t                                            { value: \"\" },\n\t                                            \"-Select an Appointment Type-\"\n\t                                        ),\n\t                                        this.state.appointmentTypes.map(function (s) {\n\t                                            return React.createElement(\n\t                                                \"option\",\n\t                                                { key: s.AppointmentTypeID, value: s.AppointmentTypeID },\n\t                                                s.Name\n\t                                            );\n\t                                        })\n\t                                    )\n\t                                )\n\t                            ),\n\t                            React.createElement(\n\t                                \"div\",\n\t                                { className: \"col-lg-6 col-md-6 col-sm-6\" },\n\t                                React.createElement(\n\t                                    \"div\",\n\t                                    { className: \"form-group\" },\n\t                                    React.createElement(\n\t                                        \"label\",\n\t                                        null,\n\t                                        \"PSCID\"\n\t                                    ),\n\t                                    React.createElement(\"input\", { type: \"text\", value: this.state.pscId, className: \"form-control\", onChange: function onChange(e) {\n\t                                            _this3.setState({\n\t                                                pscId: e.target.value\n\t                                            });\n\t                                        } })\n\t                                ),\n\t                                React.createElement(\n\t                                    \"div\",\n\t                                    { className: \"form-group\" },\n\t                                    React.createElement(\n\t                                        \"label\",\n\t                                        null,\n\t                                        \"Visit Label\"\n\t                                    ),\n\t                                    React.createElement(\n\t                                        \"select\",\n\t                                        { className: \"form-control\", value: this.state.visitLabel, onChange: function onChange(e) {\n\t                                                _this3.setState({\n\t                                                    visitLabel: e.target.value\n\t                                                });\n\t                                            } },\n\t                                        React.createElement(\n\t                                            \"option\",\n\t                                            { value: \"\" },\n\t                                            \"-Select a Visit Label-\"\n\t                                        ),\n\t                                        this.state.visitLabels.map(function (s) {\n\t                                            return React.createElement(\n\t                                                \"option\",\n\t                                                { key: s.Visit_label, value: s.Visit_label },\n\t                                                s.Visit_label\n\t                                            );\n\t                                        })\n\t                                    )\n\t                                ),\n\t                                React.createElement(\n\t                                    \"div\",\n\t                                    { className: \"form-group\" },\n\t                                    React.createElement(\n\t                                        \"label\",\n\t                                        null,\n\t                                        \"Subproject\"\n\t                                    ),\n\t                                    React.createElement(\n\t                                        \"select\",\n\t                                        { className: \"form-control\", value: this.state.subprojectId, onChange: function onChange(e) {\n\t                                                _this3.setState({\n\t                                                    subprojectId: e.target.value\n\t                                                });\n\t                                            } },\n\t                                        React.createElement(\n\t                                            \"option\",\n\t                                            { value: \"\" },\n\t                                            \"-Select a Subproject-\"\n\t                                        ),\n\t                                        this.state.subprojects.map(function (s) {\n\t                                            return React.createElement(\n\t                                                \"option\",\n\t                                                { key: s.SubprojectID, value: s.SubprojectID },\n\t                                                s.title\n\t                                            );\n\t                                        })\n\t                                    )\n\t                                )\n\t                            )\n\t                        ),\n\t                        React.createElement(\n\t                            \"div\",\n\t                            { className: \"row\" },\n\t                            React.createElement(\n\t                                \"div\",\n\t                                { className: \"col-lg-6 col-md-6 col-sm-6\" },\n\t                                React.createElement(\n\t                                    \"div\",\n\t                                    { className: \"form-group\" },\n\t                                    React.createElement(\n\t                                        \"label\",\n\t                                        null,\n\t                                        \"Date\"\n\t                                    ),\n\t                                    React.createElement(\"input\", { type: \"date\", value: this.state.startDate, className: \"form-control\", onChange: function onChange(e) {\n\t                                            _this3.setState({\n\t                                                startDate: e.target.value\n\t                                            });\n\t                                        } })\n\t                                ),\n\t                                React.createElement(\n\t                                    \"div\",\n\t                                    { className: \"form-group\" },\n\t                                    React.createElement(\n\t                                        \"label\",\n\t                                        null,\n\t                                        \"Earliest Date\"\n\t                                    ),\n\t                                    React.createElement(\"input\", { type: \"date\", value: this.state.startDateMin, className: \"form-control\", onChange: function onChange(e) {\n\t                                            _this3.setState({\n\t                                                startDateMin: e.target.value\n\t                                            });\n\t                                        } })\n\t                                )\n\t                            ),\n\t                            React.createElement(\n\t                                \"div\",\n\t                                { className: \"col-lg-6 col-md-6 col-sm-6\" },\n\t                                React.createElement(\n\t                                    \"div\",\n\t                                    { className: \"form-group\" },\n\t                                    React.createElement(\n\t                                        \"label\",\n\t                                        null,\n\t                                        \"Time\"\n\t                                    ),\n\t                                    React.createElement(\"input\", { type: \"time\", value: this.state.startTime, className: \"form-control\", onChange: function onChange(e) {\n\t                                            console.log(e.target.value);\n\t                                            _this3.setState({\n\t                                                startTime: e.target.value\n\t                                            });\n\t                                        } })\n\t                                ),\n\t                                React.createElement(\n\t                                    \"div\",\n\t                                    { className: \"form-group\" },\n\t                                    React.createElement(\n\t                                        \"label\",\n\t                                        null,\n\t                                        \"Latest Date\"\n\t                                    ),\n\t                                    React.createElement(\"input\", { type: \"date\", value: this.state.startDateMax, className: \"form-control\", onChange: function onChange(e) {\n\t                                            _this3.setState({\n\t                                                startDateMax: e.target.value\n\t                                            });\n\t                                        } })\n\t                                )\n\t                            )\n\t                        ),\n\t                        React.createElement(\n\t                            \"div\",\n\t                            null,\n\t                            React.createElement(\n\t                                \"button\",\n\t                                { className: \"btn btn-primary\", onClick: function onClick() {\n\t                                        if (_this3.props.onApply != undefined) {\n\t                                            var filters = {};\n\t                                            if (_this3.state.candId != \"\") {\n\t                                                filters.CandID = _this3.state.candId;\n\t                                            }\n\t                                            if (_this3.state.pscId != \"\") {\n\t                                                filters.PSCID = _this3.state.pscId;\n\t                                            }\n\t                                            if (_this3.state.centerId != \"\") {\n\t                                                filters.CenterID = _this3.state.centerId;\n\t                                            }\n\t                                            if (_this3.state.visitLabel != \"\") {\n\t                                                filters.VisitLabel = _this3.state.visitLabel;\n\t                                            }\n\t                                            if (_this3.state.projectId != \"\") {\n\t                                                filters.ProjectID = _this3.state.projectId;\n\t                                            }\n\t                                            if (_this3.state.subprojectId != \"\") {\n\t                                                filters.SubprojectID = _this3.state.subprojectId;\n\t                                            }\n\t                                            if (_this3.state.appointmentTypeId != \"\") {\n\t                                                filters.AppointmentTypeID = _this3.state.appointmentTypeId;\n\t                                            }\n\t                                            if (_this3.state.startDate != \"\") {\n\t                                                filters.StartDate = _this3.state.startDate;\n\t                                            }\n\t                                            if (_this3.state.startTime != \"\") {\n\t                                                filters.StartTime = _this3.state.startTime;\n\t                                            }\n\t                                            if (_this3.state.startDateMin != \"\") {\n\t                                                filters.StartDateMin = _this3.state.startDateMin;\n\t                                            }\n\t                                            if (_this3.state.startDateMax != \"\") {\n\t                                                filters.StartDateMax = _this3.state.startDateMax;\n\t                                            }\n\t                                            _this3.props.onApply(filters);\n\t                                        }\n\t                                    } },\n\t                                \"Apply\"\n\t                            ),\n\t                            \"\\xA0\",\n\t                            React.createElement(\n\t                                \"button\",\n\t                                { className: \"btn btn-default\", onClick: function onClick() {\n\t                                        _this3.setState({\n\t                                            candId: \"\",\n\t                                            pscId: \"\",\n\t                                            centerId: \"\",\n\t                                            visitLabel: \"\",\n\t                                            projectId: \"\",\n\t                                            subprojectId: \"\",\n\t                                            appointmentTypeId: \"\",\n\t\n\t                                            startDate: \"\",\n\t                                            startTime: \"\",\n\t\n\t                                            startDateMin: \"\",\n\t                                            startDateMax: \"\"\n\t                                        });\n\t                                        if (_this3.props.onClear != undefined) {\n\t                                            _this3.props.onClear();\n\t                                        }\n\t                                    } },\n\t                                \"Clear\"\n\t                            )\n\t                        )\n\t                    )\n\t                )\n\t            );\n\t        }\n\t    }]);\n\t\n\t    return FilterForm;\n\t}(React.Component);\n\t\n\tFilterForm.defaultProps = {\n\t    id: 'selection-filter',\n\t    height: '100%',\n\t    title: 'Selection Filter',\n\t    onUpdate: function onUpdate() {\n\t        console.warn('onUpdate() callback is not set!');\n\t    }\n\t};\n\n/***/ },\n\n/***/ 30:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.EditForm = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Api = __webpack_require__(28);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar EditForm = exports.EditForm = function (_React$Component) {\n\t    _inherits(EditForm, _React$Component);\n\t\n\t    function EditForm(props) {\n\t        _classCallCheck(this, EditForm);\n\t\n\t        var _this = _possibleConstructorReturn(this, (EditForm.__proto__ || Object.getPrototypeOf(EditForm)).call(this));\n\t\n\t        if (props.appointment == undefined) {\n\t            throw new Error(\"Expected an appointment object\");\n\t        }\n\t        console.log(\"ctor\", props.appointment);\n\t        var startsAt = props.appointment.StartsAt.split(\" \");\n\t        _this.state = {\n\t            appointmentTypeId: props.appointment.AppointmentTypeID,\n\t            startDate: startsAt[0],\n\t            startTime: startsAt[1].substr(0, startsAt[1].length - 3),\n\t            appointmentTypes: [],\n\t            sessionsOfCandidate: [],\n\t            fetchSessionsOfCandidateError: undefined\n\t        };\n\t        return _this;\n\t    }\n\t\n\t    _createClass(EditForm, [{\n\t        key: \"componentDidMount\",\n\t        value: function componentDidMount() {\n\t            var _this2 = this;\n\t\n\t            _Api.Api.getOrFetchAppointmentTypes().then(function (data) {\n\t                _this2.setState({\n\t                    appointmentTypes: data\n\t                });\n\t            });\n\t            _Api.Api.fetchSessionsOfCandidate(this.props.appointment.CandID, this.props.appointment.PSCID).then(function (result) {\n\t                if (result.status != 200) {\n\t                    _this2.setState({\n\t                        fetchSessionsOfCandidateError: typeof result.json.error == \"string\" ? result.json.error : \"An unknown error occurred\"\n\t                    });\n\t                    return;\n\t                }\n\t                _this2.setState({\n\t                    sessionsOfCandidate: result.json\n\t                });\n\t            }).catch(function (err) {\n\t                _this2.setState({\n\t                    fetchSessionsOfCandidateError: err.message\n\t                });\n\t            });\n\t        }\n\t    }, {\n\t        key: \"editAppointment\",\n\t        value: function editAppointment() {\n\t            var _this3 = this;\n\t\n\t            var body = [\"AppointmentTypeID=\" + encodeURIComponent(this.state.appointmentTypeId), \"StartsAt=\" + encodeURIComponent(this.state.startDate + \" \" + this.state.startTime + \":00\")].join(\"&\");\n\t            fetch(\"/schedule_module/ajax/edit_appointment.php?AppointmentID=\" + this.props.appointment.AppointmentID, {\n\t                credentials: \"include\",\n\t                method: \"PUT\",\n\t                body: body,\n\t                headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" }\n\t            }).then(function (res) {\n\t                if (res.status == 304) {\n\t                    throw new Error(\"No changes were made\");\n\t                } else {\n\t                    return res.json().then(function (data) {\n\t                        return {\n\t                            status: res.status,\n\t                            data: data\n\t                        };\n\t                    });\n\t                }\n\t            }).then(function (result) {\n\t                if (result.status == 200) {\n\t                    if (_this3.props.onEdit != undefined) {\n\t                        _this3.props.onEdit(result.data);\n\t                    }\n\t                } else {\n\t                    throw new Error(result.data.error);\n\t                }\n\t            }).catch(function (err) {\n\t                if (_this3.props.onError != undefined) {\n\t                    _this3.props.onError(err);\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: \"render\",\n\t        value: function render() {\n\t            var _this4 = this;\n\t\n\t            return React.createElement(\n\t                \"div\",\n\t                { className: \"container-fluid\" },\n\t                React.createElement(\n\t                    \"div\",\n\t                    { className: \"row\" },\n\t                    React.createElement(\n\t                        \"div\",\n\t                        { className: \"col-lg-6 col-md-6 col-sm-6\" },\n\t                        React.createElement(\n\t                            \"div\",\n\t                            { className: \"form-group\" },\n\t                            React.createElement(\n\t                                \"label\",\n\t                                null,\n\t                                \" DCCID: \"\n\t                            ),\n\t                            React.createElement(\"br\", null),\n\t                            React.createElement(\"input\", { className: \"form-control\", value: this.props.appointment.CandID, disabled: true })\n\t                        ),\n\t                        React.createElement(\n\t                            \"div\",\n\t                            { className: \"form-group\" },\n\t                            React.createElement(\n\t                                \"label\",\n\t                                null,\n\t                                \" PSCID: \"\n\t                            ),\n\t                            React.createElement(\"br\", null),\n\t                            React.createElement(\"input\", { className: \"form-control\", value: this.props.appointment.PSCID, disabled: true })\n\t                        )\n\t                    ),\n\t                    React.createElement(\n\t                        \"div\",\n\t                        { className: \"col-lg-6 col-md-6 col-sm-6\" },\n\t                        React.createElement(\n\t                            \"div\",\n\t                            { className: \"form-group\" },\n\t                            React.createElement(\n\t                                \"label\",\n\t                                null,\n\t                                \" Appointment Date: \"\n\t                            ),\n\t                            React.createElement(\"br\", null),\n\t                            React.createElement(\"input\", { className: \"form-control\", type: \"date\", value: this.state.startDate, onChange: function onChange(e) {\n\t                                    _this4.setState({\n\t                                        startDate: e.target.value\n\t                                    });\n\t                                } })\n\t                        ),\n\t                        React.createElement(\n\t                            \"div\",\n\t                            { className: \"form-group\" },\n\t                            React.createElement(\n\t                                \"label\",\n\t                                null,\n\t                                \" Appointment Time: \"\n\t                            ),\n\t                            React.createElement(\"br\", null),\n\t                            React.createElement(\"input\", { className: \"form-control\", type: \"time\", value: this.state.startTime, onChange: function onChange(e) {\n\t                                    _this4.setState({\n\t                                        startTime: e.target.value\n\t                                    });\n\t                                } })\n\t                        )\n\t                    )\n\t                ),\n\t                React.createElement(\n\t                    \"div\",\n\t                    { className: \"row\" },\n\t                    React.createElement(\n\t                        \"div\",\n\t                        { className: \"col-lg-6 col-md-6 col-sm-6\" },\n\t                        React.createElement(\n\t                            \"div\",\n\t                            { className: \"form-group\" },\n\t                            React.createElement(\n\t                                \"label\",\n\t                                null,\n\t                                \" Session: \"\n\t                            ),\n\t                            React.createElement(\"br\", null),\n\t                            React.createElement(\n\t                                \"select\",\n\t                                { className: \"form-control\", value: this.props.appointment.SessionID, disabled: true },\n\t                                this.state.sessionsOfCandidate.map(function (s) {\n\t                                    return React.createElement(\n\t                                        \"option\",\n\t                                        { key: s.SessionID, value: s.SessionID },\n\t                                        s.SiteName,\n\t                                        \" - \",\n\t                                        s.Visit_Label\n\t                                    );\n\t                                })\n\t                            )\n\t                        )\n\t                    ),\n\t                    React.createElement(\n\t                        \"div\",\n\t                        { className: \"col-lg-6 col-md-6 col-sm-6\" },\n\t                        React.createElement(\n\t                            \"div\",\n\t                            { className: \"form-group\" },\n\t                            React.createElement(\n\t                                \"label\",\n\t                                null,\n\t                                \" Type of Appointment: \"\n\t                            ),\n\t                            React.createElement(\"br\", null),\n\t                            React.createElement(\n\t                                \"select\",\n\t                                { className: \"form-control\", value: this.state.appointmentTypeId, onChange: function onChange(e) {\n\t                                        _this4.setState({\n\t                                            appointmentTypeId: e.target.value\n\t                                        });\n\t                                    } },\n\t                                this.state.appointmentTypes.map(function (s) {\n\t                                    return React.createElement(\n\t                                        \"option\",\n\t                                        { key: s.AppointmentTypeID, value: s.AppointmentTypeID },\n\t                                        s.Name\n\t                                    );\n\t                                })\n\t                            )\n\t                        )\n\t                    ),\n\t                    React.createElement(\"br\", null)\n\t                ),\n\t                React.createElement(\"br\", null),\n\t                React.createElement(\n\t                    \"div\",\n\t                    { className: \"buttoncent\" },\n\t                    React.createElement(\n\t                        \"button\",\n\t                        { className: \"btn btn-primary\", onClick: function onClick() {\n\t                                _this4.editAppointment();\n\t                            } },\n\t                        \"Save\"\n\t                    ),\n\t                    \"\\xA0\",\n\t                    React.createElement(\n\t                        \"button\",\n\t                        { className: \"btn btn-default\", onClick: function onClick() {\n\t                                if (_this4.props.onCancel != undefined) {\n\t                                    _this4.props.onCancel();\n\t                                }\n\t                            } },\n\t                        \"Cancel\"\n\t                    )\n\t                )\n\t            );\n\t        }\n\t    }]);\n\t\n\t    return EditForm;\n\t}(React.Component);\n\n/***/ },\n\n/***/ 31:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.debounce = debounce;\n\t//Poor man's debounce\n\tfunction debounce(func, wait) {\n\t    if (func.__timer != undefined) {\n\t        clearTimeout(func.__timer);\n\t    }\n\t    func.__timer = setTimeout(function () {\n\t        func.__timer = undefined;\n\t        func();\n\t    }, wait);\n\t}\n\n/***/ }\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// project-ibis/modules/schedule_module/js/index.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8e1c20669439b1be6fbf","import {App} from \"./App\";\n\nwindow.onload = () => {\n    ReactDOM.render(\n        <App/>,\n        document.getElementById(\"lorisworkspace\")\n    );\n};\n\n\n// WEBPACK FOOTER //\n// ./project-ibis/modules/schedule_module/jsx/index.js","/**\n * This file contains React component for Panel\n *\n * @author Alex I.\n * @version 1.0.0\n *\n */\n\n/**\n * Panel component\n * Wraps children in a collapsible bootstrap panel\n */\nclass Panel extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapsed: this.props.initCollapsed\n    };\n\n    // Initialize panel class based on collapsed status\n    this.panelClass = (\n      this.props.initCollapsed ?\n        \"panel-collapse collapse\" :\n        \"panel-collapse collapse in\"\n    );\n\n    this.toggleCollapsed = this.toggleCollapsed.bind(this);\n  }\n\n  toggleCollapsed() {\n    this.setState({collapsed: !this.state.collapsed});\n  }\n\n  render() {\n    // Change arrow direction based on collapse status\n    let glyphClass = (\n      this.state.collapsed ?\n        \"glyphicon pull-right glyphicon-chevron-down\" :\n        \"glyphicon pull-right glyphicon-chevron-up\"\n    );\n\n    // Add panel header, if title is set\n    const panelHeading = this.props.title ? (\n      <div\n        className=\"panel-heading\"\n        onClick={this.toggleCollapsed}\n        data-toggle=\"collapse\"\n        data-target={'#' + this.props.id}\n        style={{cursor: 'pointer'}}\n      >\n        {this.props.title}\n        <span className={glyphClass}></span>\n      </div>\n    ) : '';\n\n    return (\n      <div className=\"panel panel-primary\">\n        {panelHeading}\n        <div id={this.props.id} className={this.panelClass} role=\"tabpanel\">\n          <div className=\"panel-body\" style={{height: this.props.height}}>\n            {this.props.children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPanel.propTypes = {\n  id: React.PropTypes.string,\n  height: React.PropTypes.string,\n  title: React.PropTypes.string\n};\nPanel.defaultProps = {\n  initCollapsed: false,\n  id: 'default-panel',\n  height: '100%'\n};\n\nexport default Panel;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Panel.js","import Modal from 'Modal';\nimport {Api} from \"./Api\";\nimport {FilterForm} from \"./FilterForm\";\nimport {EditForm} from \"./EditForm\";\nimport {debounce} from \"./debounce\";\n\nconst today = new Date();\nconst yesterday = new Date(today.getTime() - 24*60*60*1000);\nconst next30days = new Date(today.getTime() + 30 * 24*60*60*1000);\nfunction zeroPad (str, length=2) {\n    if (str.length >= length) {\n        return str;\n    }\n    return \"0\".repeat(length-str.length) + str;\n}\nfunction toDateString (date) {\n    const y = date.getFullYear();\n    const m = zeroPad((date.getMonth()+1).toString());\n    const d = zeroPad(date.getDate().toString());\n    return `${y}-${m}-${d}`;\n}\nconst tabs = [\n    {\n        label : \"All\",\n        filters : {}\n    },\n    {\n        label : \"Past\",\n        filters : {\n            StartDateMax : toDateString(yesterday)\n        }\n    },\n    {\n        label : \"Next 30 Days\",\n        filters : {\n            StartDateMin : toDateString(today),\n            StartDateMax : toDateString(next30days)\n        }\n    },\n];\n\nexport class App extends React.Component {\n    constructor () {\n        super();\n        this.state = {\n            candId : \"\",\n            pscId : \"\",\n            centerId : \"\",\n            appointmentTypeId : \"\",\n            startsAt : \"\",\n            seen : \"0\",\n            visitLabel : \"\",\n            sites : [],\n            visitLabels : [],\n            appointmentTypes: [],\n            open : {\n                createAppointmentForm : false,\n                editAppointmentForm : false,\n            },\n            tabIndex : 0,\n            lockTabs : false,\n            sessionId : -1,\n            sessionsOfCandidate : {\n                candId : \"\",\n                pscId : \"\",\n                sessions : [],\n            },\n            fetchSessionsOfCandidateError : undefined,\n            desiredItemsPerPage : \"20\",\n            desiredPage : \"0\",\n            page : {\n                data : [],\n                meta : {\n                    page : -1,\n                    itemsPerPage : -1,\n                    itemsFound : -1,\n                    pagesFound : -1,\n                },\n            },\n        };\n\n        this.openAppointmentForm = () => {\n            this.setState({\n                open : Object.assign(\n                    {},\n                    this.state.open,\n                    {\n                        createAppointmentForm : true\n                    }\n                )\n            });\n        };\n        this.closeAppointmentForm = () => {\n            this.setState({\n                open : Object.assign(\n                    {},\n                    this.state.open,\n                    {\n                        createAppointmentForm : false\n                    }\n                )\n            });\n            this.clearForm();\n        };\n        this.closeEditForm = () => {\n            this.setState({\n                open : Object.assign(\n                    {},\n                    this.state.open,\n                    {\n                        editAppointmentForm : false\n                    }\n                )\n            });\n        };\n\n        this.fetchSessionsOfCandidate = () => {\n            const candId = this.state.candId;\n            const pscId  = this.state.pscId;\n\n            //Clear the error state\n            this.setState({\n                fetchSessionsOfCandidateError : undefined,\n            });\n\n            //If we're fetching the sessions of a different candidate,\n            //discard the fetched sessions\n            if (\n                this.state.sessionsOfCandidate.candId != candId ||\n                this.state.sessionsOfCandidate.pscId != pscId\n            ) {\n                this.setState({\n                    sessionId : -1,\n                    sessionsOfCandidate : {\n                        candId : candId,\n                        pscId : pscId,\n                        sessions : [],\n                    },\n                });\n            }\n            if (candId == \"\" || pscId == \"\") {\n                //No input yet\n                return;\n            }\n\n            //Fetch the sessions\n            Api.fetchSessionsOfCandidate(candId, pscId)\n                .then((result) => {\n                    console.log(result);\n                    if (result.status != 200) {\n                        this.setState({\n                            fetchSessionsOfCandidateError : (typeof result.json.error == \"string\") ?\n                                result.json.error :\n                                \"An unknown error occurred\",\n                        });\n                        return;\n                    }\n                    if (this.state.candId != candId || this.state.pscId != pscId) {\n                        //The user typed in something else,\n                        //and we just fetched the sessions of the previously entered candId.\n                        //So, ignore this result.\n                        return;\n                    }\n                    this.setState({\n                        sessionId : -1,\n                        sessionsOfCandidate : {\n                            candId : candId,\n                            pscId : pscId,\n                            sessions : result.json,\n                        },\n                    });\n                })\n                .catch((err) => {\n                    this.setState({\n                        fetchSessionsOfCandidateError : err.message,\n                    });\n                });\n        };\n\n        this.refreshTab = () => {\n            this.fetchTab(this.state.tabIndex);\n        };\n    }\n\n    openEditForm () {\n            let open = this.state.open;\n            open.editAppointmentForm = true;\n            this.setState({\n                open : open\n            });\n    }\n\n    setCurrAppointment (a) {\n            let currAppointment = this.state.currAppointment;\n            currAppointment = a;\n            this.setState({currAppointment});\n    }\n\n    clearForm () {\n        this.setState({\n            candId : \"\",\n            pscId : \"\",\n            centerId : \"\",\n            appointmentTypeId : \"\",\n            startDate : \"\",\n            startTime : \"\",\n            seen : \"0\",\n            visitLabel : \"\",\n            sessionId : -1,\n            sessionsOfCandidate : {\n                candId : \"\",\n                pscId : \"\",\n                sessions : [],\n            },\n            fetchSessionsOfCandidateError : undefined,\n        });\n    }\n    \n    createAppointment () {\n        const body = [\n            \"CandID=\" + encodeURIComponent(this.state.candId),\n            \"PSCID=\" + encodeURIComponent(this.state.pscId),\n            \"SessionID=\" + (\n                this.state.sessionId > 0 ?\n                    encodeURIComponent(this.state.sessionId) :\n                    \"\"\n            ),\n            \"AppointmentTypeID=\" + encodeURIComponent(this.state.appointmentTypeId),\n            \"StartsAt=\" + (\n                (\n                    /^\\d{4,6}\\-\\d{2}\\-\\d{2}$/.test(this.state.startDate) &&\n                    /^\\d{2}\\:\\d{2}$/.test(this.state.startTime)\n                ) ?\n                    encodeURIComponent(\n                        this.state.startDate +\n                        \" \" +\n                        this.state.startTime +\n                        \":00\"\n                    ) :\n                    \"\"\n            ),\n        ].join(\"&\");\n        return fetch(\n            \"/schedule_module/ajax/create_appointment.php\",\n            {\n                credentials : \"include\",\n                method : \"POST\",\n                body : body,\n                headers : { \"Content-Type\":\"application/x-www-form-urlencoded\" }\n            }\n        ).then((res) => {\n            return res.json()\n                .then((data) => {\n                    return {\n                        status : res.status,\n                        data : data,\n                    };\n                });\n        }).then((result) => {\n            console.log(result);\n            if (result.status == 200) {\n                this.setState({\n                    page : Object.assign(\n                        {},\n                        this.state.page,\n                        {\n                            data : this.state.page.data.concat(result.data)\n                        }\n                    )\n                });\n            } else {\n                throw new Error(result.data.error);\n            }\n        });\n    }\n\n    fetchPage () {\n        Api.getOrFetchSites()\n            .then((data) => {\n                this.setState({\n                    sites : data\n                });\n            });\n        Api.getOrFetchVisitLabels()\n            .then((data) => {\n                this.setState({\n                    visitLabels : data\n                });\n            });\n        Api.getOrFetchAppointmentTypes()\n            .then((data) => {\n                this.setState({\n                    appointmentTypes : data\n                });\n            });\n    }\n\n    fetchTab (tabIndex) {\n        if (tabIndex == undefined) {\n            tabIndex = this.state.tabIndex;\n        }\n        Api.fetchAppointments(Object.assign(\n            {\n                itemsPerPage : parseInt(this.state.desiredItemsPerPage),\n                page : parseInt(this.state.desiredPage),\n            },\n            tabs[tabIndex].filters\n        ))\n            .then((page) => {\n                this.setState({\n                    page : page\n                });\n            });\n    }\n    \n    componentDidMount () {\n        this.fetchPage();\n        this.fetchTab();\n    }\n\n    render() {\n        let createAppointmentButton;\n        let editAppointmentButton;     \n        \n        createAppointmentButton = (\n            <div className='Create Appointment Button'> \n            <button className=\"btn btn-default\" onClick={this.openAppointmentForm}>\n                <span className='glyphicon glyphicon-calendar'/> Create Appointment\n            </button>\n            <Modal\n                title='Create Appointment'\n                show={this.state.open.createAppointmentForm}\n                closeModal={this.closeAppointmentForm}\n                throwWarning={true}\n            >\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                <div className=\"col-lg-6 col-md-6 col-sm-6\">\n                    <div className=\"form-group\">\n                        <label> DCCID: </label>\n                        <br/>\n                        <input className=\"form-control\" type=\"text\" defaultValue={this.state.candId} onChange={(e) => {\n                            this.setState({\n                                candId : e.target.value\n                            });\n                            debounce(this.fetchSessionsOfCandidate, 500);\n                        }}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label> PSCID: </label>\n                        <br/>\n                        <input className=\"form-control\" type=\"text\" defaultValue={this.state.pscId} onChange={(e) => {\n                            this.setState({\n                                pscId : e.target.value\n                            });\n                            debounce(this.fetchSessionsOfCandidate, 500);\n                        }}/>\n                    </div>\n                    {\n                        this.state.fetchSessionsOfCandidateError == undefined ?\n                            undefined :\n                            <div className=\"alert alert-danger\">\n                                <span className=\"glyphicon glyphicon-exclamation-sign\"></span>\n                                {this.state.fetchSessionsOfCandidateError}\n                            </div>\n                    }\n                </div>\n                <div className=\"col-lg-6 col-md-6 col-sm-6\">\n                    <div className=\"form-group\">\n                        <label> Appointment Date: </label>\n                        <br/>\n                        <input className=\"form-control\" type=\"date\" defaultValue={this.state.startDate} onChange={(e) => {\n                        this.setState({\n                            startDate : e.target.value\n                        });\n                        }}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label> Appointment Time: </label>\n                        <br/>\n                        <input className=\"form-control\" type=\"time\" defaultValue={this.state.startTime} onChange={(e) => {\n                        this.setState({\n                            startTime : e.target.value\n                        });\n                        }}/>\n                    </div>\n                </div>\n                </div>\n                <div className=\"row\">\n                <div className=\"col-lg-6 col-md-6 col-sm-6\">\n                    <div className=\"form-group\">\n                        <label> Session: </label>\n                        <br/>\n                        <select className=\"form-control\" defaultValue={this.state.sessionId} onChange={(e) => {\n                            this.setState({\n                                sessionId : e.target.value\n                            });\n                        }}>\n                        <option value=\"\">- Select a Session -</option>\n                        {   \n                            this.state.sessionsOfCandidate.sessions.map((s) => {\n                                return <option key={s.SessionID} value={s.SessionID}>{s.SiteName} - {s.Visit_Label}</option>;          \n                            })\n                        }\n                        </select>\n                    </div>\n                </div>    \n                <div className=\"col-lg-6 col-md-6 col-sm-6\">\n                    <div className=\"form-group\">\n                        <label> Type of Appointment: </label>\n                        <br/>\n                        <select className=\"form-control\" defaultValue={this.state.appointmentTypeId} onChange={(e) => {\n                        this.setState({\n                            appointmentTypeId : e.target.value\n                        });\n                        }}>\n                        <option value=\"\">- Select an Appointment Type -</option>\n                        {\n                            this.state.appointmentTypes.map((s) => {\n                                return <option key={s.AppointmentTypeID} value={s.AppointmentTypeID}>{s.Name}</option>;\n                            })\n                        }\n                        </select>\n                    </div>\n                </div>    \n                <br/>\n                </div>\n                <br/>\n                <div className=\"buttoncent\">\n                    <button className=\"btn btn-primary\" onClick={() => {\n                        this.createAppointment()\n                            .then(() => {\n                                swal(\"Success!\", \"Appointment created!\", \"success\");\n                                this.closeAppointmentForm();\n                            })\n                            .catch((err) => {\n                                swal(\"Unable to create appointment\", err.message, \"error\");\n                            });\n                    }}>\n                        Create\n                    </button>\n                </div>\n            </div>\n            </Modal>\n        </div>\n        );\n\n        editAppointmentButton = (\n            <div className='Edit Appointment'>\n                <Modal\n                    title='Edit Appointment'\n                    show={this.state.open.editAppointmentForm}\n                    closeModal={this.closeEditForm}\n                    throwWarning={false}\n                >\n                    <EditForm\n                        appointment={this.state.currAppointment}\n                        onEdit={(edited) => {\n                            const appointments = this.state.page.data.slice();\n                            const index = appointments.findIndex(item => item.AppointmentID == edited.AppointmentID);\n                            appointments[index] = edited;\n                            this.setState({\n                                page : Object.assign(\n                                    {},\n                                    this.state.page,\n                                    {\n                                        data : appointments\n                                    }\n                                ),\n                                toEdit : undefined,\n                            });\n                            swal(\"Success!\", \"Appointment updated!\", \"success\");\n                            this.closeEditForm();\n                        }}\n                        onError={(err) => {\n                            swal(\"Unable to edit appointment\", err.message, \"error\");\n                        }}\n                        onCancel={() => {\n                            this.setState({\n                                toEdit : undefined,\n                            });\n                            this.closeEditForm();\n                        }}\n                    />\n                </Modal>\n            </div>\n        );\n\n        return(\n            <div>\n                <FilterForm\n                    onApply={(filters) => {\n                        this.setState({\n                            tabIndex : 0,\n                            lockTabs : true,\n                        });\n                        Api.fetchAppointments(filters)\n                            .then((page) => {\n                                this.setState({\n                                    page : page\n                                });\n                            });\n                    }}\n                    onClear={() => {\n                        this.setState({\n                            lockTabs : false,\n                        });\n                        this.fetchTab();\n                    }}\n                />\n                <h style={{margin : \"10px\"}}>\n                {createAppointmentButton}\n                </h>\n                <br/>\n                <ul className=\"nav nav-tabs\" style={{margin : \"10px\"}}>\n                    {\n                        /* Map the tabs array to jsx element (makes new array; old array + new info) */\n                        tabs.map((tab, index) => (\n                            /* Set tab label to element key + if current tab is selected tab, set to active (this gives the appearance of being on a certain tab on the front end*/\n                            <li key={tab.label} className={[\n                                    (!this.state.lockTabs && this.state.tabIndex == index) ? \"active\" : \"\",\n                                    (this.state.lockTabs) ? \"disabled\" : \"\"\n                            ].join(\" \")}>\n                                {/* preventDefault prevents nagivation to a new page */}\n                                <a href=\"#/\" onClick={(e) => {\n                                    e.preventDefault();\n                                    if (this.state.lockTabs) {\n                                        return;\n                                    }\n                                    /* (Don't do this when disabling) Change current tab to tab that was clicked, fetch corresponding data */\n                                    this.setState({\n                                        tabIndex : index\n                                    });\n                                    this.fetchTab(index);\n                                }}>\n                                    {/* Renders the tab name */}\n                                    {tab.label} &nbsp;\n\t\t\t\t    \n\t\t\t\t    {\n\t\t\t\t\t(!this.state.lockTabs && this.state.tabIndex == index) ?\n\t\t\t\t\t<span className=\"badge\">\n\t\t\t                \t{this.state.page.data.length}\n                                    \t</span> :\n\t\t\t\t\tundefined\n\t\t\t\t    }\n                                </a>\n                            </li>\n                        ))\n                    }\n                    {\n                        this.state.lockTabs ?\n                        <li className=\"active\">\n                            <a href=\"#/\" onClick={(e) => {\n                                e.preventDefault();\n                            }}>\n                                Search Results &nbsp;\n                                <span className=\"badge\">\n                                    {this.state.page.data.length}\n                                </span>\n                            </a>\n                        </li> :\n                        undefined\n                    }\n                </ul>\n                <div className=\"table-responsive\">\n                    <table className=\"table table-striped table-hover\">\n                        <thead style={{backgroundColor : \"#064785\"}}>\n                            <tr>\n                                <th>\n                                    DCCID\n                                </th>\n                                <th>\n                                    PSCID\n                                </th>\n                                <th>\n                                    Site\n                                </th>\n                                <th>\n                                    Visit Label\n                                </th>\n                                <th>\n                                    Subproject\n                                </th>\n                                <th>\n                                    Starts At\n                                </th>\n                                <th>\n                                    Appointment Type\n                                </th>\n                                <th>\n                                    Data Entry Status\n                                </th>\n                                <th>\n                                    Edit\n                                </th>\n                                <th>\n                                    Delete\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.page.data.map((a, index) => {\n                                    const site = this.state.sites.find(s => s.CenterID == a.CenterID);\n                                    const appointmentType = this.state.appointmentTypes\n                                        .find(at => at.AppointmentTypeID == a.AppointmentTypeID);\n\n                                    let dataEntryStatus = \"Unknown\";\n                                    let dataEntryLabelColor = \"default\";\n                                    if (a.started != \"1\") {\n                                        dataEntryStatus  = \"Upcoming\";\n                                        dataEntryLabelColor = \"default\";\n                                    } else if (a.hasDataEntryComplete == \"1\") {\n                                        if (a.hasDataEntryInProgress == \"1\" || a.hasDataEntryNotStarted == \"1\") {\n                                            dataEntryStatus = \"In Progress\";\n                                            dataEntryLabelColor = \"warning\";\n                                        } else {\n                                            dataEntryStatus = \"Complete\"; \n                                            dataEntryLabelColor = \"success\";                                       }\n                                    } else if (a.hasDataEntryInProgress == \"1\") {\n                                        dataEntryStatus = \"In Progress\";\n                                        dataEntryLabelColor = \"warning\";\n                                    } else if (a.hasDataEntryNotStarted == \"1\") {\n                                        dataEntryStatus = \"Not Started\";\n                                        dataEntryLabelColor = \"warning\";\n                                    } else {\n                                        dataEntryStatus = \"No Data Found\";\n                                        dataEntryLabelColor = \"danger\";\n                                    }\n\n                                    return (\n                                        <tr key={a.AppointmentID}>\n                                            <td>\n                                                {a.CandID}\n                                            </td>\n                                            <td>\n                                                <a href={\"/\" + a.CandID + \"/\"}>{a.PSCID}</a>\n                                            </td>\n                                            <td>\n                                                {\n                                                    (site == undefined) ?\n                                                        \"Site #\"+a.CenterID :\n                                                        site.Name\n                                                }\n                                            </td>\n                                            <td>\n                                                <a href={\"/instrument_list/?candID=\" + a.CandID + \"&sessionID=\" + a.SessionID}>{a.Visit_label}</a>\n                                            </td>\n                                            <td>\n                                                {a.title}\n                                            </td>\n                                            <td>\n                                                {a.StartsAt}\n                                            </td>\n                                            <td>\n                                                {\n                                                    (appointmentType == undefined) ?\n                                                        \"Appointment Type #\"+a.AppointmentTypeID :\n                                                        appointmentType.Name\n                                                }\n                                            </td>\n                                            <td>\n                                                <span className={\"label label-\"+dataEntryLabelColor}>{dataEntryStatus}</span>\n                                            </td>\n                                            <td>\n                                                <button className=\"btn btn-default\" onClick={() => \n                                                {this.openEditForm(); this.setCurrAppointment(a);}}>\n                                                    <span className='glyphicon glyphicon-edit'/> Edit\n                                                </button>\n                                            </td>\n                                            <td>\n                                                <button className=\"btn btn-default\" onClick={() => {\n                                                swal({\n                                                    title: \"Are you sure you want to delete?\",\n                                                    text: \"Appointments cannot be recovered\",\n                                                    type: \"warning\",\n                                                    showCancelButton: true,\n                                                    confirmButtonClass: \"btn-danger\",\n                                                    confirmButtonText: \"Yes, delete it!\",  \n                                                    cancelButtonText: \"No, keep appointment!\",\n                                                    closeOnConfirm: false,\n                                                    closeOnCancel: false\n                                                    },\n                                                    (isConfirm) => {\n                                                    if (isConfirm) {\n                                                    fetch(\n                                                            \"/schedule_module/ajax/delete_appointment.php?AppointmentID=\"+a.AppointmentID,\n                                                            {\n                                                                credentials : \"include\",\n                                                                method : \"DELETE\",\n                                                            }\n                                                        ).then(() => {\n                                                            const index = this.state.page.data.findIndex(item => item.AppointmentID == a.AppointmentID);\n                                                            if (index < 0) {\n                                                                return;\n                                                            }\n                                                            const appointments = this.state.page.data.slice();\n                                                            appointments.splice(index, 1);\n                                                            this.setState({\n                                                                page : Object.assign(\n                                                                    {},\n                                                                    this.state.page,\n                                                                    {\n                                                                        data : appointments\n                                                                    }\n                                                                )\n                                                            });\n                                                    });\n                                                    swal.close();\n                                                    } else {\n                                                    //swal(\"Canceled\", \"The appointment has not been deleted\", \"error\");\n                                                    swal.close();\n                                                    }\n                                                    });\n                                                }}>\n                                                    <span className='glyphicon glyphicon-trash'/> Delete\n                                                </button>\n                                            </td>\n                                        </tr>\n                                    );\n                                })\n                            }\n                        </tbody>\n                    </table>\n                </div>\n                <div className=\"form-row\">\n                    <div className=\"form-group col-md-2\">\n                        Items Per Page: <input className=\"form-control\" type=\"number\" value={this.state.desiredItemsPerPage} onChange={(e) => {\n                            this.setState({\n                                desiredItemsPerPage : e.target.value\n                            });\n                            debounce(this.refreshTab, 500);\n                        }}/>\n                    </div>\n                    <div className=\"form-group col-md-2\">\n                        Page: <input className=\"form-control\" type=\"number\" value={this.state.desiredPage} onChange={(e) => {\n                            this.setState({\n                                desiredPage : e.target.value\n                            });\n                            debounce(this.refreshTab, 500);\n                        }}/>\n                    </div>\n                    <div className=\"form-group col-md-6\">\n                        {\n                            this.state.page.meta.pagesFound < 0 ?\n                            \"\" :\n                            `${this.state.page.meta.pagesFound} page(s) found, `\n                        }\n                        {\n                            this.state.page.meta.itemsFound < 0 ?\n                            \"\" :\n                            `${this.state.page.meta.itemsFound} items found`\n                        }\n                    </div>\n                </div>\n                {editAppointmentButton}\n            </div>\n        )\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./project-ibis/modules/schedule_module/jsx/App.js","/**\n * This file contains React components for Modal component.\n *\n * @author Henri Rabalais\n * @version 1.1.0\n *\n */\n\n/**\n * Modal Component.\n * React wrapper for a Modal Window. Allows to dynamically toggle a Modal window.\n *\n * ================================================\n * Usage:\n *\n * =================================================\n *\n */\nclass Modal extends React.Component {\n  constructor() {\n    super();\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  closeModal() {\n    if (this.props.throwWarning) {\n      swal({\n        title: \"Are You Sure?\",\n        text: \"Leaving the form will result in the loss of any information entered.\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonText: 'Proceed',\n        cancelButtonText: 'Cancel',\n      },\n      () => {\n        this.props.closeModal();\n      });\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    // Black Background with Alpha Channel\n    const backdropStyle = {\n      position: 'fixed',\n      zIndex: 9998,\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      backgroundColor: 'rgba(0,0,0,0.1)',\n      padding: 50\n    };\n\n    // White Modal Window\n    const modalStyle = {\n      position: 'relative',\n      maxWidth: 600,\n      maxHeight: '100%',\n      margin: '0 auto',\n      backgroundColor: '#fff',\n      borderRadius: 10,\n      overflowY: 'auto',\n      zIndex: 9999,\n      top: '10%',\n    };\n\n    const titleStyle = {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      background: '#093782',\n      height: '50px',\n      borderTopRightRadius: '10',\n      color: '#FFFFFF',\n      fontSize: 24,\n      padding: 20,\n    }\n\n    const glyphStyle = {\n      marginLeft: 'auto',\n      cursor: 'pointer'\n    }\n\n    const bodyStyle = {\n      padding: 15\n    }\n\n    let modal;\n    if (this.props.show) {\n      modal = (\n        <div style={backdropStyle} onClick={this.closeModal}>\n          <div style={modalStyle} onClick={e => {e.stopPropagation()}}>\n            <div style={titleStyle}>\n              {this.props.title}\n              <span style={glyphStyle} onClick={this.closeModal}>\n                ×\n              </span>\n            </div>\n            <div style={bodyStyle}>\n              {this.props.children}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {modal}\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  title: React.PropTypes.string,\n  show: React.PropTypes.bool.isRequired,\n  closeModal: React.PropTypes.func.isRequired,\n  throwWarning: React.PropTypes.bool.isRequired,\n};\n\nModal.defaultProps = {\n  throwWarning: true,\n};\n\nexport default Modal;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Modal.js","class AppointmentApi {\n    getOrFetchSites () {\n        if (this._sites != undefined) {\n            return Promise.resolve(this._sites);\n        }\n        return fetch(\n            \"/schedule_module/ajax/list_sites.php\",\n            {\n                credentials : \"include\",\n                method : \"GET\",\n            }\n        ).then((res) => {\n            return res.json();\n        }).then((data) => {\n            console.log(data);\n            this._sites = data;\n            return data;\n        });\n    }\n    getOrFetchVisitLabels () {\n        if (this._visitLabels != undefined) {\n            return Promise.resolve(this._visitLabels);\n        }\n        return fetch(\n            \"/schedule_module/ajax/list_visit_labels.php\",\n            {\n                credentials : \"include\",\n                method : \"GET\",\n            }\n        ).then((res) => {\n            return res.json();\n        }).then((data) => {\n            console.log(data);\n            this._visitLabels = data;\n            return data;\n        });\n    }\n    getOrFetchProjects () {\n        if (this._projects != undefined) {\n            return Promise.resolve(this._projects);\n        }\n        return fetch(\n            \"/schedule_module/ajax/list_projects.php\",\n            {\n                credentials : \"include\",\n                method : \"GET\",\n            }\n        ).then((res) => {\n            return res.json();\n        }).then((data) => {\n            console.log(data);\n            this._projects = data;\n            return data;\n        });\n    }\n    getOrFetchSubprojects () {\n        if (this._subprojects != undefined) {\n            return Promise.resolve(this._subprojects);\n        }\n        return fetch(\n            \"/schedule_module/ajax/list_subprojects.php\",\n            {\n                credentials : \"include\",\n                method : \"GET\",\n            }\n        ).then((res) => {\n            return res.json();\n        }).then((data) => {\n            console.log(data);\n            this._subprojects = data;\n            return data;\n        });\n    }\n    getOrFetchAppointmentTypes () {\n        if (this._appointmentTypes != undefined) {\n            return Promise.resolve(this._appointmentTypes);\n        }\n        return fetch(\n            \"/schedule_module/ajax/list_appointment_types.php\",\n            {\n                credentials : \"include\",\n                method : \"GET\",\n            }\n        ).then((res) => {\n            return res.json();\n        }).then((data) => {\n            console.log(data);\n            this._appointmentTypes = data;\n            return data;\n        });\n    }\n    fetchAppointments (filters = {}) {\n        const queryString = Object.keys(filters)\n            .map(key => `${key}=${encodeURIComponent(filters[key])}`)\n            .join(\"&\");\n        return fetch(\n            `/schedule_module/ajax/list_appointments.php?${queryString}`,\n            {\n                credentials : \"include\",\n                method : \"GET\",\n            }\n        ).then((res) => {\n            return res.json();\n        });\n    }\n    fetchSessionsOfCandidate (candId, pscId) {\n        const query = {\n            \"CandID\" : candId,\n            \"PSCID\" : pscId,\n        };\n        const queryString = Object.keys(query)\n            .map(key => `${key}=${encodeURIComponent(query[key])}`)\n            .join(\"&\");\n        return fetch(\n            `/schedule_module/ajax/list_sessions_of_candidate.php?${queryString}`,\n            {\n                credentials : \"include\",\n                method : \"GET\",\n            }\n        ).then((res) => {\n            return res.json()\n                .then((json) => {\n                    return {\n                        status : res.status,\n                        json : json,\n                    };\n                });\n        });\n    }\n}\n\nexport const Api = new AppointmentApi();\n\n\n// WEBPACK FOOTER //\n// ./project-ibis/modules/schedule_module/jsx/Api.js","import Panel from 'Panel';\nimport {Api} from \"./Api\";\n\nexport class FilterForm extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            sites : [],\n            visitLabels : [],\n            projects : [],\n            subprojects : [],\n            appointmentTypes : [],\n\n            candId : \"\",\n            pscId : \"\",\n            centerId : \"\",\n            visitLabel : \"\",\n            projectId : \"\",\n            subprojectId : \"\",\n            appointmentTypeId : \"\",\n\n            startDate : \"\",\n            startTime : \"\",\n\n            startDateMin : \"\",\n            startDateMax : \"\",\n        };\n    }\n    componentDidMount () {\n        Api.getOrFetchSites()\n            .then((data) => {\n                this.setState({\n                    sites : data\n                });\n            });\n        Api.getOrFetchVisitLabels()\n            .then((data) => {\n                this.setState({\n                    visitLabels : data\n                });\n            });\n        Api.getOrFetchProjects()\n            .then((data) => {\n                this.setState({\n                    projects : data\n                });\n            });\n        Api.getOrFetchSubprojects()\n            .then((data) => {\n                this.setState({\n                    subprojects : data\n                });\n            });\n        Api.getOrFetchAppointmentTypes()\n            .then((data) => {\n                this.setState({\n                    appointmentTypes : data\n                });\n            });\n    }\n    render () {\n        return (\n            <Panel\n                id={this.props.id}\n                height={this.props.height}\n                title={this.props.title}\n            >\n                <div className=\"panel-body\">\n                    <div className=\"container-fluid\">\n                        <div className=\"row\">\n                            <div className=\"col-lg-6 col-md-6 col-sm-6\">\n                                <div className=\"form-group\">\n                                    <label>DCCID</label>\n                                    <input type=\"text\" value={this.state.candId} className=\"form-control\" onChange={(e) => {\n                                        this.setState({\n                                            candId : e.target.value\n                                        })\n                                    }}/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Site</label>\n                                    <select className=\"form-control\" value={this.state.centerId} onChange={(e) => {\n                                        this.setState({\n                                            centerId : e.target.value\n                                        })\n                                    }}>\n                                        <option value=\"\">-Select a Site-</option>\n                                        {\n                                            this.state.sites.map((s) => {\n                                                return <option key={s.CenterID} value={s.CenterID}>{s.Name}</option>;\n                                            })\n                                        }\n                                    </select>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Project</label>\n                                    <select className=\"form-control\" value={this.state.projectId} onChange={(e) => {\n                                        this.setState({\n                                            projectId : e.target.value\n                                        })\n                                    }}>\n                                        <option value=\"\">-Select a Project-</option>\n                                        {\n                                            this.state.projects.map((s) => {\n                                                return <option key={s.ProjectID} value={s.ProjectID}>{s.Name}</option>;\n                                            })\n                                        }\n                                    </select>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Appointment Type</label>\n                                    <select className=\"form-control\" value={this.state.appointmentTypeId} onChange={(e) => {\n                                        this.setState({\n                                            appointmentTypeId : e.target.value\n                                        })\n                                    }}>\n                                        <option value=\"\">-Select an Appointment Type-</option>\n                                        {\n                                            this.state.appointmentTypes.map((s) => {\n                                                return <option key={s.AppointmentTypeID} value={s.AppointmentTypeID}>{s.Name}</option>;\n                                            })\n                                        }\n                                    </select>\n                                </div>\n                            </div>\n                            <div className=\"col-lg-6 col-md-6 col-sm-6\">\n                                <div className=\"form-group\">\n                                    <label>PSCID</label>\n                                    <input type=\"text\" value={this.state.pscId} className=\"form-control\" onChange={(e) => {\n                                        this.setState({\n                                            pscId : e.target.value\n                                        })\n                                    }}/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Visit Label</label>\n                                    <select className=\"form-control\" value={this.state.visitLabel} onChange={(e) => {\n                                        this.setState({\n                                            visitLabel : e.target.value\n                                        })\n                                    }}>\n                                        <option value=\"\">-Select a Visit Label-</option>\n                                        {\n                                            this.state.visitLabels.map((s) => {\n                                                return <option key={s.Visit_label} value={s.Visit_label}>{s.Visit_label}</option>;\n                                            })\n                                        }\n                                    </select>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Subproject</label>\n                                    <select className=\"form-control\" value={this.state.subprojectId} onChange={(e) => {\n                                        this.setState({\n                                            subprojectId : e.target.value\n                                        })\n                                    }}>\n                                        <option value=\"\">-Select a Subproject-</option>\n                                        {\n                                            this.state.subprojects.map((s) => {\n                                                return <option key={s.SubprojectID} value={s.SubprojectID}>{s.title}</option>;\n                                            })\n                                        }\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-lg-6 col-md-6 col-sm-6\">\n                                <div className=\"form-group\">\n                                    <label>Date</label>\n                                    <input type=\"date\" value={this.state.startDate} className=\"form-control\" onChange={(e) => {\n                                        this.setState({\n                                            startDate : e.target.value\n                                        })\n                                    }}/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Earliest Date</label>\n                                    <input type=\"date\" value={this.state.startDateMin} className=\"form-control\" onChange={(e) => {\n                                        this.setState({\n                                            startDateMin : e.target.value\n                                        })\n                                    }}/>\n                                </div>\n                            </div>\n                            <div className=\"col-lg-6 col-md-6 col-sm-6\">\n                                <div className=\"form-group\">\n                                    <label>Time</label>\n                                    <input type=\"time\" value={this.state.startTime} className=\"form-control\" onChange={(e) => {\n                                        console.log(e.target.value)\n                                        this.setState({\n                                            startTime : e.target.value\n                                        })\n                                    }}/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Latest Date</label>\n                                    <input type=\"date\" value={this.state.startDateMax} className=\"form-control\" onChange={(e) => {\n                                        this.setState({\n                                            startDateMax : e.target.value\n                                        })\n                                    }}/>\n                                </div>\n                            </div>\n                        </div>\n                        <div>\n                            <button className=\"btn btn-primary\" onClick={() => {\n                                if (this.props.onApply != undefined) {\n                                    const filters = {};\n                                    if (this.state.candId != \"\") {\n                                        filters.CandID = this.state.candId;\n                                    }\n                                    if (this.state.pscId != \"\") {\n                                        filters.PSCID = this.state.pscId;\n                                    }\n                                    if (this.state.centerId != \"\") {\n                                        filters.CenterID = this.state.centerId;\n                                    }\n                                    if (this.state.visitLabel != \"\") {\n                                        filters.VisitLabel = this.state.visitLabel;\n                                    }\n                                    if (this.state.projectId != \"\") {\n                                        filters.ProjectID = this.state.projectId;\n                                    }\n                                    if (this.state.subprojectId != \"\") {\n                                        filters.SubprojectID = this.state.subprojectId;\n                                    }\n                                    if (this.state.appointmentTypeId != \"\") {\n                                        filters.AppointmentTypeID = this.state.appointmentTypeId;\n                                    }\n                                    if (this.state.startDate != \"\") {\n                                        filters.StartDate = this.state.startDate;\n                                    }\n                                    if (this.state.startTime != \"\") {\n                                        filters.StartTime = this.state.startTime;\n                                    }\n                                    if (this.state.startDateMin != \"\") {\n                                        filters.StartDateMin = this.state.startDateMin;\n                                    }\n                                    if (this.state.startDateMax != \"\") {\n                                        filters.StartDateMax = this.state.startDateMax;\n                                    }\n                                    this.props.onApply(filters);\n                                }\n                            }}>Apply</button>\n                            &nbsp;\n                            <button className=\"btn btn-default\" onClick={() => {\n                                this.setState({\n                                    candId : \"\",\n                                    pscId : \"\",\n                                    centerId : \"\",\n                                    visitLabel : \"\",\n                                    projectId : \"\",\n                                    subprojectId : \"\",\n                                    appointmentTypeId : \"\",\n\n                                    startDate : \"\",\n                                    startTime : \"\",\n\n                                    startDateMin : \"\",\n                                    startDateMax : \"\",\n                                });\n                                if (this.props.onClear != undefined) {\n                                    this.props.onClear();\n                                }\n                            }}>Clear</button>\n                        </div>\n                    </div>\n                </div>\n            </Panel>\n        );\n    }\n}\n\nFilterForm.defaultProps = {\n  id: 'selection-filter',\n  height: '100%',\n  title: 'Selection Filter',\n  onUpdate: function() {\n    console.warn('onUpdate() callback is not set!');\n  }\n};\n\n\n// WEBPACK FOOTER //\n// ./project-ibis/modules/schedule_module/jsx/FilterForm.js","import {Api} from \"./Api\";\n\nexport class EditForm extends React.Component {\n    constructor (props) {\n        super();\n        if (props.appointment == undefined) {\n            throw new Error(`Expected an appointment object`);\n        }\n        console.log(\"ctor\", props.appointment);\n        const startsAt = props.appointment.StartsAt.split(\" \");\n        this.state = {\n            appointmentTypeId : props.appointment.AppointmentTypeID,\n            startDate : startsAt[0],\n            startTime : startsAt[1].substr(0, startsAt[1].length-3),\n            appointmentTypes: [],\n            sessionsOfCandidate : [],\n            fetchSessionsOfCandidateError : undefined,\n        };\n    }\n\n    componentDidMount () {\n        Api.getOrFetchAppointmentTypes()\n            .then((data) => {\n                this.setState({\n                    appointmentTypes : data\n                });\n            });\n        Api.fetchSessionsOfCandidate(this.props.appointment.CandID, this.props.appointment.PSCID)\n            .then((result) => {\n                if (result.status != 200) {\n                    this.setState({\n                        fetchSessionsOfCandidateError : (typeof result.json.error == \"string\") ?\n                            result.json.error :\n                            \"An unknown error occurred\",\n                    });\n                    return;\n                }\n                this.setState({\n                    sessionsOfCandidate : result.json,\n                });\n            })\n            .catch((err) => {\n                this.setState({\n                    fetchSessionsOfCandidateError : err.message,\n                });\n            });\n    }\n\n    editAppointment () {\n        const body = [\n            \"AppointmentTypeID=\" + encodeURIComponent(this.state.appointmentTypeId),\n            \"StartsAt=\" + encodeURIComponent(this.state.startDate + \" \" + this.state.startTime + \":00\"),\n        ].join(\"&\");\n        fetch(\n            \"/schedule_module/ajax/edit_appointment.php?AppointmentID=\"+this.props.appointment.AppointmentID,\n            {\n                credentials : \"include\",\n                method : \"PUT\",\n                body : body,\n                headers : { \"Content-Type\":\"application/x-www-form-urlencoded\" }\n            }\n        ).then((res) => {\n            if (res.status == 304) {\n                throw new Error(\"No changes were made\");\n            } else {\n                return res.json()\n                    .then((data) => {\n                        return {\n                            status : res.status,\n                            data : data,\n                        };\n                    });\n            }\n        }).then((result) => {\n            if (result.status == 200) {\n                if (this.props.onEdit != undefined) {\n                    this.props.onEdit(result.data);\n                }\n            } else {\n                throw new Error(result.data.error);\n            }\n        }).catch((err) => {\n            if (this.props.onError != undefined) {\n                this.props.onError(err);\n            }\n        });\n    }\n    \n    render () {\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-lg-6 col-md-6 col-sm-6\">\n                        <div className=\"form-group\">\n                            <label> DCCID: </label>\n                            <br/>\n                            <input className=\"form-control\" value={this.props.appointment.CandID} disabled/>\n                        </div>\n                        <div className=\"form-group\">\n                            <label> PSCID: </label>\n                            <br/>\n                            <input className=\"form-control\" value={this.props.appointment.PSCID} disabled/>\n                        </div>\n                    </div>\n                    <div className=\"col-lg-6 col-md-6 col-sm-6\">\n                        <div className=\"form-group\">\n                            <label> Appointment Date: </label>\n                            <br/>\n                            <input className=\"form-control\" type=\"date\" value={this.state.startDate} onChange={(e) => {\n                                this.setState({\n                                    startDate : e.target.value\n                                });     \n                            }}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <label> Appointment Time: </label>\n                            <br/>\n                            <input className=\"form-control\" type=\"time\" value={this.state.startTime} onChange={(e) => {\n                                this.setState({\n                                    startTime : e.target.value\n                                });\n                            }}/>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-lg-6 col-md-6 col-sm-6\">\n                        <div className=\"form-group\">\n                            <label> Session: </label>\n                            <br/>\n                            <select className=\"form-control\" value={this.props.appointment.SessionID} disabled>\n                                {\n                                    this.state.sessionsOfCandidate.map((s) => {\n                                        return <option key={s.SessionID} value={s.SessionID}>{s.SiteName} - {s.Visit_Label}</option>;          \n                                    })\n                                }\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"col-lg-6 col-md-6 col-sm-6\">\n                        <div className=\"form-group\">\n                            <label> Type of Appointment: </label>\n                            <br/>\n                            <select className=\"form-control\" value={this.state.appointmentTypeId} onChange={(e) => {\n                                this.setState({\n                                    appointmentTypeId : e.target.value\n                                });\n                            }}>\n                                {\n                                    this.state.appointmentTypes.map((s) => {\n                                        return <option key={s.AppointmentTypeID} value={s.AppointmentTypeID}>{s.Name}</option>;\n                                    })\n                                }\n                            </select>\n                        </div>\n                    </div>\n                    <br/>\n                </div>\n                <br/>\n                <div className=\"buttoncent\">\n                    <button className=\"btn btn-primary\" onClick={() => {\n                        this.editAppointment();\n                    }}>\n                        Save\n                    </button> \n                    &nbsp;\n                    <button className=\"btn btn-default\" onClick={() => {\n                        if (this.props.onCancel != undefined) {\n                            this.props.onCancel();\n                        }\n                    }}>\n                        Cancel\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./project-ibis/modules/schedule_module/jsx/EditForm.js","//Poor man's debounce\nexport function debounce (func, wait) {\n    if (func.__timer != undefined) {\n        clearTimeout(func.__timer);\n    }\n    func.__timer = setTimeout(() => {\n        func.__timer = undefined;\n        func();\n    }, wait);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./project-ibis/modules/schedule_module/jsx/debounce.js"],"sourceRoot":""}