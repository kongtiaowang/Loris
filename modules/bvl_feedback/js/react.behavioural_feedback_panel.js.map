{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"React\"","webpack:///./node_modules/prop-types/index.js","webpack:///./node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///./modules/bvl_feedback/jsx/react.behavioural_feedback_panel.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","React","throwOnDirectAccess","isValidElement","REACT_ELEMENT_TYPE","ReactPropTypesSecret","emptyFunction","shim","props","propName","componentName","location","propFullName","secret","err","Error","isRequired","getShim","ReactPropTypes","array","bool","func","number","string","symbol","any","arrayOf","element","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","_react","_propTypes","SliderPanel","_classCallCheck","this","_possibleConstructorReturn","__proto__","getPrototypeOf","_react2","default","createElement","className","id","pscid","children","Component","FeedbackPanelContent","_this2","state","currentEntryToggled","markCommentToggle","openThread","closeThread","index","setState","open_thread","close_thread","headers","feedbackLevel","tableHeaders","header","threads","length","feedbackRows","map","row","thisRowCommentToggled","FeedbackPanelRow","FeedbackID","commentToggled","feedbackID","sessionID","type","Type","commentID","candID","status","QCStatus","date","Date","commentToggle","fieldname","FieldName","author","User","onClickClose","onClickOpen","table","style","overflowX","_this3","threadEntriesToggled","threadEntriesLoaded","loadServerState","toggleEntries","newThreadEntry","that","$","url","loris","dataType","data","success","error","xhr","desc","console","newComment","toggle","comment","response","arrow","threadEntries","buttonText","buttonClass","dropdown","onClick","commentButton","entry","colSpan","UserID","TestDate","Comment","data-toggle","aria-haspopup","aria-expanded","CommentEntryForm","user","onCommentSend","toggleThisThread","_this4","sendComment","handleChange","event","width","resize","rows","ref","onChange","AccordionPanel","_this5","toggled","toggleChange","panelBodyClass","arrowClass","title","NewThreadPanel","_this6","textValue","selectValue","inputValue","handleSelectChange","handleTextChange","handleInputChange","createNewThread","inputType","fieldName","addThread","updateSummaryThread","fieldnameSelect","options","selectOptions","selected","feedbackTypes","input","_key","Label","FeedbackSummaryPanel","_this7","summary","summaryRows","summary_data","QC_Class","href","CommentID","Instrument","SessionID","Visit","No_Threads","FeedbackPanel","_this8","loadSummaryServerData","loadThreadServerState","markThreadClosed","markThreadOpened","RBehaviouralFeedbackPanel","window"],"mappings":"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","file":"./modules/bvl_feedback/js/react.behavioural_feedback_panel.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 44);\n","module.exports = React;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/* exported RBehaviouralFeedbackPanel */\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nclass SliderPanel extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div className='panel-group' id='bvl_feedback_menu'>\n        <div className='breadcrumb-panel'>\n          <a className='info'>\n            Feedback for PSCID: {this.props.pscid}\n          </a>\n        </div>\n        {this.props.children}\n      </div>\n    );\n  }\n}\nSliderPanel.propTypes = {\n  pscid: PropTypes.string,\n  children: PropTypes.string,\n};\n\nclass FeedbackPanelContent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentEntryToggled: null,\n    };\n    this.markCommentToggle = this.markCommentToggle.bind(this);\n    this.openThread = this.openThread.bind(this);\n    this.closeThread = this.closeThread.bind(this);\n  }\n\n  markCommentToggle(index) {\n    if (index === this.state.currentEntryToggled) {\n      this.setState({\n        currentEntryToggled: null,\n      });\n    } else {\n      this.setState({\n        currentEntryToggled: index,\n      });\n    }\n  }\n\n  openThread(index) {\n    this.props.open_thread(index);\n  }\n\n  closeThread(index) {\n    this.props.close_thread(index);\n    this.setState({\n      currentEntryToggled: null,\n    });\n  }\n\n  render() {\n    let headers = ['Type', 'Author', 'Status'];\n\n    if (this.props.feedbackLevel === 'instrument') {\n      headers[0] = 'Fieldname';\n    }\n\n    let tableHeaders = (\n      <tr className='info'>\n        {headers.map(function(header, key) {\n          return (<td key={key}>{header}</td>);\n        })}\n      </tr>\n    );\n\n    if (this.props.threads.length) {\n      let currentEntryToggled = this.state.currentEntryToggled;\n      let feedbackRows = this.props.threads.map(function(row, index) {\n        let thisRowCommentToggled = (currentEntryToggled === index);\n        return (\n          <FeedbackPanelRow\n            key={row.FeedbackID}\n            commentToggled={thisRowCommentToggled}\n            feedbackID={row.FeedbackID}\n            sessionID={this.props.sessionID}\n            type={row.Type}\n            commentID={this.props.commentID}\n            candID={this.props.candID}\n            status={row.QCStatus}\n            date={row.Date}\n            commentToggle={this.markCommentToggle.bind(null, index)}\n            fieldname={row.FieldName}\n            author={row.User}\n            onClickClose={this.closeThread.bind(null, index)}\n            onClickOpen={this.props.open_thread.bind(null, index)}\n          />\n        );\n      }.bind(this));\n\n      let table = (\n        <table\n          id=\"current_thread_table\"\n          className=\"table table-hover table-bordered dynamictable\"\n        >\n          <thead id=\"current_thread_table_header\">\n            {tableHeaders}\n          </thead>\n          {feedbackRows}\n        </table>\n      );\n\n      return (\n        <div className=\"panel-collapse collapse in\">\n          <div className=\"panel-body\" style={{overflowX: 'auto'}}>\n            {table}\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className='panel-body'>There are no threads for this user!</div>\n    );\n  }\n}\nFeedbackPanelContent.propTypes = {\n  feedbackLevel: PropTypes.string,\n  threads: PropTypes.array,\n  open_thread: PropTypes.func,\n  close_thread: PropTypes.func,\n  candID: PropTypes.string,\n  commentID: PropTypes.string,\n  sessionID: PropTypes.string,\n};\n\nclass FeedbackPanelRow extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      threadEntriesToggled: false,\n      threadEntriesLoaded: [],\n    };\n    this.loadServerState = this.loadServerState.bind(this);\n    this.toggleEntries = this.toggleEntries.bind(this);\n    this.newThreadEntry = this.newThreadEntry.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadServerState();\n  }\n\n  loadServerState() {\n    let that = this;\n    $.ajax({\n      type: 'GET',\n      url: loris.BaseURL + '/bvl_feedback/ajax/get_thread_entry_data.php',\n      dataType: 'json',\n      data: {feedbackID: this.props.feedbackID},\n      success: function(data) {\n        that.setState({threadEntriesLoaded: data});\n      },\n      error: function(xhr, desc, err) {\n        console.error(xhr);\n        console.error('Details: ' + desc + '\\nError:' + err);\n      },\n    });\n  }\n\n  toggleEntries(newComment) {\n    let toggle = false;\n    if (newComment) {\n      toggle = true;\n    } else {\n      toggle = !this.state.threadEntriesToggled;\n    }\n    this.setState({threadEntriesToggled: toggle});\n  }\n\n  newThreadEntry(comment) {\n    let feedbackID = this.props.feedbackID;\n    let candID = this.props.candID;\n    $.ajax({\n      type: 'POST',\n      url: loris.BaseURL + '/bvl_feedback/ajax/thread_comment_bvl_feedback.php',\n      dataType: 'json',\n      data: {\n        comment: comment,\n        feedbackID: feedbackID,\n        candID: candID,\n      },\n      success: function(response) {\n        this.loadServerState();\n        // end of success function\n      }.bind(this),\n      error: function(xhr, desc, err) {\n        console.error(xhr);\n        console.error('Details: ' + desc + '\\nError:' + err);\n      },\n    });\n  }\n\n  render() {\n    let arrow = 'glyphicon glyphicon-chevron-right glyphs';\n    let threadEntries = [];\n\n    let buttonText = 'closed';\n    let buttonClass = 'btn btn-success dropdown-toggle btn-sm';\n    let dropdown = (<li><a onClick={this.props.onClickOpen}>Open</a></li>);\n    let commentButton;\n\n    if (this.state.threadEntriesToggled) {\n      arrow = 'glyphicon glyphicon-chevron-down glyphs';\n      threadEntries = this.state.threadEntriesLoaded.map(function(entry, key) {\n        return (\n          <tr key={key} className='thread_entry'>\n            <td colSpan='100%'>\n              {entry.UserID} on {entry.TestDate} commented:<br/>\n              {entry.Comment}\n            </td>\n          </tr>\n        );\n      });\n    }\n\n    if (this.props.status === 'opened') {\n      buttonText = 'opened';\n      buttonClass = 'btn btn-danger dropdown-toggle btn-sm';\n      dropdown = (<li><a onClick={this.props.onClickClose}>Close</a></li>);\n      commentButton = (\n        <span className='glyphicon glyphicon-pencil'\n              onClick={this.props.commentToggle}/>\n      );\n    }\n\n    return (\n      <tbody>\n      <tr>\n        {this.props.fieldname ?\n          <td>{this.props.fieldname}<br/>{this.props.type}</td> :\n          <td>{this.props.type}</td>}\n        <td>{this.props.author} on:<br/>{this.props.date}</td>\n        <td>\n          <div className='btn-group'>\n            <button name='thread_button' type='button' className={buttonClass}\n                    data-toggle='dropdown' aria-haspopup='true'\n                    aria-expanded='false'>\n              {buttonText}\n              <span className='caret'></span>\n            </button>\n            <ul className='dropdown-menu'>\n              {dropdown}\n            </ul>\n          </div>\n          <span className={arrow}\n                onClick={this.toggleEntries.bind(this, false)}></span>\n          {commentButton}\n        </td>\n      </tr>\n      {this.props.commentToggled ?\n        (<CommentEntryForm\n          user={this.props.user}\n          onCommentSend={this.newThreadEntry}\n          toggleThisThread={this.toggleEntries.bind(this, true)}\n        />) :\n        null\n      }\n      {threadEntries}\n      </tbody>\n    );\n  }\n}\nFeedbackPanelRow.propTypes = {\n  fieldname: PropTypes.string,\n  type: PropTypes.string,\n  author: PropTypes.string,\n  date: PropTypes.string,\n  feedbackID: PropTypes.string,\n  candID: PropTypes.string,\n  onClickOpen: PropTypes.string,\n};\n\nclass CommentEntryForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n    };\n    this.sendComment = this.sendComment.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  sendComment() {\n    this.props.onCommentSend(this.state.value);\n    this.setState({\n      value: 'Comment added!',\n    });\n    this.props.toggleThisThread();\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  render() {\n    return (\n      <tr>\n        <td colSpan='100%'>Add a thread entry:\n          <div className='input-group' style={{width: '100%'}}>\n            <textarea\n              className='form-control'\n              value={this.state.value}\n              style={{resize: 'none'}}\n              rows='2'\n              ref='threadEntry'\n              onChange={this.handleChange}>\n            </textarea>\n            <span\n              className='input-group-addon btn btn-primary'\n              onClick={this.sendComment}\n            >\n              Send\n            </span>\n          </div>\n        </td>\n      </tr>\n    );\n  }\n}\nCommentEntryForm.propTypes = {\n  onCommentSend: PropTypes.func,\n  toggleThisThread: PropTypes.func,\n};\n\nclass AccordionPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggled: false,\n    };\n    this.toggleChange = this.toggleChange.bind(this);\n  }\n\n  toggleChange() {\n    this.setState({\n      toggled: !(this.state.toggled),\n    });\n  }\n\n  render() {\n    let panelBodyClass = 'panel-collapse collapse in';\n    let arrowClass;\n\n    if (this.state.toggled) {\n      panelBodyClass = 'panel-collapse collapse';\n      arrowClass = 'collapsed';\n    }\n\n    return (\n      <div className='panel-group' id='accordion'>\n        <div className='panel panel-default'>\n          <div className='panel-heading'>\n            <h4 className='panel-title'>\n              <a className={arrowClass} onClick={this.toggleChange}>\n                {this.props.title}\n              </a>\n            </h4>\n          </div>\n          <div className={panelBodyClass}>\n            {this.props.children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nAccordionPanel.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.string,\n};\n\nclass NewThreadPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      textValue: '',\n      selectValue: 'Across All Fields',\n      inputValue: Object.keys(this.props.feedbackTypes)[0],\n    };\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n    this.handleTextChange = this.handleTextChange.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.createNewThread = this.createNewThread.bind(this);\n  }\n\n  handleSelectChange(event) {\n    this.setState({selectValue: event.target.value});\n  }\n\n  handleTextChange(event) {\n    this.setState({textValue: event.target.value});\n  }\n\n  handleInputChange(event) {\n    this.setState({inputValue: event.target.value});\n  }\n\n  createNewThread() {\n    if (this.state.textValue.length) {\n      $.ajax({\n        type: 'POST',\n        url: loris.BaseURL + '/bvl_feedback/ajax/new_bvl_feedback.php',\n        dataType: 'json',\n        data: {\n          inputType: this.state.inputValue,\n          fieldName: this.state.selectValue,\n          comment: this.state.textValue,\n          candID: this.props.candID,\n          sessionID: this.props.sessionID,\n          commentID: this.props.commentID,\n          user: this.props.commentID,\n        },\n        success: function(data) {\n          this.setState({textValue: 'The new thread has been submitted!'});\n          this.props.addThread(data);\n          this.props.updateSummaryThread();\n        }.bind(this),\n        error: function(xhr, desc, err) {\n          console.error(xhr);\n          console.error('Details: ' + desc + '\\nError:' + err);\n        },\n      });\n    }\n  }\n\n  render() {\n    let fieldnameSelect;\n    let options = [];\n    for (let key in this.props.selectOptions) {\n      if (this.props.selectOptions.hasOwnProperty(key)) {\n        options.push(\n          <option key={key} value={key}>{this.props.selectOptions[key]}</option>\n        );\n      }\n    }\n\n    if (this.props.feedbackLevel === 'instrument') {\n      fieldnameSelect = (\n        <div className='form-group'>\n          <div className='row'>\n            <label className='col-xs-4'>Field Name</label>\n            <div className='col-xs-8'>\n              <select\n                className='form-control'\n                name='inputType'\n                selected={this.state.selectValue}\n                onChange={this.handleSelectChange}\n              >\n                {options}\n              </select>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    let feedbackTypes = this.props.feedbackTypes;\n    let input = [];\n    for (let key in feedbackTypes) {\n      if (feedbackTypes.hasOwnProperty(key)) {\n        input.push(\n          <option key={key} value={feedbackTypes[key].Type}>\n            {feedbackTypes[key].Label}\n          </option>\n        );\n      }\n    }\n\n    return (\n      <div className='panel-body' id='new_feedback'>\n        <div className='form-group'>\n          <textarea\n            className='form-control'\n            rows='4'\n            id='comment'\n            value={this.state.textValue}\n            onChange={this.handleTextChange}>\n          </textarea>\n        </div>\n        {fieldnameSelect}\n        <div className='form-group'>\n          <div className='row'>\n            <label className='col-xs-4'>Feedback Type</label>\n            <div className='col-xs-8'>\n              <select\n                name='input'\n                selected={this.state.inputValue}\n                onChange={this.handleInputChange}\n                className='form-control'\n              >\n                {input}\n              </select>\n            </div>\n          </div>\n        </div>\n        <div className='form-group'>\n          <button\n            id='save_data'\n            onClick={this.createNewThread}\n            className='btn btn-default pull-right btn-sm'\n          >\n            Save data\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\nNewThreadPanel.propTypes = {\n  selectOptions: PropTypes.object,\n  feedbackLevel: PropTypes.string,\n  feedbackTypes: PropTypes.object,\n  addThread: PropTypes.func,\n  updateSummaryThread: PropTypes.func,\n  inputType: PropTypes.string,\n  fieldName: PropTypes.string,\n  comment: PropTypes.string,\n  candID: PropTypes.string,\n  sessionID: PropTypes.string,\n  commentID: PropTypes.string,\n  user: PropTypes.string,\n};\n\nclass FeedbackSummaryPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      summary: null,\n    };\n  }\n\n  render() {\n    let summaryRows = [];\n\n    if (this.props.summary_data) {\n      summaryRows = this.props.summary_data.map(function(row, key) {\n        return (\n          <tr key={key}>\n            <td>{row.QC_Class}</td>\n            <td>\n              <a href={loris.BaseURL + '/instruments/' + row.Instrument + '/?candID=' +\n                row.CandID + '&sessionID=' + row.SessionID + '&commentID=' +\n                row.CommentID}\n              >\n                {row.Instrument}\n              </a>\n            </td>\n            <td>\n              <a href={loris.BaseURL + '/instrument_list/?candID=' +\n              row.CandID + '&sessionID=' + row.SessionID}\n              >\n                {row.Visit}\n              </a>\n            </td>\n            <td>{row.No_Threads}</td>\n          </tr>\n        );\n      });\n    }\n\n    if (summaryRows === undefined || summaryRows.length === 0) {\n      return (\n        <div className='panel-body'>\n          This candidate has no behavioural feedback.\n        </div>\n      );\n    }\n\n    return (\n      <div className='panel-body'>\n        <table\n          className='table table-hover table-bordered dynamictable'>\n          <thead>\n            <tr className='info'>\n              <th>QC Class</th>\n              <th>Instrument</th>\n              <th>Visit</th>\n              <th># Threads</th>\n            </tr>\n          </thead>\n          <tbody>\n            {summaryRows}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\nFeedbackSummaryPanel.propTypes = {\n  summary_data: PropTypes.array,\n};\n\nclass FeedbackPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      threads: '',\n      summary: null,\n    };\n    this.loadSummaryServerData = this.loadSummaryServerData.bind(this);\n    this.loadThreadServerState = this.loadThreadServerState.bind(this);\n    this.addThread = this.addThread.bind(this);\n    this.markThreadClosed = this.markThreadClosed.bind(this);\n    this.markThreadOpened = this.markThreadOpened.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadThreadServerState();\n  }\n\n  loadSummaryServerData() {\n    $.ajax({\n      type: 'POST',\n      url: loris.BaseURL + '/bvl_feedback/ajax/get_bvl_feedback_summary.php',\n      dataType: 'json',\n      data: {\n        candID: this.props.candID,\n        sessionID: this.props.sessionID,\n        commentID: this.props.commentID,\n      },\n      success: function(data) {\n        this.setState({summary: data});\n      }.bind(this),\n      error: function(xhr, desc, err) {\n        console.error(xhr);\n        console.error('Details: ' + desc + '\\nError:' + err);\n      },\n    });\n  }\n\n  loadThreadServerState() {\n    $.ajax({\n      type: 'POST',\n      url: loris.BaseURL + '/bvl_feedback/ajax/react_get_bvl_threads.php',\n      dataType: 'json',\n      data: {\n        candID: this.props.candID,\n        sessionID: this.props.sessionID,\n        commentID: this.props.commentID,\n        user: this.props.commentID,\n      },\n      success: function(data) {\n        this.setState({threads: data});\n        this.loadSummaryServerData();\n      }.bind(this),\n      error: function(xhr, desc, err) {\n        console.error(xhr);\n        console.error('Details: ' + desc + '\\nError:' + err);\n      },\n    });\n  }\n\n  addThread(data) {\n    this.loadThreadServerState();\n  }\n\n  markThreadClosed(index) {\n    let threads = this.state.threads;\n    let entry = this.state.threads[index];\n    threads.splice(index, 1);\n    let feedbackID = entry.FeedbackID;\n    entry.QCStatus = 'closed';\n\n    threads.push(entry);\n\n    $.ajax({\n      type: 'POST',\n      url: loris.BaseURL + '/bvl_feedback/ajax/close_bvl_feedback_thread.php',\n      dataType: 'json',\n      data: {\n        candID: this.props.candID,\n        feedbackID: feedbackID,\n      },\n      success: function(data) {\n        this.setState({threads: threads});\n        this.loadSummaryServerData();\n      }.bind(this),\n      error: function(xhr, desc, err) {\n        console.error(xhr);\n        console.error('Details: ' + desc + '\\nError:' + err);\n      },\n    });\n  }\n\n  markThreadOpened(index) {\n    let threads = this.state.threads;\n    let entry = this.state.threads[index];\n    let feedbackID = entry.FeedbackID;\n\n    entry.QCStatus = 'opened';\n    threads.splice(index, 1);\n    threads.unshift(entry);\n\n    $.ajax({\n      type: 'POST',\n      url: loris.BaseURL + '/bvl_feedback/ajax/open_bvl_feedback_thread.php',\n      dataType: 'json',\n      data: {\n        candID: this.props.candID,\n        feedbackID: feedbackID,\n      },\n      success: function(data) {\n        this.setState({threads: threads});\n        this.loadSummaryServerData();\n      }.bind(this),\n      error: function(xhr, desc, err) {\n        console.error(xhr);\n        console.error('Details: ' + desc + '\\nError:' + err);\n      },\n    });\n  }\n\n  render() {\n    let title = 'New ' + this.props.feedbackLevel + ' level feedback';\n    return (\n      <SliderPanel pscid={this.props.pscid}>\n        <AccordionPanel title='Open Thread Summary'>\n          <FeedbackSummaryPanel summary_data={this.state.summary} />\n        </AccordionPanel>\n        <AccordionPanel title={title}>\n          <NewThreadPanel\n            selectOptions={this.props.selectOptions}\n            feedbackLevel={this.props.feedbackLevel}\n            candID={this.props.candID}\n            sessionID={this.props.sessionID}\n            commentID={this.props.commentID} addThread={this.addThread}\n            updateSummaryThread={this.loadSummaryServerData}\n            feedbackTypes={this.props.feedbackTypes}\n          />\n        </AccordionPanel>\n        <AccordionPanel title='Feedback Threads'>\n          <FeedbackPanelContent\n            threads={this.state.threads}\n            close_thread={this.markThreadClosed}\n            open_thread={this.markThreadOpened}\n            feedbackLevel={this.props.feedbackLevel}\n            candID={this.props.candID}\n            sessionID={this.props.sessionID}\n            commentID={this.props.commentID}\n          />\n        </AccordionPanel>\n      </SliderPanel>\n    );\n  }\n}\nFeedbackPanel.propTypes = {\n  selectOptions: PropTypes.array,\n  feedbackLevel: PropTypes.string,\n  candID: PropTypes.string,\n  sessionID: PropTypes.string,\n  commentID: PropTypes.string,\n};\n\nlet RBehaviouralFeedbackPanel = React.createFactory(FeedbackPanel);\n\nwindow.FeedbackPanel = FeedbackPanel;\nwindow.RBehaviouralFeedbackPanel = RBehaviouralFeedbackPanel;\n\nexport default FeedbackPanel;\n"],"sourceRoot":""}