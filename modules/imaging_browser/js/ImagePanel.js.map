{"version":3,"sources":["webpack:///modules/imaging_browser/js/ImagePanel.js","webpack:///webpack/bootstrap 00b9a6f859a9e3af5f96?950c***************************","webpack:///./modules/imaging_browser/jsx/ImagePanel.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","Object","defineProperty","value","ImagePanelHeader","React","createClass","displayName","mixins","addons","PureRenderMixin","render","QCStatusLabel","this","props","QCStatus","createElement","className","arrow","Expanded","onClick","onToggleBody","headerButton","type","onToggleHeaders","aria-expanded","HeadersExpanded","data-file-id","FileID","Filename","ImagePanelHeadersTable","componentDidMount","$","ReactDOM","findDOMNode","DynamicTable","colSpan","HeaderInfo","XStep","YStep","ZStep","OutputType","AcquisitionDate","CoordinateSpace","InsertedDate","AcquisitionProtocol","SeriesDescription","SeriesNumber","EchoTime","RepetitionTime","SliceThickness","NumVolumes","Pipeline","Algorithm","TotalRejected","InterlaceRejected","IntergradientRejected","SlicewiseRejected","ImageQCDropdown","label","Label","url","href","dropdown","editable","options","key","hasOwnProperty","push","FormName","name","defaultValue","ImageQCStatic","staticInfo","ImagePanelQCStatusSelector","qcStatusLabel","HasQCPerm","FileNew","","Pass","Fail","ImagePanelQCSelectedSelector","true","false","Selected","ImagePanelQCCaveatSelector","mriViolationsLink","SeriesUID","Caveat","1","0","ImagePanelQCSNRValue","SNR","ImagePanelQCPanel","DownloadButton","FileName","style","margin","BaseURL","ImageQCCommentsButton","openWindowHandler","e","preventDefault","window","open","LongitudinalViewButton","OtherTimepoints","ImageDownloadButtons","Fullname","XMLProtocol","XMLReport","NrrdFile","ImagePanelBody","src","Checkpic","ImagePanel","getInitialState","BodyCollapsed","HeadersCollapsed","toggleBody","setState","state","toggleHeaders","RImagePanel","createFactory","default"],"mappings":"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","file":"./modules/imaging_browser/js/ImagePanel.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t/* exported ImagePanelHeader, ImagePanelHeadersTable, ImageQCDropdown, ImageQCStatic,\n\t ImagePanelQCStatusSelector, ImagePanelQCSelectedSelector, ImagePanelQCCaveatSelector,\n\t ImagePanelQCSNRValue, ImagePanelQCPanel, DownloadButton, ImageQCCommentsButton.\n\t LongitudinalViewButton, ImageDownloadButtons, ImagePanelBody, RImagePanel\n\t* */\n\t\n\tvar ImagePanelHeader = React.createClass({\n\t    displayName: 'ImagePanelHeader',\n\t\n\t    mixins: [React.addons.PureRenderMixin],\n\t    render: function render() {\n\t        var QCStatusLabel;\n\t        if (this.props.QCStatus === 'Pass') {\n\t            QCStatusLabel = React.createElement(\n\t                'span',\n\t                { className: 'label label-success' },\n\t                this.props.QCStatus\n\t            );\n\t        } else if (this.props.QCStatus === 'Fail') {\n\t            QCStatusLabel = React.createElement(\n\t                'span',\n\t                { className: 'label label-danger' },\n\t                this.props.QCStatus\n\t            );\n\t        }\n\t\n\t        var arrow;\n\t        if (this.props.Expanded) {\n\t            arrow = React.createElement('span', { onClick: this.props.onToggleBody,\n\t                className: 'pull-right clickable glyphicon arrow glyphicon-chevron-up' });\n\t        } else {\n\t            arrow = React.createElement('span', { onClick: this.props.onToggleBody,\n\t                className: 'pull-right clickable glyphicon arrow glyphicon-chevron-down' });\n\t        }\n\t        var headerButton = React.createElement(\n\t            'div',\n\t            { className: 'pull-right' },\n\t            React.createElement(\n\t                'div',\n\t                { className: 'btn-group views' },\n\t                React.createElement(\n\t                    'button',\n\t                    {\n\t                        type: 'button',\n\t                        className: 'btn btn-default btn-xs dropdown-toggle',\n\t                        onClick: this.props.onToggleHeaders,\n\t                        'aria-expanded': this.props.HeadersExpanded },\n\t                    'Header Info'\n\t                ),\n\t                React.createElement('span', { className: 'caret' })\n\t            )\n\t        );\n\t        return React.createElement(\n\t            'div',\n\t            { className: 'panel-heading' },\n\t            React.createElement('input', { type: 'checkbox', 'data-file-id': this.props.FileID,\n\t                className: 'mripanel user-success' }),\n\t            React.createElement(\n\t                'h3',\n\t                { className: 'panel-title' },\n\t                this.props.Filename,\n\t                ' '\n\t            ),\n\t            QCStatusLabel,\n\t            arrow,\n\t            headerButton\n\t        );\n\t    }\n\t\n\t});\n\t\n\tvar ImagePanelHeadersTable = React.createClass({\n\t    displayName: 'ImagePanelHeadersTable',\n\t\n\t    componentDidMount: function componentDidMount() {\n\t        $(ReactDOM.findDOMNode(this)).DynamicTable();\n\t    },\n\t    render: function render() {\n\t        return React.createElement(\n\t            'table',\n\t            { className: 'table table-hover table-bordered header-info col-xs-12 dynamictable' },\n\t            React.createElement(\n\t                'tbody',\n\t                null,\n\t                React.createElement(\n\t                    'tr',\n\t                    null,\n\t                    React.createElement(\n\t                        'th',\n\t                        { className: 'info col-xs-2' },\n\t                        'Voxel Size'\n\t                    ),\n\t                    React.createElement(\n\t                        'td',\n\t                        { className: 'col-xs-6', colSpan: '3' },\n\t                        this.props.HeaderInfo.XStep === '' ? ' ' : 'X: ' + this.props.HeaderInfo.XStep + \" mm \",\n\t                        this.props.HeaderInfo.YStep === '' ? ' ' : 'Y: ' + this.props.HeaderInfo.YStep + \" mm \",\n\t                        this.props.HeaderInfo.ZStep === '' ? ' ' : 'Z: ' + this.props.HeaderInfo.ZStep + \" mm \"\n\t                    ),\n\t                    React.createElement(\n\t                        'th',\n\t                        { className: 'col-xs-2 info' },\n\t                        'Output Type'\n\t                    ),\n\t                    React.createElement(\n\t                        'td',\n\t                        { className: 'col-xs-2' },\n\t                        this.props.HeaderInfo.OutputType\n\t                    )\n\t                ),\n\t                React.createElement(\n\t                    'tr',\n\t                    null,\n\t                    React.createElement(\n\t                        'th',\n\t                        { className: 'col-xs-2 info' },\n\t                        'Acquisition Date'\n\t                    ),\n\t                    React.createElement(\n\t                        'td',\n\t                        { className: 'col-xs-2' },\n\t                        this.props.HeaderInfo.AcquisitionDate\n\t                    ),\n\t                    React.createElement(\n\t                        'th',\n\t                        { className: 'col-xs-2 info' },\n\t                        'Space'\n\t                    ),\n\t                    React.createElement(\n\t                        'td',\n\t                        { className: 'col-xs-2' },\n\t                        this.props.HeaderInfo.CoordinateSpace\n\t                    ),\n\t                    React.createElement(\n\t                        'th',\n\t                        { className: 'col-xs-2 info' },\n\t                        'Inserted Date'\n\t                    ),\n\t                    React.createElement(\n\t                        'td',\n\t                        { className: 'col-xs-2' },\n\t                        this.props.HeaderInfo.InsertedDate\n\t                    )\n\t                ),\n\t                React.createElement(\n\t                    'tr',\n\t                    null,\n\t                    React.createElement(\n\t                        'th',\n\t                        { className: 'col-xs-2 info' },\n\t                        'Protocol'\n\t                    ),\n\t                    React.createElement(\n\t                        'td',\n\t                        { className: 'col-xs-2' },\n\t                        this.props.HeaderInfo.AcquisitionProtocol\n\t                    ),\n\t                    React.createElement(\n\t                        'th',\n\t                        { className: 'col-xs-2 info' },\n\t                        'Series Description'\n\t                    ),\n\t                    React.createElement(\n\t                        'td',\n\t                        { className: 'col-xs-2' },\n\t                        this.props.HeaderInfo.SeriesDescription\n\t                    ),\n\t                    React.createElement(\n\t                        'th',\n\t                        { className: 'col-xs-2 info' },\n\t                        'Series Number'\n\t                    ),\n\t                    React.createElement(\n\t                        'td',\n\t                        { className: 'col-xs-2' },\n\t                        this.props.HeaderInfo.SeriesNumber\n\t                    )\n\t                ),\n\t                React.createElement(\n\t                    'tr',\n\t                    null,\n\t                    React.createElement(\n\t                        'th',\n\t                        { className: 'col-xs-2 info' },\n\t                        'Echo Time'\n\t                    ),\n\t                    React.createElement(\n\t                        'td',\n\t                        { className: 'col-xs-2' },\n\t                        this.props.HeaderInfo.EchoTime,\n\t                        ' ms'\n\t                    ),\n\t                    React.createElement(\n\t                        'th',\n\t                        { className: 'col-xs-2 info' },\n\t                        'Rep Time'\n\t                    ),\n\t                    React.createElement(\n\t                        'td',\n\t                        { className: 'col-xs-2' },\n\t                        this.props.HeaderInfo.RepetitionTime,\n\t                        ' ms'\n\t                    ),\n\t                    React.createElement(\n\t                        'th',\n\t                        { className: 'col-xs-2 info' },\n\t                        'Slice Thick'\n\t                    ),\n\t                    React.createElement(\n\t                        'td',\n\t                        { className: 'col-xs-2' },\n\t                        this.props.HeaderInfo.SliceThickness,\n\t                        ' mm'\n\t                    )\n\t                ),\n\t                React.createElement(\n\t                    'tr',\n\t                    null,\n\t                    React.createElement(\n\t                        'th',\n\t                        { className: 'col-xs-2 info' },\n\t                        'Number of volumes'\n\t                    ),\n\t                    React.createElement(\n\t                        'td',\n\t                        { className: 'col-xs-2' },\n\t                        this.props.HeaderInfo.NumVolumes,\n\t                        ' volumes'\n\t                    ),\n\t                    React.createElement(\n\t                        'th',\n\t                        { className: 'col-xs-2 info' },\n\t                        'Pipeline'\n\t                    ),\n\t                    React.createElement(\n\t                        'td',\n\t                        { className: 'col-xs-2' },\n\t                        this.props.HeaderInfo.Pipeline\n\t                    ),\n\t                    React.createElement(\n\t                        'th',\n\t                        { className: 'col-xs-2 info' },\n\t                        'Algorithm'\n\t                    ),\n\t                    React.createElement(\n\t                        'td',\n\t                        { className: 'col-xs-2' },\n\t                        this.props.HeaderInfo.Algorithm\n\t                    )\n\t                ),\n\t                React.createElement(\n\t                    'tr',\n\t                    null,\n\t                    React.createElement(\n\t                        'th',\n\t                        { className: 'col-xs-2 info' },\n\t                        'Number of rejected directions'\n\t                    ),\n\t                    React.createElement(\n\t                        'td',\n\t                        { className: 'col-xs-2' },\n\t                        this.props.HeaderInfo.TotalRejected\n\t                    ),\n\t                    React.createElement(\n\t                        'th',\n\t                        { className: 'col-xs-2 info' },\n\t                        'Number of Interlace correlations'\n\t                    ),\n\t                    React.createElement(\n\t                        'td',\n\t                        { className: 'col-xs-2' },\n\t                        this.props.HeaderInfo.InterlaceRejected\n\t                    ),\n\t                    React.createElement(\n\t                        'th',\n\t                        { className: 'col-xs-2 info' },\n\t                        'Number of Gradient-wise correlations'\n\t                    ),\n\t                    React.createElement(\n\t                        'td',\n\t                        { className: 'col-xs-2' },\n\t                        this.props.HeaderInfo.IntergradientRejected\n\t                    )\n\t                ),\n\t                React.createElement(\n\t                    'tr',\n\t                    null,\n\t                    React.createElement(\n\t                        'th',\n\t                        { className: 'col-xs-2 info' },\n\t                        'Number of Slicewise correlations'\n\t                    ),\n\t                    React.createElement(\n\t                        'td',\n\t                        { className: 'col-xs-2' },\n\t                        this.props.HeaderInfo.SlicewiseRejected\n\t                    ),\n\t                    React.createElement(\n\t                        'td',\n\t                        { className: 'col-xs-4', colSpan: '4' },\n\t                        '\\xA0'\n\t                    )\n\t                )\n\t            )\n\t        );\n\t    }\n\t});\n\tvar ImageQCDropdown = React.createClass({\n\t    displayName: 'ImageQCDropdown',\n\t\n\t\n\t    render: function render() {\n\t        var label = React.createElement(\n\t            'label',\n\t            null,\n\t            this.props.Label\n\t        );\n\t        if (this.props.url) {\n\t            label = React.createElement(\n\t                'label',\n\t                null,\n\t                React.createElement(\n\t                    'a',\n\t                    { href: this.props.url },\n\t                    this.props.Label\n\t                )\n\t            );\n\t        }\n\t        var dropdown;\n\t        if (this.props.editable) {\n\t            var options = [];\n\t            for (var key in this.props.options) {\n\t                if (this.props.options.hasOwnProperty(key)) {\n\t                    options.push(React.createElement(\n\t                        'option',\n\t                        { key: this.props.FormName + this.props.FileID + key,\n\t                            className: 'form-control input-sm option',\n\t                            value: key },\n\t                        this.props.options[key]\n\t                    ));\n\t                }\n\t            }\n\t            dropdown = React.createElement(\n\t                'select',\n\t                { name: this.props.FormName + \"[\" + this.props.FileID + \"]\",\n\t                    defaultValue: this.props.defaultValue,\n\t                    className: 'form-control input-sm'\n\t                },\n\t                options\n\t            );\n\t        } else {\n\t            dropdown = React.createElement(\n\t                'div',\n\t                { className: 'col-xs-12' },\n\t                this.props.defaultValue\n\t            );\n\t        }\n\t        return React.createElement(\n\t            'div',\n\t            { className: 'row' },\n\t            label,\n\t            dropdown\n\t        );\n\t    }\n\t});\n\tvar ImageQCStatic = React.createClass({\n\t    displayName: 'ImageQCStatic',\n\t\n\t    render: function render() {\n\t        var staticInfo;\n\t        staticInfo = React.createElement(\n\t            'div',\n\t            { className: 'col-xs-12' },\n\t            this.props.defaultValue\n\t        );\n\t        return React.createElement(\n\t            'div',\n\t            { className: 'row' },\n\t            React.createElement(\n\t                'label',\n\t                null,\n\t                this.props.Label\n\t            ),\n\t            staticInfo\n\t        );\n\t    }\n\t});\n\t\n\tvar ImagePanelQCStatusSelector = React.createClass({\n\t    displayName: 'ImagePanelQCStatusSelector',\n\t\n\t    render: function render() {\n\t        var qcStatusLabel;\n\t        if (this.props.HasQCPerm && this.props.FileNew) {\n\t            qcStatusLabel = React.createElement(\n\t                'span',\n\t                null,\n\t                'QC Status ',\n\t                React.createElement(\n\t                    'span',\n\t                    { className: 'text-info' },\n\t                    '( ',\n\t                    React.createElement('span', { className: 'glyphicon glyphicon-star' }),\n\t                    ' New )'\n\t                )\n\t            );\n\t        } else {\n\t            qcStatusLabel = \"QC Status\";\n\t        }\n\t\n\t        return React.createElement(ImageQCDropdown, {\n\t            Label: qcStatusLabel,\n\t            FormName: 'status',\n\t            FileID: this.props.FileID,\n\t            editable: this.props.HasQCPerm,\n\t            defaultValue: this.props.QCStatus,\n\t            options: { \"\": \"\", \"Pass\": \"Pass\", \"Fail\": \"Fail\" }\n\t        });\n\t    }\n\t});\n\tvar ImagePanelQCSelectedSelector = React.createClass({\n\t    displayName: 'ImagePanelQCSelectedSelector',\n\t\n\t    render: function render() {\n\t        return React.createElement(ImageQCDropdown, {\n\t            Label: 'Selected',\n\t            FormName: 'selectedvol',\n\t            FileID: this.props.FileID,\n\t            editable: this.props.HasQCPerm,\n\t            options: { \"\": \"\", \"true\": \"True\", \"false\": \"False\" },\n\t            defaultValue: this.props.Selected\n\t        });\n\t    }\n\t});\n\tvar ImagePanelQCCaveatSelector = React.createClass({\n\t    displayName: 'ImagePanelQCCaveatSelector',\n\t\n\t    render: function render() {\n\t        // Link caveat to MRI Violations if set true\n\t        var mriViolationsLink = null;\n\t        if (this.props.SeriesUID && this.props.Caveat === \"1\") {\n\t            mriViolationsLink = '/mri_violations/?' + 'submenu=mri_protocol_check_violations&SeriesUID=' + this.props.SeriesUID + '&filter=true';\n\t        }\n\t\n\t        return React.createElement(ImageQCDropdown, {\n\t            Label: 'Caveat',\n\t            FormName: 'caveat',\n\t            FileID: this.props.FileID,\n\t            editable: this.props.HasQCPerm,\n\t            options: {\n\t                \"\": \"\",\n\t                \"1\": \"True\",\n\t                \"0\": \"False\"\n\t            },\n\t            defaultValue: this.props.Caveat,\n\t            url: mriViolationsLink\n\t        });\n\t    }\n\t});\n\tvar ImagePanelQCSNRValue = React.createClass({\n\t    displayName: 'ImagePanelQCSNRValue',\n\t\n\t    render: function render() {\n\t        return React.createElement(ImageQCStatic, {\n\t            Label: 'SNR',\n\t            FormName: 'snr',\n\t            FileID: this.props.FileID,\n\t            defaultValue: this.props.SNR\n\t        });\n\t    }\n\t});\n\tvar ImagePanelQCPanel = React.createClass({\n\t    displayName: 'ImagePanelQCPanel',\n\t\n\t    mixins: [React.addons.PureRenderMixin],\n\t    render: function render() {\n\t        return React.createElement(\n\t            'div',\n\t            { className: 'form-group' },\n\t            React.createElement(ImagePanelQCStatusSelector, {\n\t                FileID: this.props.FileID,\n\t                HasQCPerm: this.props.HasQCPerm,\n\t                QCStatus: this.props.QCStatus,\n\t                FileNew: this.props.FileNew\n\t            }),\n\t            React.createElement(ImagePanelQCSelectedSelector, {\n\t                FileID: this.props.FileID,\n\t                HasQCPerm: this.props.HasQCPerm,\n\t                Selected: this.props.Selected\n\t            }),\n\t            React.createElement(ImagePanelQCCaveatSelector, {\n\t                FileID: this.props.FileID,\n\t                HasQCPerm: this.props.HasQCPerm,\n\t                Caveat: this.props.Caveat,\n\t                SeriesUID: this.props.SeriesUID\n\t            }),\n\t            React.createElement(ImagePanelQCSNRValue, {\n\t                FileID: this.props.FileID,\n\t                SNR: this.props.SNR\n\t            })\n\t        );\n\t    }\n\t});\n\t\n\tvar DownloadButton = React.createClass({\n\t    displayName: 'DownloadButton',\n\t\n\t    render: function render() {\n\t        if (!this.props.FileName || this.props.FileName === '') {\n\t            return React.createElement('span', null);\n\t        }\n\t        var style = {\n\t            margin: 6\n\t        };\n\t        return React.createElement(\n\t            'a',\n\t            { href: this.props.BaseURL + \"/mri/jiv/get_file.php?file=\" + this.props.FileName,\n\t                className: 'btn btn-default', style: style },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-download-alt' }),\n\t            React.createElement(\n\t                'span',\n\t                { className: 'hidden-xs' },\n\t                this.props.Label\n\t            )\n\t        );\n\t    }\n\t});\n\t\n\tvar ImageQCCommentsButton = React.createClass({\n\t    displayName: 'ImageQCCommentsButton',\n\t\n\t    openWindowHandler: function openWindowHandler(e) {\n\t        e.preventDefault();\n\t        window.open(this.props.BaseURL + \"/feedback_mri_popup.php?fileID=\" + this.props.FileID, \"feedback_mri\", \"width=500,height=800,toolbar=no,location=no,\" + \"status=yes,scrollbars=yes,resizable=yes\");\n\t    },\n\t    render: function render() {\n\t        if (!this.props.FileID || this.props.FileID === '') {\n\t            return React.createElement('span', null);\n\t        }\n\t        return React.createElement(\n\t            'a',\n\t            { className: 'btn btn-default',\n\t                href: '#noID',\n\t                onClick: this.openWindowHandler\n\t            },\n\t            React.createElement(\n\t                'span',\n\t                { className: 'text-default' },\n\t                React.createElement('span', { className: 'glyphicon glyphicon-pencil' }),\n\t                React.createElement(\n\t                    'span',\n\t                    { className: 'hidden-xs' },\n\t                    'QC Comments'\n\t                )\n\t            )\n\t        );\n\t    }\n\t});\n\t\n\tvar LongitudinalViewButton = React.createClass({\n\t    displayName: 'LongitudinalViewButton',\n\t\n\t    openWindowHandler: function openWindowHandler(e) {\n\t        e.preventDefault();\n\t        window.open(this.props.BaseURL + \"/brainbrowser/?minc_id=[\" + this.props.OtherTimepoints + \"]\", \"BrainBrowser Volume Viewer\", \"location = 0,width = auto, height = auto, scrollbars=yes\");\n\t    },\n\t    render: function render() {\n\t        if (!this.props.FileID || this.props.FileID === '') {\n\t            return React.createElement('span', null);\n\t        }\n\t        return React.createElement(\n\t            'a',\n\t            { className: 'btn btn-default',\n\t                href: '#noID',\n\t                onClick: this.openWindowHandler\n\t            },\n\t            React.createElement(\n\t                'span',\n\t                { className: 'text-default' },\n\t                React.createElement('span', { className: 'glyphicon glyphicon-eye-open' }),\n\t                React.createElement(\n\t                    'span',\n\t                    { className: 'hidden-xs' },\n\t                    'Longitudinal View'\n\t                )\n\t            )\n\t        );\n\t    }\n\t});\n\t\n\tvar ImageDownloadButtons = React.createClass({\n\t    displayName: 'ImageDownloadButtons',\n\t\n\t    render: function render() {\n\t        return React.createElement(\n\t            'div',\n\t            { className: 'row mri-second-row-panel col-xs-12' },\n\t            React.createElement(ImageQCCommentsButton, { FileID: this.props.FileID,\n\t                BaseURL: this.props.BaseURL\n\t            }),\n\t            React.createElement(DownloadButton, { FileName: this.props.Fullname,\n\t                Label: 'Download Minc',\n\t                BaseURL: this.props.BaseURL\n\t            }),\n\t            React.createElement(DownloadButton, { FileName: this.props.XMLProtocol,\n\t                BaseURL: this.props.BaseURL,\n\t                Label: 'Download XML Protocol'\n\t            }),\n\t            React.createElement(DownloadButton, { FileName: this.props.XMLReport,\n\t                BaseURL: this.props.BaseURL,\n\t                Label: 'Download XML Report'\n\t            }),\n\t            React.createElement(DownloadButton, { FileName: this.props.NrrdFile,\n\t                BaseURL: this.props.BaseURL,\n\t                Label: 'Download NRRD'\n\t            }),\n\t            React.createElement(LongitudinalViewButton, { FileID: this.props.FileID,\n\t                BaseURL: this.props.BaseURL,\n\t                OtherTimepoints: this.props.OtherTimepoints\n\t            })\n\t        );\n\t    }\n\t});\n\tvar ImagePanelBody = React.createClass({\n\t    displayName: 'ImagePanelBody',\n\t\n\t    mixins: [React.addons.PureRenderMixin],\n\t    openWindowHandler: function openWindowHandler(e) {\n\t        e.preventDefault();\n\t        window.open(this.props.BaseURL + \"/brainbrowser/?minc_id=[\" + this.props.FileID + \"]\", \"BrainBrowser Volume Viewer\", \"location = 0,width = auto, height = auto, scrollbars=yes\");\n\t    },\n\t    render: function render() {\n\t        return React.createElement(\n\t            'div',\n\t            { className: 'panel-body' },\n\t            React.createElement(\n\t                'div',\n\t                { className: 'row' },\n\t                React.createElement(\n\t                    'div',\n\t                    { className: 'col-xs-9 imaging_browser_pic' },\n\t                    React.createElement(\n\t                        'a',\n\t                        { href: '#noID', onClick: this.openWindowHandler },\n\t                        React.createElement('img', { className: 'img-checkpic img-responsive',\n\t                            src: this.props.Checkpic })\n\t                    )\n\t                ),\n\t                React.createElement(\n\t                    'div',\n\t                    { className: 'col-xs-3 mri-right-panel' },\n\t                    React.createElement(ImagePanelQCPanel, {\n\t                        FileID: this.props.FileID,\n\t                        FileNew: this.props.FileNew,\n\t                        HasQCPerm: this.props.HasQCPerm,\n\t                        QCStatus: this.props.QCStatus,\n\t                        Caveat: this.props.Caveat,\n\t                        Selected: this.props.Selected,\n\t                        SNR: this.props.SNR,\n\t                        SeriesUID: this.props.SeriesUID\n\t                    })\n\t                )\n\t            ),\n\t            React.createElement(ImageDownloadButtons, {\n\t                BaseURL: this.props.BaseURL,\n\t                FileID: this.props.FileID,\n\t                Fullname: this.props.Fullname,\n\t                XMLProtocol: this.props.XMLProtocol,\n\t                XMLReport: this.props.XMLReport,\n\t                NrrdFile: this.props.NrrdFile,\n\t                OtherTimepoints: this.props.OtherTimepoints\n\t            }),\n\t            this.props.HeadersExpanded ? React.createElement(ImagePanelHeadersTable, {\n\t                HeaderInfo: this.props.HeaderInfo }) : ''\n\t        );\n\t    }\n\t});\n\t\n\tvar ImagePanel = React.createClass({\n\t    displayName: 'ImagePanel',\n\t\n\t    getInitialState: function getInitialState() {\n\t        return {\n\t            BodyCollapsed: false,\n\t            HeadersCollapsed: true\n\t        };\n\t    },\n\t    toggleBody: function toggleBody(e) {\n\t        this.setState({\n\t            BodyCollapsed: !this.state.BodyCollapsed\n\t        });\n\t    },\n\t    toggleHeaders: function toggleHeaders(e) {\n\t        this.setState({\n\t            HeadersCollapsed: !this.state.HeadersCollapsed\n\t        });\n\t    },\n\t    render: function render() {\n\t        return React.createElement(\n\t            'div',\n\t            { className: 'col-xs-12 col-md-6' },\n\t            React.createElement(\n\t                'div',\n\t                { className: 'panel panel-default' },\n\t                React.createElement(ImagePanelHeader, {\n\t                    FileID: this.props.FileID,\n\t                    Filename: this.props.Filename,\n\t                    QCStatus: this.props.QCStatus,\n\t                    onToggleBody: this.toggleBody,\n\t                    onToggleHeaders: this.toggleHeaders,\n\t                    Expanded: !this.state.BodyCollapsed,\n\t                    HeadersExpanded: !this.state.HeadersCollapsed\n\t                }),\n\t                this.state.BodyCollapsed ? '' : React.createElement(ImagePanelBody, {\n\t                    BaseURL: this.props.BaseURL,\n\t\n\t                    FileID: this.props.FileID,\n\t                    Filename: this.props.Filename,\n\t                    Checkpic: this.props.Checkpic,\n\t                    HeadersExpanded: !this.state.HeadersCollapsed,\n\t\n\t                    HeaderInfo: this.props.HeaderInfo,\n\t\n\t                    FileNew: this.props.FileNew,\n\t                    HasQCPerm: this.props.HasQCPerm,\n\t                    QCStatus: this.props.QCStatus,\n\t                    Caveat: this.props.Caveat,\n\t                    Selected: this.props.Selected,\n\t                    SNR: this.props.SNR,\n\t\n\t                    Fullname: this.props.Fullname,\n\t                    XMLProtocol: this.props.XMLProtocol,\n\t                    XMLReport: this.props.XMLReport,\n\t                    NrrdFile: this.props.NrrdFile,\n\t                    OtherTimepoints: this.props.OtherTimepoints,\n\t                    SeriesUID: this.props.SeriesUID\n\t                })\n\t            )\n\t        );\n\t    }\n\t});\n\tvar RImagePanel = React.createFactory(ImagePanel);\n\t\n\twindow.ImagePanelHeader = ImagePanelHeader;\n\twindow.ImagePanelHeadersTable = ImagePanelHeadersTable;\n\twindow.ImageQCDropdown = ImageQCDropdown;\n\twindow.ImageQCStatic = ImageQCStatic;\n\twindow.ImagePanelQCStatusSelector = ImagePanelQCStatusSelector;\n\twindow.ImagePanelQCSelectedSelector = ImagePanelQCSelectedSelector;\n\twindow.ImagePanelQCCaveatSelector = ImagePanelQCCaveatSelector;\n\twindow.ImagePanelQCSNRValue = ImagePanelQCSNRValue;\n\twindow.ImagePanelQCPanel = ImagePanelQCPanel;\n\twindow.DownloadButton = DownloadButton;\n\twindow.ImageQCCommentsButton = ImageQCCommentsButton;\n\twindow.LongitudinalViewButton = LongitudinalViewButton;\n\twindow.ImageDownloadButtons = ImageDownloadButtons;\n\twindow.ImagePanelBody = ImagePanelBody;\n\twindow.RImagePanel = RImagePanel;\n\t\n\texports.default = {\n\t    ImagePanelHeader: ImagePanelHeader,\n\t    ImagePanelHeadersTable: ImagePanelHeadersTable,\n\t    ImageQCDropdown: ImageQCDropdown,\n\t    ImageQCStatic: ImageQCStatic,\n\t    ImagePanelQCStatusSelector: ImagePanelQCStatusSelector,\n\t    ImagePanelQCSelectedSelector: ImagePanelQCSelectedSelector,\n\t    ImagePanelQCCaveatSelector: ImagePanelQCCaveatSelector,\n\t    ImagePanelQCSNRValue: ImagePanelQCSNRValue,\n\t    ImagePanelQCPanel: ImagePanelQCPanel,\n\t    DownloadButton: DownloadButton,\n\t    ImageQCCommentsButton: ImageQCCommentsButton,\n\t    LongitudinalViewButton: LongitudinalViewButton,\n\t    ImageDownloadButtons: ImageDownloadButtons,\n\t    ImagePanelBody: ImagePanelBody,\n\t    RImagePanel: RImagePanel\n\t};\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// modules/imaging_browser/js/ImagePanel.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 00b9a6f859a9e3af5f96","/* exported ImagePanelHeader, ImagePanelHeadersTable, ImageQCDropdown, ImageQCStatic,\n ImagePanelQCStatusSelector, ImagePanelQCSelectedSelector, ImagePanelQCCaveatSelector,\n ImagePanelQCSNRValue, ImagePanelQCPanel, DownloadButton, ImageQCCommentsButton.\n LongitudinalViewButton, ImageDownloadButtons, ImagePanelBody, RImagePanel\n* */\n\nvar ImagePanelHeader = React.createClass({\n  mixins: [React.addons.PureRenderMixin],\n  render: function() {\n    var QCStatusLabel;\n    if (this.props.QCStatus === 'Pass') {\n      QCStatusLabel = <span className=\"label label-success\">\n                         {this.props.QCStatus}\n                      </span>;\n    } else if (this.props.QCStatus === 'Fail') {\n      QCStatusLabel = <span className=\"label label-danger\">\n                         {this.props.QCStatus}\n                      </span>;\n    }\n\n    var arrow;\n    if (this.props.Expanded) {\n      arrow = <span onClick={this.props.onToggleBody}\n         className=\"pull-right clickable glyphicon arrow glyphicon-chevron-up\">\n              </span>;\n    } else {\n      arrow = <span onClick={this.props.onToggleBody}\n     className=\"pull-right clickable glyphicon arrow glyphicon-chevron-down\">\n              </span>;\n    }\n    var headerButton = (\n            <div className=\"pull-right\">\n                <div className=\"btn-group views\">\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-default btn-xs dropdown-toggle\"\n                        onClick={this.props.onToggleHeaders}\n                        aria-expanded={this.props.HeadersExpanded}>\n                        Header Info\n                        </button>\n                    <span className=\"caret\"></span>\n                </div>\n            </div>\n            );\n    return (\n\n            <div className=\"panel-heading\">\n            <input type=\"checkbox\" data-file-id={this.props.FileID}\n                     className=\"mripanel user-success\" />\n                <h3 className=\"panel-title\">{this.props.Filename} </h3>\n                {QCStatusLabel}\n                {arrow}\n                {headerButton}\n            </div>\n        );\n  }\n\n});\n\nvar ImagePanelHeadersTable = React.createClass({\n  componentDidMount: function() {\n    $(ReactDOM.findDOMNode(this)).DynamicTable();\n  },\n  render: function() {\n    return (\n            <table className=\n         \"table table-hover table-bordered header-info col-xs-12 dynamictable\">\n                <tbody>\n                    <tr>\n                        <th className=\"info col-xs-2\">Voxel Size</th>\n                        <td className=\"col-xs-6\" colSpan=\"3\">\n                            {this.props.HeaderInfo.XStep === '' ? ' ' : 'X: ' +\n                                    this.props.HeaderInfo.XStep + \" mm \"}\n                            {this.props.HeaderInfo.YStep === '' ? ' ' : 'Y: ' +\n                                    this.props.HeaderInfo.YStep + \" mm \"}\n                            {this.props.HeaderInfo.ZStep === '' ? ' ' : 'Z: ' +\n                                    this.props.HeaderInfo.ZStep + \" mm \"}\n                        </td>\n                        <th className=\"col-xs-2 info\">Output Type</th>\n                        <td className=\"col-xs-2\">\n                            {this.props.HeaderInfo.OutputType}\n                        </td>\n                    </tr>\n                    <tr>\n                        <th className=\"col-xs-2 info\">Acquisition Date</th>\n                        <td className=\"col-xs-2\">\n                                  {this.props.HeaderInfo.AcquisitionDate}\n                        </td>\n\n                        <th className=\"col-xs-2 info\">Space</th>\n                        <td className=\"col-xs-2\">\n                                  {this.props.HeaderInfo.CoordinateSpace}\n                        </td>\n\n                        <th className=\"col-xs-2 info\">Inserted Date</th>\n                        <td className=\"col-xs-2\">\n                                  {this.props.HeaderInfo.InsertedDate}\n                        </td>\n                    </tr>\n                    <tr>\n                        <th className=\"col-xs-2 info\">Protocol</th>\n                        <td className=\"col-xs-2\">\n                                  {this.props.HeaderInfo.AcquisitionProtocol}\n                        </td>\n\n                        <th className=\"col-xs-2 info\">Series Description</th>\n                        <td className=\"col-xs-2\">\n                                  {this.props.HeaderInfo.SeriesDescription}\n                        </td>\n\n                        <th className=\"col-xs-2 info\">Series Number</th>\n                        <td className=\"col-xs-2\">\n                                  {this.props.HeaderInfo.SeriesNumber}\n                        </td>\n                    </tr>\n                    <tr>\n                        <th className=\"col-xs-2 info\">Echo Time</th>\n                        <td className=\"col-xs-2\">\n                               {this.props.HeaderInfo.EchoTime} ms\n                        </td>\n\n                        <th className=\"col-xs-2 info\">Rep Time</th>\n                        <td className=\"col-xs-2\">\n                               {this.props.HeaderInfo.RepetitionTime} ms\n                        </td>\n\n                        <th className=\"col-xs-2 info\">Slice Thick</th>\n                        <td className=\"col-xs-2\">\n                               {this.props.HeaderInfo.SliceThickness} mm\n                        </td>\n                    </tr>\n                    <tr>\n                        <th className=\"col-xs-2 info\">Number of volumes</th>\n                        <td className=\"col-xs-2\">\n                             {this.props.HeaderInfo.NumVolumes} volumes\n                        </td>\n\n                        <th className=\"col-xs-2 info\">Pipeline</th>\n                        <td className=\"col-xs-2\">\n                             {this.props.HeaderInfo.Pipeline}\n                        </td>\n\n                        <th className=\"col-xs-2 info\">Algorithm</th>\n                        <td className=\"col-xs-2\">\n                             {this.props.HeaderInfo.Algorithm}\n                        </td>\n                    </tr>\n                    <tr>\n                        <th className=\"col-xs-2 info\">\n                             Number of rejected directions\n                        </th>\n                        <td className=\"col-xs-2\">\n                             {this.props.HeaderInfo.TotalRejected}\n                        </td>\n\n                        <th className=\"col-xs-2 info\">\n                              Number of Interlace correlations\n                        </th>\n                        <td className=\"col-xs-2\">\n                             {this.props.HeaderInfo.InterlaceRejected}\n                        </td>\n\n                        <th className=\"col-xs-2 info\">\n                              Number of Gradient-wise correlations\n                        </th>\n                        <td className=\"col-xs-2\">\n                              {this.props.HeaderInfo.IntergradientRejected}\n                        </td>\n                    </tr>\n                    <tr>\n                        <th className=\"col-xs-2 info\">\n                              Number of Slicewise correlations\n                        </th>\n                        <td className=\"col-xs-2\">\n                            {this.props.HeaderInfo.SlicewiseRejected}\n                        </td>\n                        <td className=\"col-xs-4\" colSpan=\"4\">&nbsp;</td>\n                    </tr>\n                </tbody>\n            </table>\n        );\n  }\n});\nvar ImageQCDropdown = React.createClass({\n\n  render: function() {\n    var label = <label>{this.props.Label}</label>;\n    if (this.props.url) {\n      label = <label>\n                 <a href={this.props.url}>{this.props.Label}</a>\n              </label>;\n    }\n    var dropdown;\n    if (this.props.editable) {\n      var options = [];\n      for (var key in this.props.options) {\n        if (this.props.options.hasOwnProperty(key)) {\n          options.push(\n             <option key={this.props.FormName + this.props.FileID + key}\n                         className=\"form-control input-sm option\"\n                         value={key}>{this.props.options[key]}\n             </option>\n          );\n        }\n      }\n      dropdown = (\n                <select name={this.props.FormName +\n                      \"[\" + this.props.FileID + \"]\"}\n                    defaultValue={this.props.defaultValue}\n                    className=\"form-control input-sm\"\n                    >\n                    {options}\n                </select>\n                );\n    } else {\n      dropdown = (\n                <div className=\"col-xs-12\">\n                    {this.props.defaultValue}\n                </div>\n            );\n    }\n    return (\n            <div className=\"row\">\n                {label}\n                {dropdown}\n            </div>\n        );\n  }\n});\nvar ImageQCStatic = React.createClass({\n  render: function() {\n    var staticInfo;\n    staticInfo = (\n            <div className=\"col-xs-12\">\n                {this.props.defaultValue}\n            </div>\n        );\n    return (\n            <div className=\"row\">\n                <label>{this.props.Label}</label>\n                {staticInfo}\n            </div>\n        );\n  }\n});\n\nvar ImagePanelQCStatusSelector = React.createClass({\n  render: function() {\n    var qcStatusLabel;\n    if (this.props.HasQCPerm && this.props.FileNew) {\n      qcStatusLabel = <span>\n                        QC Status <span className=\"text-info\">\n                             ( <span className=\"glyphicon glyphicon-star\">\n                           </span> New )\n                         </span>\n                      </span>;\n    } else {\n      qcStatusLabel = \"QC Status\";\n    }\n\n    return (\n            <ImageQCDropdown\n                    Label={qcStatusLabel}\n                    FormName=\"status\"\n                    FileID={this.props.FileID}\n                    editable={this.props.HasQCPerm}\n                    defaultValue={this.props.QCStatus}\n                    options={ {\"\": \"\", \"Pass\": \"Pass\", \"Fail\": \"Fail\"} }\n            />\n        );\n  }\n});\nvar ImagePanelQCSelectedSelector = React.createClass({\n  render: function() {\n    return (\n            <ImageQCDropdown\n                Label=\"Selected\"\n                FormName=\"selectedvol\"\n                FileID={this.props.FileID}\n                editable={this.props.HasQCPerm}\n                options={ {\"\": \"\", \"true\": \"True\", \"false\": \"False\"} }\n                defaultValue={this.props.Selected}\n            />\n        );\n  }\n});\nvar ImagePanelQCCaveatSelector = React.createClass({\n  render: function() {\n        // Link caveat to MRI Violations if set true\n    var mriViolationsLink = null;\n    if (this.props.SeriesUID && this.props.Caveat === \"1\") {\n      mriViolationsLink = '/mri_violations/?' +\n            'submenu=mri_protocol_check_violations&SeriesUID=' +\n            this.props.SeriesUID + '&filter=true';\n    }\n\n    return (\n            <ImageQCDropdown\n                Label=\"Caveat\"\n                FormName=\"caveat\"\n                FileID={this.props.FileID}\n                editable={this.props.HasQCPerm}\n                options={\n                {\n                  \"\": \"\",\n                  \"1\": \"True\",\n                  \"0\": \"False\"\n                }\n                }\n                defaultValue={this.props.Caveat}\n                url={mriViolationsLink}\n            />\n        );\n  }\n});\nvar ImagePanelQCSNRValue = React.createClass({\n  render: function() {\n    return (\n            <ImageQCStatic\n                Label=\"SNR\"\n                FormName=\"snr\"\n                FileID={this.props.FileID}\n                defaultValue={this.props.SNR}\n            />\n        );\n  }\n});\nvar ImagePanelQCPanel = React.createClass({\n  mixins: [React.addons.PureRenderMixin],\n  render: function() {\n    return (\n            <div className=\"form-group\">\n                <ImagePanelQCStatusSelector\n                    FileID={this.props.FileID}\n                    HasQCPerm={this.props.HasQCPerm}\n                    QCStatus={this.props.QCStatus}\n                    FileNew={this.props.FileNew}\n                    />\n                <ImagePanelQCSelectedSelector\n                    FileID={this.props.FileID}\n                    HasQCPerm={this.props.HasQCPerm}\n                    Selected={this.props.Selected}\n                />\n                <ImagePanelQCCaveatSelector\n                    FileID={this.props.FileID}\n                    HasQCPerm={this.props.HasQCPerm}\n                    Caveat={this.props.Caveat}\n                    SeriesUID={this.props.SeriesUID}\n                />\n                <ImagePanelQCSNRValue\n                    FileID={this.props.FileID}\n                    SNR={this.props.SNR}\n                />\n            </div>\n        );\n  }\n});\n\nvar DownloadButton = React.createClass({\n  render: function() {\n    if (!this.props.FileName || this.props.FileName === '') {\n      return <span />;\n    }\n    var style = {\n      margin: 6\n    };\n    return (\n            <a href={this.props.BaseURL + \"/mri/jiv/get_file.php?file=\" +\n                  this.props.FileName}\n               className=\"btn btn-default\" style={style}>\n                <span className=\"glyphicon glyphicon-download-alt\"></span>\n                <span className=\"hidden-xs\">{this.props.Label}</span>\n            </a>\n        );\n  }\n});\n\nvar ImageQCCommentsButton = React.createClass({\n  openWindowHandler: function(e) {\n    e.preventDefault();\n    window.open(\n            this.props.BaseURL + \"/feedback_mri_popup.php?fileID=\" +\n            this.props.FileID,\n            \"feedback_mri\",\n            \"width=500,height=800,toolbar=no,location=no,\" +\n            \"status=yes,scrollbars=yes,resizable=yes\"\n        );\n  },\n  render: function() {\n    if (!this.props.FileID || this.props.FileID === '') {\n      return <span />;\n    }\n    return (\n            <a className=\"btn btn-default\"\n                href=\"#noID\"\n                onClick={this.openWindowHandler}\n                >\n                    <span className=\"text-default\">\n                        <span className=\"glyphicon glyphicon-pencil\"></span>\n                        <span className=\"hidden-xs\">QC Comments</span>\n                    </span>\n            </a>\n        );\n  }\n});\n\nvar LongitudinalViewButton = React.createClass({\n  openWindowHandler: function(e) {\n    e.preventDefault();\n    window.open(\n            this.props.BaseURL + \"/brainbrowser/?minc_id=[\" +\n            this.props.OtherTimepoints + \"]\",\n            \"BrainBrowser Volume Viewer\",\n            \"location = 0,width = auto, height = auto, scrollbars=yes\"\n        );\n  },\n  render: function() {\n    if (!this.props.FileID || this.props.FileID === '') {\n      return <span />;\n    }\n    return (\n            <a className=\"btn btn-default\"\n               href=\"#noID\"\n               onClick={this.openWindowHandler}\n            >\n                    <span className=\"text-default\">\n                        <span className=\"glyphicon glyphicon-eye-open\"></span>\n                        <span className=\"hidden-xs\">Longitudinal View</span>\n                    </span>\n            </a>\n        );\n  }\n});\n\nvar ImageDownloadButtons = React.createClass({\n  render: function() {\n    return (\n            <div className=\"row mri-second-row-panel col-xs-12\">\n                <ImageQCCommentsButton FileID={this.props.FileID}\n                    BaseURL={this.props.BaseURL}\n                />\n                <DownloadButton FileName={this.props.Fullname}\n                    Label=\"Download Minc\"\n                    BaseURL={this.props.BaseURL}\n                />\n                <DownloadButton FileName={this.props.XMLProtocol}\n                    BaseURL={this.props.BaseURL}\n                    Label=\"Download XML Protocol\"\n                />\n                <DownloadButton FileName={this.props.XMLReport}\n                    BaseURL={this.props.BaseURL}\n                    Label=\"Download XML Report\"\n                />\n                <DownloadButton FileName={this.props.NrrdFile}\n                    BaseURL={this.props.BaseURL}\n                    Label=\"Download NRRD\"\n                />\n                <LongitudinalViewButton FileID={this.props.FileID}\n                    BaseURL={this.props.BaseURL}\n                    OtherTimepoints={this.props.OtherTimepoints}\n                />\n            </div>\n        );\n  }\n});\nvar ImagePanelBody = React.createClass({\n  mixins: [React.addons.PureRenderMixin],\n  openWindowHandler: function(e) {\n    e.preventDefault();\n    window.open(this.props.BaseURL + \"/brainbrowser/?minc_id=[\" +\n                 this.props.FileID + \"]\", \"BrainBrowser Volume Viewer\",\n                 \"location = 0,width = auto, height = auto, scrollbars=yes\");\n  },\n  render: function() {\n    return (\n                <div className=\"panel-body\">\n                    <div className=\"row\">\n                        <div className=\"col-xs-9 imaging_browser_pic\">\n                            <a href=\"#noID\" onClick={this.openWindowHandler}>\n                                <img className=\"img-checkpic img-responsive\"\n                                  src={this.props.Checkpic} />\n                            </a>\n                        </div>\n                        <div className=\"col-xs-3 mri-right-panel\">\n                            <ImagePanelQCPanel\n                                FileID={this.props.FileID}\n                                FileNew={this.props.FileNew}\n                                HasQCPerm={this.props.HasQCPerm}\n                                QCStatus={this.props.QCStatus}\n                                Caveat={this.props.Caveat}\n                                Selected={this.props.Selected}\n                                SNR={this.props.SNR}\n                                SeriesUID={this.props.SeriesUID}\n                            />\n                         </div>\n                    </div>\n                    <ImageDownloadButtons\n                            BaseURL={this.props.BaseURL}\n                            FileID={this.props.FileID}\n                            Fullname={this.props.Fullname}\n                            XMLProtocol={this.props.XMLProtocol}\n                            XMLReport={this.props.XMLReport}\n                            NrrdFile={this.props.NrrdFile}\n                            OtherTimepoints={this.props.OtherTimepoints}\n                        />\n                    {this.props.HeadersExpanded ? <ImagePanelHeadersTable\n                                    HeaderInfo={this.props.HeaderInfo} /> : ''}\n                </div>\n        );\n  }\n});\n\nvar ImagePanel = React.createClass({\n  getInitialState: function() {\n    return {\n      BodyCollapsed: false,\n      HeadersCollapsed: true\n    };\n  },\n  toggleBody: function(e) {\n    this.setState({\n      BodyCollapsed: !this.state.BodyCollapsed\n    });\n  },\n  toggleHeaders: function(e) {\n    this.setState({\n      HeadersCollapsed: !this.state.HeadersCollapsed\n    });\n  },\n  render: function() {\n    return (\n            <div className=\"col-xs-12 col-md-6\">\n                <div className=\"panel panel-default\">\n                <ImagePanelHeader\n                    FileID={this.props.FileID}\n                    Filename={this.props.Filename}\n                    QCStatus={this.props.QCStatus}\n                    onToggleBody={this.toggleBody}\n                    onToggleHeaders={this.toggleHeaders}\n                    Expanded={!this.state.BodyCollapsed}\n                    HeadersExpanded={!this.state.HeadersCollapsed}\n                />\n                {this.state.BodyCollapsed ? '' :\n                    <ImagePanelBody\n                        BaseURL={this.props.BaseURL}\n\n                        FileID={this.props.FileID}\n                        Filename={this.props.Filename}\n                        Checkpic={this.props.Checkpic}\n                        HeadersExpanded={!this.state.HeadersCollapsed}\n\n                        HeaderInfo={this.props.HeaderInfo}\n\n                        FileNew={this.props.FileNew}\n                        HasQCPerm={this.props.HasQCPerm}\n                        QCStatus={this.props.QCStatus}\n                        Caveat={this.props.Caveat}\n                        Selected={this.props.Selected}\n                        SNR={this.props.SNR}\n\n                        Fullname={this.props.Fullname}\n                        XMLProtocol={this.props.XMLProtocol}\n                        XMLReport={this.props.XMLReport}\n                        NrrdFile={this.props.NrrdFile}\n                        OtherTimepoints={this.props.OtherTimepoints}\n                        SeriesUID={this.props.SeriesUID}\n                    /> }\n                </div>\n            </div>\n        );\n  }\n});\nvar RImagePanel = React.createFactory(ImagePanel);\n\nwindow.ImagePanelHeader = ImagePanelHeader;\nwindow.ImagePanelHeadersTable = ImagePanelHeadersTable;\nwindow.ImageQCDropdown = ImageQCDropdown;\nwindow.ImageQCStatic = ImageQCStatic;\nwindow.ImagePanelQCStatusSelector = ImagePanelQCStatusSelector;\nwindow.ImagePanelQCSelectedSelector = ImagePanelQCSelectedSelector;\nwindow.ImagePanelQCCaveatSelector = ImagePanelQCCaveatSelector;\nwindow.ImagePanelQCSNRValue = ImagePanelQCSNRValue;\nwindow.ImagePanelQCPanel = ImagePanelQCPanel;\nwindow.DownloadButton = DownloadButton;\nwindow.ImageQCCommentsButton = ImageQCCommentsButton;\nwindow.LongitudinalViewButton = LongitudinalViewButton;\nwindow.ImageDownloadButtons = ImageDownloadButtons;\nwindow.ImagePanelBody = ImagePanelBody;\nwindow.RImagePanel = RImagePanel;\n\nexport default {\n  ImagePanelHeader,\n  ImagePanelHeadersTable,\n  ImageQCDropdown,\n  ImageQCStatic,\n  ImagePanelQCStatusSelector,\n  ImagePanelQCSelectedSelector,\n  ImagePanelQCCaveatSelector,\n  ImagePanelQCSNRValue,\n  ImagePanelQCPanel,\n  DownloadButton,\n  ImageQCCommentsButton,\n  LongitudinalViewButton,\n  ImageDownloadButtons,\n  ImagePanelBody,\n  RImagePanel\n};\n\n\n\n// WEBPACK FOOTER //\n// ./modules/imaging_browser/jsx/ImagePanel.js"],"sourceRoot":""}